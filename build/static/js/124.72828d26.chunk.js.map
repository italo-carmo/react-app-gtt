{"version":3,"file":"static/js/124.72828d26.chunk.js","mappings":"qMAaA,MAkIA,EAlIeA,KAEb,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KAC9BC,EAAgBC,IAAqBF,EAAAA,EAAAA,UAAS,KAC9CG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,IAChCK,EAAQC,IAAaN,EAAAA,EAAAA,UAAS,MAC9BO,EAAOC,IAAYR,EAAAA,EAAAA,UAAS,IAGnC,IAAIS,EAAQ,CAAC,UAAW,YAAa,WAAS,QAAS,OAAQ,QAAS,QAAS,SAAU,WAAY,UAAW,WAAY,YAE9H,MAAMC,GAAMC,EAAAA,EAAAA,KAEZ,SAASC,EAAeC,GAEtB,MAGMC,EAHeD,EAAOE,QAAQ,GAAGC,QAAQ,IAAK,KAGxBC,MAAM,KAGlCH,EAAO,GAAKA,EAAO,GAAGE,QAAQ,wBAAyB,KAKvD,OAFwBF,EAAOI,KAAK,IAGtC,CA+CA,OALAC,EAAAA,EAAAA,YAAU,KAxCQC,WAChBhB,GAAW,GACX,IAAIiB,QAAYX,EAAIY,UAAU,CAACC,MAAMlB,IACrC,IAAIgB,EAAIG,MAAO,CACb,MAAMC,EAAgBJ,EAChBK,EAAa,GAEnBD,EAAcE,KAAKC,UAEnBH,EAAcE,KAAKE,SAASC,IAC1B,MAAMC,EAAa,IAAIC,KAAKF,EAAIG,KAAKC,WAC/BC,EAAeT,EAAWU,MAAMC,GAASA,EAAKC,MAAQP,IAEvDI,GAUHA,EAAaI,OAAST,EAAIU,OAAOC,QAAO,CAACC,EAAOH,IAAUG,EAAQH,EAAMI,MAAM,IAAM,EACpFR,EAAaS,KAAOd,EAAIc,KAAO,EAC/BT,EAAaU,aAAef,EAAIe,aAAe,GAV/CnB,EAAWoB,KAAK,CACdR,IAAKP,EACLQ,MAAOT,EAAIU,OAAOC,QAAO,CAACC,EAAOH,IAAUG,EAAQH,EAAMI,MAAM,IAAM,EACrEC,IAAKd,EAAIc,KAAO,EAChBC,YAAaf,EAAIe,aAAe,GAOpC,IAKJE,QAAQC,IAAItB,GACblB,EAASkB,EAER,CACAtB,GAAW,EAAM,EAMjBkB,EAAW,GACX,KAIA2B,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAK,CAACC,UAAU,OAAOC,MAAO,CAACC,cAAe,SAAUC,UAAW,OAAQC,UAAU,KAAMP,SAAA,EAC5FF,EAAAA,EAAAA,KAAA,OAAKM,MAAO,CAAEI,QAAS,OAAQC,WAAY,SAAUC,aAAc,OAAQC,WAAW,GAAIC,YAAY,OAGxGd,EAAAA,EAAAA,KAAA,OAAKM,MAAO,CAACI,QAAS,OAAQC,WAAY,SAAUI,eAAgB,UAAUb,UAC9EC,EAAAA,EAAAA,MAAA,SAAOG,MAAO,CAACU,MAAO,MAAOJ,aAAc,IAAIV,SAAA,EAC7CC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,YAGJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gBAGJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,SAGJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,yBAGJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,2BAIL5C,EAAM2D,KAAI,CAAC7B,EAAM8B,KAEdf,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAK1C,EAAM4B,EAAKC,QAChBW,EAAAA,EAAAA,KAAA,MAAAE,SAAKvC,EAAeyB,EAAKE,UACzBU,EAAAA,EAAAA,KAAA,MAAAE,SAAKd,EAAKO,OACVK,EAAAA,EAAAA,KAAA,MAAAE,SAAKvC,EAAeyB,EAAKQ,gBACzBI,EAAAA,EAAAA,KAAA,MAAAE,SAAKvC,EAAeyB,EAAKQ,YAAY,gBAOxC1C,IACO8C,EAAAA,EAAAA,KAAA,OAAMM,MAAO,CACXa,SAAU,WACVC,KAAM,MACNC,IAAK,MACLC,UAAW,wBACXC,OAAO,IACPrB,UACAF,EAAAA,EAAAA,KAACwB,EAAAA,EAAc,CAACC,OAAO,EAAMT,MAAM,eAK9C,C","sources":["views/estatistica_carga_pax/Main.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\nimport styles from './styles.css'\nimport {\n  CButton,\n  CCard,\n\n} from '@coreui/react'\nimport useApi from 'src/services/Api'\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { forwardRef } from 'react'\nimport LoadingSpinner from 'src/components/Loading'\n\n\nconst Etapas = () => {\n\n  const [etapas, setEtapas] = useState([])\n  const [etapasFiltered, setEtapasFiltered] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [limite, setLimite] = useState(100)\n  const [dados, setDados] = useState([])\n  \n\n  let meses = [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"]\n\n  const Api = useApi()\n\n  function formatarNumero(numero) {\n    // Converte o número para uma string e substitui o ponto por vírgula\n    const numeroString = numero.toFixed(2).replace('.', ',');\n  \n    // Separa a parte inteira da parte decimal\n    const partes = numeroString.split(',');\n  \n    // Adiciona ponto como separador de milhares na parte inteira\n    partes[0] = partes[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\n  \n    // Junta as partes novamente\n    const numeroFormatado = partes.join(',');\n  \n    return numeroFormatado;\n  }\n\n  const getEtapas = async () => {\n    setLoading(true)\n    let res = await Api.getEtapas({limit:limite})\n    if(!res.error) {\n      const respostaQuery = res /* Sua resposta de query aqui */;\n      const voosPorMes = [];\n      \n      respostaQuery.data.reverse()\n\n      respostaQuery.data.forEach((voo) => {\n        const mesPartida = new Date(voo.dep).getMonth();\n        const mesExistente = voosPorMes.find((item) => item.mes === mesPartida);\n      \n        if (!mesExistente) {\n          // Se o mês ainda não existir no array, adicione-o\n          voosPorMes.push({\n            mes: mesPartida,\n            carga: voo.Cargas.reduce((total, carga) => total + carga.peso, 0) || 0,\n            pax: voo.pax || 0,\n            combustivel: voo.combustivel || 0,\n          });\n        } else {\n          // Se o mês já existir no array, atualize as estatísticas existentes\n          mesExistente.carga += voo.Cargas.reduce((total, carga) => total + carga.peso, 0) || 0;\n          mesExistente.pax += voo.pax || 0;\n          mesExistente.combustivel += voo.combustivel || 0;\n        }\n      });\n      \n\n    // Agora voosPorMes contém as estatísticas desejadas para cada mês\n    console.log(voosPorMes);\n   setDados(voosPorMes);\n\n    }\n    setLoading(false)\n  }\n\n  \n  \n  useEffect(()=>{\n    getEtapas()\n  },[])\n\n\n  return (\n    <>\n      <CCard className=\"mb-6\" style={{flexDirection: 'column', overflowX: 'auto', maxHeight:700 }}>\n      <div style={{ display: 'flex', alignItems: 'center', marginBottom: '20px', marginLeft:10, marginRight:10 }}>\n\n    </div>\n    <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n    <table style={{width: '80%', marginBottom: 20}}>\n      <tr>\n        <th>\n          Mês\n        </th>\n        <th>\n          Carga - Kg\n        </th>\n        <th>\n          Pax\n        </th>\n        <th>\n          Combustível - Kg\n        </th>\n        <th>\n          Combustível - Lt\n        </th>\n      </tr>\n      {dados.map((item, index)=>{\n        return (\n          <tr>\n            <td>{meses[item.mes]}</td>\n            <td>{formatarNumero(item.carga)}</td>\n            <td>{item.pax}</td>\n            <td>{formatarNumero(item.combustivel)}</td>\n            <td>{formatarNumero(item.combustivel/0.8)}</td>\n          </tr>\n        )\n      })}\n    </table>\n    </div>\n\n        {loading &&\n                <div  style={{\n                  position: 'absolute',\n                  left: '50%',\n                  top: '80%',\n                  transform: 'translate(-50%, -50%)',\n                  zIndex:99\n                }}>\n                  <LoadingSpinner black={true} width=\"50px\" />\n                </div>\n        }\n      </CCard>\n     \n    </>\n  )\n}\n\nexport default Etapas\n"],"names":["Etapas","etapas","setEtapas","useState","etapasFiltered","setEtapasFiltered","loading","setLoading","limite","setLimite","dados","setDados","meses","Api","useApi","formatarNumero","numero","partes","toFixed","replace","split","join","useEffect","async","res","getEtapas","limit","error","respostaQuery","voosPorMes","data","reverse","forEach","voo","mesPartida","Date","dep","getMonth","mesExistente","find","item","mes","carga","Cargas","reduce","total","peso","pax","combustivel","push","console","log","_jsx","_Fragment","children","_jsxs","CCard","className","style","flexDirection","overflowX","maxHeight","display","alignItems","marginBottom","marginLeft","marginRight","justifyContent","width","map","index","position","left","top","transform","zIndex","LoadingSpinner","black"],"sourceRoot":""}
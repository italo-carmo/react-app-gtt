{"version":3,"file":"static/js/161.2f036b4b.chunk.js","mappings":"+JAGe,SAASA,EAAcC,GAAkC,IAADC,EAAAD,EAA/BE,MAAAA,OAAK,IAAAD,EAAG,KAAIA,EAAAE,EAAAH,EAAEI,MAAAA,OAAK,IAAAD,EAAG,OAAMA,EAClE,OACEE,EAAAA,EAAAA,KAAA,OAAKC,MAAM,UAASC,UAClBF,EAAAA,EAAAA,KAAA,OAAKC,MAAM,eAAeE,IAAKN,EAAQ,4CAA8C,sCAAuCE,MAAOA,KAGzI,C,2KCqCA,EAjCkB,SAAHJ,GAAUA,EAALS,MAAY,IAC1BC,GAAMC,EAAAA,EAAAA,KACVC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAAoCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAhCE,GAAFD,EAAA,GAAeA,EAAA,IAEhCE,GAA6BC,EAAAA,EAAAA,IAAO,CAACC,SAAU,aAAvCC,EAAKH,EAALG,MAAOC,EAASJ,EAATI,UAETC,EAAQ,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACC1B,EAAI2B,aAAa,MAAK,QAAlCL,EAAGE,EAAAI,MAECC,QACNtB,EAAUe,EAAIQ,KAAKC,YACnBrB,GAAc,IACf,wBAAAc,EAAAQ,OAAA,GAAAX,EAAA,KAEF,kBARa,OAAAJ,EAAAgB,MAAA,KAAAC,UAAA,KAed,OALAC,EAAAA,EAAAA,YAAU,WACRnB,GACF,GAAE,KAIAoB,EAAAA,EAAAA,MAAA,OAAAvC,SAAA,EACAF,EAAAA,EAAAA,KAAA,UAAQ0C,QAAS,kBAAMvB,GAAO,EAACjB,SAAC,kBAChCF,EAAAA,EAAAA,KAAA,OAAK2C,IAAKvB,EAAUlB,UACpBF,EAAAA,EAAAA,KAAA,OAAKG,IAAG,yBAAAyC,OAA2BjC,GAAUkC,IAAI,qBAKrD,C","sources":["components/Loading/index.js","views/relatorio/index.js"],"sourcesContent":["import React from \"react\";\nimport \"./styles.css\";\n\nexport default function LoadingSpinner({black = null, width = '40px'}) {\n  return (\n    <div class=\"spinner\">\n      <img class=\"fas fa-plane\" src={black ? \"https://www.1gtt.com.br/app/rec-black.png\" : \"https://www.1gtt.com.br/app/rec.png\"} width={width}/>\n    </div>\n  );\n}","import React, { useEffect, useState, useRef } from 'react'\nimport { usePDF } from 'react-to-pdf';\nimport styles from './styles.css'\nimport {\n  CButton,\n  CCard,\n\n} from '@coreui/react'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport useApi from 'src/services/Api'\nimport LoadingSpinner from 'src/components/Loading'\nimport { useLocation } from 'react-router-dom';\n\nconst Relatorio = ({match}) => {\n  let Api = useApi()\n  const [base64, setBase64] = useState('')\n  const [dataLoaded, setDataLoaded] = useState(false); // Novo estado\n\n  const { toPDF, targetRef } = usePDF({filename: 'page.pdf'});\n\n  const getEtapa = async () => {\n    let res = await Api.getEtapaById(9474)\n\n    if(!res.error) {\n      setBase64(res.data.assinatura)\n      setDataLoaded(true); // Marcar os dados como carregados\n    }\n\n  }\n\n  useEffect(()=>{\n    getEtapa()\n  },[])\n\n\n  return (\n    <div>\n    <button onClick={() => toPDF()}>Download PDF</button>\n    <div ref={targetRef}>\n    <img src={`data:image/png;base64,${base64}`} alt=\"Base64 Image\" />\n    </div>\n\n </div>\n  )\n}\n\nexport default Relatorio\n"],"names":["LoadingSpinner","_ref","_ref$black","black","_ref$width","width","_jsx","class","children","src","match","Api","useApi","_useState","useState","_useState2","_slicedToArray","base64","setBase64","_useState3","_useState4","setDataLoaded","_usePDF","usePDF","filename","toPDF","targetRef","getEtapa","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","getEtapaById","sent","error","data","assinatura","stop","apply","arguments","useEffect","_jsxs","onClick","ref","concat","alt"],"sourceRoot":""}
{"version":3,"file":"static/js/645.f2867668.chunk.js","mappings":"6OAgBA,MA+LA,EA/LwBA,MACLC,EAAAA,EAAAA,MAAjB,MACOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,KAClCK,EAAeC,IAAoBN,EAAAA,EAAAA,UAAS,IAE7CO,GAAMC,EAAAA,EAAAA,KASNC,EAAsBC,IAE1B,IAAKC,EAAKC,EAAKC,GAAOH,EAAKI,MAAM,KACjC,OAAOD,EAAI,IAAID,EAAI,IAAID,CAAG,GAyB5BI,EAAAA,EAAAA,YAAU,KAtBOC,WACfd,GAAW,GACX,IAAIe,QAAYV,EAAIW,YACpB,GAAID,EAAIE,MAeN,OAFAC,MAAMH,EAAIE,YACVjB,GAAW,GAbKe,EAAIP,KAAKW,KAAIC,GACxBA,EAAKC,kBACND,EAAKC,iBAlBWb,KAEtB,IAAKG,EAAKD,EAAKD,GAAOD,EAAKI,MAAM,KACjC,OAAOH,EAAI,IAAIC,EAAI,IAAIC,CAAG,EAeIW,CAAeF,EAAKC,kBACrCD,IAEPA,EAAKC,iBAAmB,aACjBD,KAGXvB,EAASkB,EAAIP,MACbR,GAAW,EAKb,EAIAuB,EAAU,GACV,IAGF,MAkBMC,EAAYC,IAChB,MAGMC,EAHaD,EAAME,OAAOC,MAGAC,QAAQ,MAAO,IAG/C,IAAIC,EAAiB,GAWrB,OAVIJ,EAAaK,OAAS,IACxBD,GAAkBJ,EAAaM,UAAU,EAAG,GACxCN,EAAaK,QAAU,IACzBD,GAAkB,IAAMJ,EAAaM,UAAU,EAAG,GAC9CN,EAAaK,QAAU,IACzBD,GAAkB,IAAMJ,EAAaM,UAAU,EAAG,MAKjDF,CAAc,EAIjBG,EAAwBR,IAE5B,IAAIS,EAAa,IAAItC,GACrBsC,EAAaA,EAAWf,KAAIC,GACvBA,EAAKe,IAAMlC,EAASkC,IACrBf,EAAKC,iBAAmBG,EAASC,GAC1BL,GAEAA,IAGXhB,EAAiBoB,EAASC,IAC1B5B,EAASqC,EAAW,EAoBtB,OACEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACG,EAAAA,GAAK,CAACC,UAAU,OAAOC,MAAO,CAACC,cAAe,SAAUC,UAAU,KAAML,UACzEF,EAAAA,EAAAA,KAAA,OAAMQ,MAAM,aAAYN,UACpBO,EAAAA,EAAAA,MAAA,SAAOJ,MAAO,CAACK,aAAa,IAAIR,SAAA,EAChCO,EAAAA,EAAAA,MAAA,MAAAP,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,WACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,wBAELvC,IACOqC,EAAAA,EAAAA,KAAA,OAAMK,MAAO,CACXM,SAAU,WACVC,KAAM,MACNC,IAAK,MACLC,UAAW,yBACXZ,UACAF,EAAAA,EAAAA,KAACe,EAAAA,EAAc,CAACC,OAAO,EAAMC,MAAM,YAIzCzD,EAAMuB,KAAI,CAACmC,EAAIC,KAEXV,EAAAA,EAAAA,MAAA,MAAAP,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAKgB,EAAGE,SAASC,YACjBrB,EAAAA,EAAAA,KAAA,MAAAE,SAAKgB,EAAGI,MAAMC,KAAK,IAAIL,EAAGM,eAC1BxB,EAAAA,EAAAA,KAAA,MAAAE,UACAF,EAAAA,EAAAA,KAAA,UACJR,MAAO0B,EAAGO,MACVC,SAAWC,GAhGAjD,OAAO+C,EAAO1B,KACrC,IAAIpB,QAAYV,EAAI2D,YAAY7B,EAAI,CAAC0B,UACrC,OAAG9C,EAAIE,WACLC,MAAMH,EAAIE,YAGVC,MAAMH,EAAIkD,IAEZ,EAyFcC,CAAiBC,OAAOJ,EAAEpC,OAAOC,OAAQ0B,EAAGnB,IAC7CG,SAEA8B,MAAMC,KAAK,CAAEtC,OAAQ,KAAM,CAACuC,EAAGC,IAAMA,EAAI,IAAGpD,KAAKqD,IAChDpC,EAAAA,EAAAA,KAAA,UAAkBR,MAAO4C,EAAIlC,SAC1BkC,GADUA,UAMXpC,EAAAA,EAAAA,KAAA,MAAAE,UACEO,EAAAA,EAAAA,MAAA,OAAKJ,MAAO,CAACgC,QAAS,OAAQC,eAAe,SAAUC,WAAY,SAAUC,UAAW,UAAUtC,SAAA,EACpGF,EAAAA,EAAAA,KAAA,SACEyC,SAAU5E,EAASkC,IAAMmB,EAAGnB,GAC5BP,MAAO0B,EAAGjC,iBACVyC,SAAU7B,EACV6C,UAAW,GACXrC,MAAO,CAACsC,OAAQ,iBAAkB1B,MAAM,IAAK2B,UAAW,YAGxD/E,EAASkC,IAAMmB,EAAGnB,IAClBC,EAAAA,EAAAA,KAAA,UAAQ6C,QAASA,IAhEhBnE,WACnB,IAAIC,QAAYV,EAAI6E,sBAAsB9D,EAAKe,GAAI,CAACd,iBAAkBd,EAAmBa,EAAKC,oBAC9F,OAAGN,EAAIE,OACLC,MAAMH,EAAIE,YACVf,EAAY,UAGZA,EAAY,GAEd,EAuDuCiF,CAAa7B,GAAMb,MAAO,CAAC2C,WAAW,GAAI5C,UAAU,eAAcF,SAAC,YAExFF,EAAAA,EAAAA,KAAA,OAAK6C,QAASA,KArEhC/E,EAqEoDoD,EAAI,EAACb,MAAO,CAAC2C,WAAW,GAAIC,IAAI,sCAAsChC,MAAM,2BAY7H,C","sources":["views/turmas-de-chegada/Main.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\nimport styles from './styles.css'\nimport {\n  CButton,\n  CCard,\n\n} from '@coreui/react'\nimport useApi from 'src/services/Api'\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { forwardRef } from 'react'\nimport LoadingSpinner from 'src/components/Loading'\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport moment from 'moment'\nimport { usePDF } from 'react-to-pdf';\nimport MaskedObsTextArea from '../../components/masked-inpput-text-obs-textarea'\n\nconst ListaQuadrinhos = () => {\n  const navigate = useNavigate()\n  const [dados, setDados] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [dataEdit, setDataEdit] = useState('')\n  const [dataEditInput, setDataEditInput] = useState('')\n  \n  const Api = useApi()\n\n\n  const editFormatData = (data) => {\n\n    let [ano, mes, dia] = data.split('-')\n    return dia+'/'+mes+'/'+ano\n  }\n\n  const editFormatDataBack = (data) => {\n\n    let [dia, mes, ano] = data.split('/')\n    return ano+'-'+mes+'-'+dia\n  }\n\n  const getDados = async () => {\n    setLoading(true)\n    let res = await Api.getTurmas()\n    if(!res.error) {\n      let dados_get = res.data.map(item=>{\n        if(item.data_operacional) {\n          item.data_operacional = editFormatData(item.data_operacional)\n          return item\n        } else {\n          item.data_operacional = '00/00/0000'\n          return item\n        }\n      })\n      setDados(res.data)\n      setLoading(false)\n    } else {\n      alert(res.error)\n      setLoading(false)\n      return\n    }\n  }\n  \n  useEffect(()=>{\n    getDados()\n  },[])\n\n\n  const inputStyle = {\n    padding: '5px',\n    borderRadius: '10px',\n    border: '1px solid #000',\n  };\n\n  const handleChangeItem = async (turma, id) => {\n    let res = await Api.updateTurma(id, {turma})\n    if(res.error) {\n      alert(res.error)\n      return\n    } else {\n      alert(res.msg)\n      return\n    }\n\n  }\n\n  const editData = (event) => {\n    const inputValue = event.target.value;\n\n    // Remove caracteres não numéricos\n    const numericValue = inputValue.replace(/\\D/g, '');\n\n    // Formata o valor no formato de data\n    let formattedValue = '';\n    if (numericValue.length > 0) {\n      formattedValue += numericValue.substring(0, 2);\n      if (numericValue.length >= 3) {\n        formattedValue += '/' + numericValue.substring(2, 4);\n        if (numericValue.length >= 5) {\n          formattedValue += '/' + numericValue.substring(4, 8);\n        }\n      }\n    }\n\n    return(formattedValue);\n  };\n  \n\n  const handleChangeDataItem = (event) => {\n\n    let dados_copy = [...dados] \n    dados_copy = dados_copy.map(item=>{\n      if(item.id == dataEdit.id) {\n        item.data_operacional = editData(event)\n        return item\n      } else {\n        return item\n      }\n    })\n    setDataEditInput(editData(event))\n    setDados(dados_copy)\n\n  }\n\n  const handleClickEdit = (item) => {\n    setDataEdit(item)\n  }\n\n  const handleSalvar = async (item) => {\n    let res = await Api.updateDataOperacional(item.id, {data_operacional: editFormatDataBack(item.data_operacional)})\n    if(res.error) {\n      alert(res.error)\n      setDataEdit('')\n      return\n    } else {\n      setDataEdit('')\n      return\n    }\n  }\n\n  return (\n    <>\n      <CCard className=\"mb-6\" style={{flexDirection: 'column', minHeight:600 }}>\n      <div  class=\"table-area\">\n          <table style={{marginBottom:20}}>\n          <tr>\n            <th>Trigrama</th>\n            <th>Nome de Guerra</th>\n            <th>Turma</th>\n            <th>Data Operacional</th>\n          </tr>\n          {loading &&\n                  <div  style={{\n                    position: 'absolute',\n                    left: '50%',\n                    top: '40%',\n                    transform: 'translate(-50%, -50%)',\n                  }}>\n                    <LoadingSpinner black={true} width=\"200px\" />\n                  </div>\n          }\n            {\n              dados.map((it, idx)=>{\n                return (\n                  <tr>\n                    <td>{it.Trigrama.trigrama}</td>\n                    <td>{it.Posto.nome+' '+it.nome_guerra}</td>\n                    <td>\n                    <select\n                value={it.turma}\n                onChange={(e) =>\n                  handleChangeItem(Number(e.target.value), it.id)\n                }\n              >\n                {Array.from({ length: 30 }, (_, i) => i + 0).map((num) => (\n                  <option key={num} value={num}>\n                    {num}\n                  </option>\n                ))}\n              </select>\n                    </td>\n                    <td>\n                      <div style={{display: 'flex', justifycontent:'center', alignItems: 'center', alignSelf: 'center'}}>\n                    <input\n                      disabled={dataEdit.id == it.id ? false : true}\n                      value={it.data_operacional}\n                      onChange={handleChangeDataItem}\n                      maxLength={10}\n                      style={{border: '1px solid #000', width:100, textAlign: 'center'}}\n                    />\n                    {\n                      dataEdit.id == it.id ? \n                      <button onClick={()=>handleSalvar(it)}  style={{marginLeft:5}} className='botao-salvar'>Salvar</button>\n                      :\n                      <img onClick={()=>handleClickEdit(it)} style={{marginLeft:3}} src=\"https://www.1gtt.com.br/app/pen.png\" width=\"20px\" />\n                    }\n                    </div>\n                    </td>\n                  </tr>\n                )\n              })\n            }\n          </table> \n     \n      </div>\n      </CCard>\n    </>\n  )\n}\n\nexport default ListaQuadrinhos\n"],"names":["ListaQuadrinhos","useNavigate","dados","setDados","useState","loading","setLoading","dataEdit","setDataEdit","dataEditInput","setDataEditInput","Api","useApi","editFormatDataBack","data","dia","mes","ano","split","useEffect","async","res","getTurmas","error","alert","map","item","data_operacional","editFormatData","getDados","editData","event","numericValue","target","value","replace","formattedValue","length","substring","handleChangeDataItem","dados_copy","id","_jsx","_Fragment","children","CCard","className","style","flexDirection","minHeight","class","_jsxs","marginBottom","position","left","top","transform","LoadingSpinner","black","width","it","idx","Trigrama","trigrama","Posto","nome","nome_guerra","turma","onChange","e","updateTurma","msg","handleChangeItem","Number","Array","from","_","i","num","display","justifycontent","alignItems","alignSelf","disabled","maxLength","border","textAlign","onClick","updateDataOperacional","handleSalvar","marginLeft","src"],"sourceRoot":""}
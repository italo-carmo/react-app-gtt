{"version":3,"file":"static/js/653.3d19b57b.chunk.js","mappings":"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","sources":["views/turmas-de-chegada/Main.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\nimport styles from './styles.css'\nimport {\n  CButton,\n  CCard,\n\n} from '@coreui/react'\nimport useApi from 'src/services/Api'\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { forwardRef } from 'react'\nimport LoadingSpinner from 'src/components/Loading'\nimport { useNavigate } from 'react-router-dom';\nimport moment from 'moment'\nimport { usePDF } from 'react-to-pdf';\nimport MaskedObsTextArea from '../../components/masked-inpput-text-obs-textarea'\n\nconst ListaQuadrinhos = () => {\n  const navigate = useNavigate()\n  const [dados, setDados] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [loadingExterior, setLoadingExterior] = useState(false)\n\n  \n  const Api = useApi()\n\n  const getDados = async () => {\n    setLoading(true)\n    let res = await Api.getTurmas()\n    if(!res.error) {\n      setDados(res.data)\n      setLoading(false)\n    } else {\n      alert(res.error)\n      setLoading(false)\n      return\n    }\n  }\n  \n  useEffect(()=>{\n    getDados()\n  },[])\n\n\n  const inputStyle = {\n    padding: '5px',\n    borderRadius: '10px',\n    border: '1px solid #000',\n  };\n\n  const handleChangeItem = async (turma, id) => {\n    let res = await Api.updateTurma(id, {turma})\n    if(res.error) {\n      alert(res.error)\n      return\n    } else {\n      alert(res.msg)\n      return\n    }\n\n  }\n\n  return (\n    <>\n      <CCard className=\"mb-6\" style={{flexDirection: 'column', minHeight:600 }}>\n      <div  class=\"table-area\">\n          <table style={{marginBottom:20}}>\n          <tr>\n            <th>Trigrama</th>\n            <th>Nome de Guerra</th>\n            <th>Turma</th>\n          </tr>\n          {loading &&\n                  <div  style={{\n                    position: 'absolute',\n                    left: '50%',\n                    top: '40%',\n                    transform: 'translate(-50%, -50%)',\n                  }}>\n                    <LoadingSpinner black={true} width=\"200px\" />\n                  </div>\n          }\n            {\n              dados.map(it=>{\n                return (\n                  <tr>\n                    <td>{it.Trigrama.trigrama}</td>\n                    <td>{it.Posto.nome+' '+it.nome_guerra}</td>\n                    <td>\n                    <select\n                value={it.turma}\n                onChange={(e) =>\n                  handleChangeItem(Number(e.target.value), it.id)\n                }\n              >\n                {Array.from({ length: 30 }, (_, i) => i + 0).map((num) => (\n                  <option key={num} value={num}>\n                    {num}\n                  </option>\n                ))}\n              </select>\n                    </td>\n                  </tr>\n                )\n              })\n            }\n          </table> \n     \n      </div>\n      </CCard>\n    </>\n  )\n}\n\nexport default ListaQuadrinhos\n"],"names":["useNavigate","_useState","useState","_useState2","_slicedToArray","dados","setDados","_useState3","_useState4","loading","setLoading","_useState5","_useState6","Api","useApi","getDados","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","getTurmas","sent","error","data","alert","abrupt","stop","apply","arguments","useEffect","handleChangeItem","_ref2","_callee2","turma","id","_context2","updateTurma","msg","_x","_x2","_jsx","_Fragment","children","CCard","className","style","flexDirection","minHeight","class","_jsxs","marginBottom","position","left","top","transform","LoadingSpinner","black","width","map","it","Trigrama","trigrama","Posto","nome","nome_guerra","value","onChange","e","Number","target","Array","from","length","_","i","num"],"sourceRoot":""}
{"version":3,"file":"static/js/87.775fd871.chunk.js","mappings":"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","sources":["components/grafico-barras/index.js","views/grafico-pau-de-sebo/index.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport {\n  Chart,\n  CategoryScale,\n  LinearScale,\n  BarController,\n  BarElement,\n  LineController,\n  LineElement,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport annotationPlugin from 'chartjs-plugin-annotation';\n\nChart.register(\n  CategoryScale,\n  LinearScale,\n  BarController,\n  BarElement,\n  LineController,\n  LineElement,\n  Tooltip,\n  Legend,\n  annotationPlugin\n);\n\n\nconst BarChart = ({ data, media }) => {\n  const chartRef = useRef(null);\n  \n  const convertDurationToHours = (duration) => {\n    if (duration !== '00:00') {\n      const [hours, minutes] = duration.split(':');\n      const totalHours = parseInt(hours, 10) + parseInt(minutes, 10) / 60;\n      return totalHours;\n    } else {\n      return 0;\n    }\n  };\n\n\n\n\n  useEffect(() => {\n    if (data && data.length > 0) {\n      const labels = data.map((item) => item.trigrama);\n      let hours = []\n      data.forEach((item) => {\n\n        hours.push(convertDurationToHours(item.horas))\n    });\n      const ctx = document.getElementById('bar-chart').getContext('2d');\n\n      const chart = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: labels,\n          datasets: [\n            {\n              label: 'Horas Voadas',\n              data: hours,\n              backgroundColor: 'rgba(75, 192, 192, 0.2)',\n              borderColor: 'rgba(75, 192, 192, 1)',\n              borderWidth: 1,\n            },\n          ],\n        },\n        options: {\n          responsive: true,\n          scales: {\n            y: {\n              display: true,\n              title: {\n                display: true,\n                text: 'Horas Voadas',\n              },\n              suggestedMax: 140,\n              suggestedMin: 0, // Adicione essa linha\n              ticks: {\n                stepSize: 10,\n              },\n            },\n            x: {\n              display: true,\n              title: {\n                display: true,\n                text: 'Trigramas',\n              },\n            },\n          },\n          plugins: {\n            annotation: {\n                annotations: {\n                  line1: {\n                    type: 'line',\n                    yMin: media,\n                    yMax: media,\n                    borderColor: 'rgb(255, 99, 132)',\n                    borderWidth: 2,\n                  }\n                }\n              }\n          },\n        },\n      });\n\n      chartRef.current = chart;\n    }\n  }, [data]);\n\n  return <canvas id=\"bar-chart\" width=\"400\" height=\"200\" />;\n};\n\nexport default BarChart;\n","import React, { useEffect, useState } from 'react'\nimport styles from './styles.css'\nimport GraficoBarras from '../../components/grafico-barras/index'\nimport LoadingSpinner from 'src/components/Loading'\nimport {\n  CCard,\n\n} from '@coreui/react'\nimport { Alert } from '@coreui/coreui'\nimport useApi from 'src/services/Api'\n\n\nconst PauDeSebo = () => {\n\n  const Api = useApi()\n  const [dados, setDados] = useState([])\n  const [funcao, setFuncao] = useState('Piloto')\n  const [media, setMedia] = useState(0)\n  const [mediaTotal, setMediaTotal] = useState(0)\n  const [loading, setLoading] = useState(false)\n\n  var dados_excessao = {\n    excessoes: [{\n        trigrama: 'LTE',\n        horas: '20:00'\n      },\n      {\n        trigrama: 'FAC',\n        horas: '20:00'\n      },\n      {\n        trigrama: 'PTS',\n        horas: '60:00'\n      }]\n    }\n\n  var porcentagens = [0.04, 0.08, 0.16, 0.24, 0.32, 0.4, 0.5, 0.61, 0.72, 0.82, 0.92, 1]\n  var hoje = new Date()\n  var mes_atual = hoje.getMonth()\n  var porcentagem_atual = porcentagens[mes_atual]\n\n  const convertDurationToHours = (duration) => {\n    if (duration !== '00:00') {\n      const [hours, minutes] = duration.split(':');\n      const totalHours = parseInt(hours, 10) + parseInt(minutes, 10) / 60;\n      return totalHours;\n    } else {\n      return 0;\n    }\n  };\n  \n\n  const getDados = async () => {\n    setLoading(true)\n    let res_esforco = await Api.getEsforcoAereo()\n    var horas_totais = 0\n    res_esforco.data.forEach(item => {\n        if((item.nome).trim() == 'TOTAL') {\n          horas_totais = item.alocado\n        }\n      })\n    let horas_parsed = convertDurationToHours(horas_totais)\n    let horas_excessao = 0\n    let res = await Api.getPauDeSebo()\n    let dados_to_add = []\n    if(!res.error) {\n      res.data.forEach(item => {\n        if(item.Funcao == funcao) {\n          console.log(item.Trigrama)\n          dados_to_add.push({trigrama:item.Trigrama, horas: item.Horas})\n          if(funcao == 'Piloto') {\n            let index = dados_excessao.excessoes.findIndex(i=>i.trigrama == item.Trigrama)\n            if(index >=0) {\n                horas_excessao += convertDurationToHours(dados_excessao.excessoes[index].horas)\n            }\n          }\n        }\n      });\n      setMediaTotal(((horas_parsed-horas_excessao)/((dados_to_add.length-dados_excessao.excessoes.length)/2)))\n      setMedia(((horas_parsed-horas_excessao)/((dados_to_add.length-dados_excessao.excessoes.length)/2)*porcentagem_atual))\n      setDados(dados_to_add)\n      setLoading(false)\n    }\n  }\n\n  const formatDuration = (value) => {\n    const hours = Math.floor(value);\n    const minutes = Math.floor((value - hours) * 60);\n  \n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`;\n  };\n\n\n\n  useEffect(()=>{\n    getDados()\n  },[])\n\n  //let dados = [{trigrama: 'ITL', horas:'120:00'},{trigrama: 'POR', horas:'110:00'},{trigrama: 'TNT', horas:'130:00'}]\n  return (\n    <>\n      <CCard className=\"mb-6\" style={{flexDirection: 'column'}}>\n        {loading && <div style={{display: 'flex', alignItems: 'center', justifyContent:'center', marginTop:50}}><LoadingSpinner width=\"150px\" black={true}/></div>}\n        <GraficoBarras data={dados} media={media}/>\n        <div className=\"point-info\" style={{display:'flex', flexDirection:'column', alignItens: 'center', justifyContent: 'center', marginTop:10, marginBottom:10}}>\n          <span style={{display:'flex', alignItems: 'center', justifyContent: 'center'}}>Média de horas anuais: {formatDuration(mediaTotal)}</span>\n          <span style={{display:'flex', alignItems: 'center', justifyContent: 'center'}}>Média de horas esse mês: {formatDuration(media)}</span>\n        </div>\n      </CCard>\n     \n    </>\n  )\n}\n\nexport default PauDeSebo\n"],"names":["Chart","register","CategoryScale","LinearScale","BarController","BarElement","LineController","LineElement","Tooltip","Legend","annotationPlugin","_ref","data","media","chartRef","useRef","useEffect","length","labels","map","item","trigrama","hours","forEach","push","duration","_duration$split","split","_duration$split2","_slicedToArray","minutes","parseInt","convertDurationToHours","horas","ctx","document","getElementById","getContext","chart","type","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","scales","y","display","title","text","suggestedMax","suggestedMin","ticks","stepSize","x","plugins","annotation","annotations","line1","yMin","yMax","current","_jsx","id","width","height","Api","useApi","_useState","useState","_useState2","dados","setDados","_useState3","_useState4","funcao","_useState5","_useState6","setMedia","_useState7","_useState8","mediaTotal","setMediaTotal","_useState9","_useState10","loading","setLoading","dados_excessao","excessoes","porcentagem_atual","Date","getMonth","getDados","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res_esforco","horas_totais","horas_parsed","horas_excessao","res","dados_to_add","wrap","_context","prev","next","getEsforcoAereo","sent","nome","trim","alocado","getPauDeSebo","error","Funcao","console","log","Trigrama","Horas","index","findIndex","i","stop","apply","arguments","formatDuration","value","Math","floor","concat","toString","padStart","_Fragment","children","_jsxs","CCard","className","style","flexDirection","alignItems","justifyContent","marginTop","LoadingSpinner","black","GraficoBarras","alignItens","marginBottom"],"sourceRoot":""}
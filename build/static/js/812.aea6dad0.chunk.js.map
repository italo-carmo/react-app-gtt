{"version":3,"file":"static/js/812.aea6dad0.chunk.js","mappings":"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","sources":["views/graficos/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Chart, CategoryScale, LinearScale, PointElement, LineController, LineElement, Legend } from 'chart.js';\nimport LoadingSpinner from 'src/components/Loading'\nChart.register(CategoryScale, LinearScale, PointElement, LineController, LineElement, Legend);\nimport styles from './styles.css'\nimport {\n  CCard,\n\n} from '@coreui/react'\nimport { Alert } from '@coreui/coreui'\nimport useApi from 'src/services/Api'\n\n\nconst Dashboard = () => {\n\n  const [chart, setChart] = useState(null);\n  const [selectedPoint, setSelectedPoint] = useState(null);\n  const [loading, setLoading] = useState(false)\n\n  const convertDurationToHours = (duration, percentage) => {\n    if(duration != '00:00') {\n      if(duration == 0) {\n        return 0\n      } else {\n        const [hours, minutes] = duration.split(':');\n        const totalHours = parseInt(hours, 10) + parseInt(minutes, 10) / 60;\n        return totalHours * percentage;\n      }\n    } else {\n        return null\n      }\n    }\n      \n  const formatDuration = (value) => {\n    const hours = Math.floor(value);\n    const minutes = Math.floor((value - hours) * 60);\n  \n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`;\n  };\n\n    const handlePointClick = (event, chart) => {\n      const activePoints = chart.getElementsAtEventForMode(event, 'nearest', { intersect: true }, true);\n  \n      if (activePoints.length > 0) {\n        const datasetIndex = activePoints[0].datasetIndex;\n        const dataIndex = activePoints[0].index;\n        const datasetLabel = chart.data.datasets[datasetIndex].label;\n        const dataValue = chart.data.datasets[datasetIndex].data[dataIndex];\n        setSelectedPoint({ datasetLabel, dataValue });\n      }\n    };\n\n  const Api = useApi()\n  const fetchData = async () => {\n    setLoading(true)\n    let res = await Api.getEsforcoAereo()\n\n    let effortAvailableHours = []\n    let effortFlownHours = [] \n    let porcentagens = [0.04, 0.08, 0.16, 0.24, 0.32, 0.4, 0.5, 0.61, 0.72, 0.82, 0.92, 1]\n\n    let esforco_total = ''\n\n    res.data.forEach(item => {\n        if((item.nome).trim() == 'TOTAL') {\n          esforco_total = item.alocado\n          let items = [item.jan, item.fev, item.mar, item.abr, item.mai, item.jun, item.jul, item.ago, item.set, item.out, item.nov, item.dez]\n          var acumulado = 0\n          items.forEach(item=>{\n            if(item != '00:00') {\n              let item_parsed = convertDurationToHours(item,1)\n              effortFlownHours.push(item_parsed + acumulado)\n              acumulado += item_parsed\n            } \n\n          })\n\n          porcentagens.forEach(it=>{\n            let novo_esforco = (convertDurationToHours(esforco_total, it))\n            effortAvailableHours.push(novo_esforco)\n          })\n        }\n    });\n    \n    \n\n    // Preencher os meses restantes com zeros\n    const numMissingMonths = 12 - effortFlownHours.length;\n    var acumulado = effortFlownHours[effortFlownHours.length - 1]\n    var average = acumulado/effortFlownHours.length;\n\n\n    for (let i = 0; i < numMissingMonths; i++) {\n      console.log('MEDIA: '+average)\n      effortFlownHours.push(average + acumulado);\n      acumulado+= average\n    }\n\n    const labels = ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'];\n\n    const ctx = document.getElementById('air-effort-chart').getContext('2d');\n\n    const newChart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: [\n          {\n            label: 'Esforço Aéreo Disponível',\n            data: effortAvailableHours,\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 2,\n            fill: false,\n          },\n          {\n            label: 'Esforço Aéreo Voado (estimando próximos meses)',\n            data: effortFlownHours,\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\n            borderColor: 'rgba(255, 99, 132, 1)',\n            borderWidth: 2,\n            fill: false,\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        indexAxis: 'x',\n        onClick: (event) => handlePointClick(event, newChart),\n        scales: {\n          y: {\n            display: true,\n            title: {\n              display: true,\n              text: 'Horas Voadas',\n            },\n            suggestedMax: 1800,\n            ticks: {\n                stepSize: 100, // Defina o intervalo entre as marcas de escala\n              }, // Defina o máximo desejado para o eixo Y\n          },\n        },\n        plugins: {\n          legend: {\n            display: true,\n            labels: {\n              boxWidth: 12,\n            },\n          },\n        },\n      },\n    });\n    setLoading(false)\n    setChart(newChart);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n\n  return (\n    <>\n      <CCard className=\"mb-6\" style={{flexDirection: 'column'}}>\n      {loading && <div style={{display: 'flex', alignItems: 'center', justifyContent:'center', marginTop:50}}><LoadingSpinner width=\"150px\" black={true}/></div>}\n      <canvas id=\"air-effort-chart\" width=\"400\" height=\"200\" />\n      </CCard>\n      {selectedPoint && (\n        <div className=\"point-info\" style={{display:'flex', alignItens: 'center', justifyContent: 'center'}}>\n          <span>{selectedPoint.datasetLabel}: </span>\n          <span style={{marginLeft:5}}> {formatDuration(selectedPoint.dataValue)}</span>\n        </div>\n      )}\n\n\n     \n    </>\n  )\n}\n\nexport default Dashboard\n"],"names":["Chart","register","CategoryScale","LinearScale","PointElement","LineController","LineElement","Legend","Dashboard","chart","setChart","useState","selectedPoint","setSelectedPoint","loading","setLoading","convertDurationToHours","duration","percentage","hours","minutes","split","parseInt","Api","useApi","fetchData","async","res","getEsforcoAereo","effortAvailableHours","effortFlownHours","porcentagens","esforco_total","data","forEach","item","nome","trim","alocado","items","jan","fev","mar","abr","mai","jun","jul","ago","set","out","nov","dez","acumulado","item_parsed","push","it","novo_esforco","numMissingMonths","length","average","i","console","log","ctx","document","getElementById","getContext","newChart","type","labels","datasets","label","backgroundColor","borderColor","borderWidth","fill","options","responsive","indexAxis","onClick","event","handlePointClick","activePoints","getElementsAtEventForMode","intersect","datasetIndex","dataIndex","index","datasetLabel","dataValue","scales","y","display","title","text","suggestedMax","ticks","stepSize","plugins","legend","boxWidth","useEffect","_jsxs","_Fragment","children","CCard","className","style","flexDirection","_jsx","alignItems","justifyContent","marginTop","LoadingSpinner","width","black","id","height","alignItens","marginLeft","value","Math","floor","concat","toString","padStart","formatDuration"],"sourceRoot":""}
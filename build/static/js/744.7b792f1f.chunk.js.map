{"version":3,"file":"static/js/744.7b792f1f.chunk.js","mappings":"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","sources":["../node_modules/chartjs-plugin-annotation/dist/chartjs-plugin-annotation.esm.js"],"sourcesContent":["/*!\n* chartjs-plugin-annotation v2.2.1\n* https://www.chartjs.org/chartjs-plugin-annotation/index\n * (c) 2023 chartjs-plugin-annotation Contributors\n * Released under the MIT License\n */\nimport { Element, defaults, Animations, Chart } from 'chart.js';\nimport { distanceBetweenPoints, isObject, valueOrDefault, defined, callback, isFunction, toRadians, isArray, toFont, addRoundedRectPath, toTRBLCorners, QUARTER_PI, PI, HALF_PI, TWO_THIRDS_PI, TAU, isNumber, RAD_PER_DEG, toPadding, isFinite, toDegrees, clipArea, unclipArea } from 'chart.js/helpers';\n\n/**\n * @typedef { import(\"chart.js\").ChartEvent } ChartEvent\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */\n\nconst interaction = {\n  modes: {\n    /**\n     * Point mode returns all elements that hit test based on the event position\n     * @param {Object} state - the state of the plugin\n     * @param {ChartEvent} event - the event we are find things at\n     * @return {AnnotationElement[]} - elements that are found\n     */\n    point(state, event) {\n      return filterElements(state, event, {intersect: true});\n    },\n\n    /**\n     * Nearest mode returns the element closest to the event position\n     * @param {Object} state - the state of the plugin\n     * @param {ChartEvent} event - the event we are find things at\n     * @param {Object} options - interaction options to use\n     * @return {AnnotationElement[]} - elements that are found (only 1 element)\n     */\n    nearest(state, event, options) {\n      return getNearestItem(state, event, options);\n    },\n    /**\n     * x mode returns the elements that hit-test at the current x coordinate\n     * @param {Object} state - the state of the plugin\n     * @param {ChartEvent} event - the event we are find things at\n     * @param {Object} options - interaction options to use\n     * @return {AnnotationElement[]} - elements that are found\n     */\n    x(state, event, options) {\n      return filterElements(state, event, {intersect: options.intersect, axis: 'x'});\n    },\n\n    /**\n     * y mode returns the elements that hit-test at the current y coordinate\n     * @param {Object} state - the state of the plugin\n     * @param {ChartEvent} event - the event we are find things at\n     * @param {Object} options - interaction options to use\n     * @return {AnnotationElement[]} - elements that are found\n     */\n    y(state, event, options) {\n      return filterElements(state, event, {intersect: options.intersect, axis: 'y'});\n    }\n  }\n};\n\n/**\n * Returns all elements that hit test based on the event position\n * @param {Object} state - the state of the plugin\n * @param {ChartEvent} event - the event we are find things at\n * @param {Object} options - interaction options to use\n * @return {AnnotationElement[]} - elements that are found\n */\nfunction getElements(state, event, options) {\n  const mode = interaction.modes[options.mode] || interaction.modes.nearest;\n  return mode(state, event, options);\n}\n\nfunction inRangeByAxis(element, event, axis) {\n  if (axis !== 'x' && axis !== 'y') {\n    return element.inRange(event.x, event.y, 'x', true) || element.inRange(event.x, event.y, 'y', true);\n  }\n  return element.inRange(event.x, event.y, axis, true);\n}\n\nfunction getPointByAxis(event, center, axis) {\n  if (axis === 'x') {\n    return {x: event.x, y: center.y};\n  } else if (axis === 'y') {\n    return {x: center.x, y: event.y};\n  }\n  return center;\n}\n\nfunction filterElements(state, event, options) {\n  return state.visibleElements.filter((element) => options.intersect ? element.inRange(event.x, event.y) : inRangeByAxis(element, event, options.axis));\n}\n\nfunction getNearestItem(state, event, options) {\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  return filterElements(state, event, options)\n    .reduce((nearestItems, element) => {\n      const center = element.getCenterPoint();\n      const evenPoint = getPointByAxis(event, center, options.axis);\n      const distance = distanceBetweenPoints(event, evenPoint);\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n\n      return nearestItems;\n    }, [])\n    .sort((a, b) => a._index - b._index)\n    .slice(0, 1); // return only the top item;\n}\n\nconst isOlderPart = (act, req) => req > act || (act.length > req.length && act.slice(0, req.length) === req);\n\n/**\n * @typedef { import('chart.js').Point } Point\n * @typedef { import('chart.js').InteractionAxis } InteractionAxis\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */\n\nconst EPSILON = 0.001;\nconst clamp = (x, from, to) => Math.min(to, Math.max(from, x));\n\n/**\n * @param {Object} obj\n * @param {number} from\n * @param {number} to\n * @returns {Object}\n */\nfunction clampAll(obj, from, to) {\n  for (const key of Object.keys(obj)) {\n    obj[key] = clamp(obj[key], from, to);\n  }\n  return obj;\n}\n\n/**\n * @param {Point} point\n * @param {Point} center\n * @param {number} radius\n * @param {number} borderWidth\n * @returns {boolean}\n */\nfunction inPointRange(point, center, radius, borderWidth) {\n  if (!point || !center || radius <= 0) {\n    return false;\n  }\n  const hBorderWidth = borderWidth / 2;\n  return (Math.pow(point.x - center.x, 2) + Math.pow(point.y - center.y, 2)) <= Math.pow(radius + hBorderWidth, 2);\n}\n\n/**\n * @param {Point} point\n * @param {{x: number, y: number, x2: number, y2: number}} rect\n * @param {InteractionAxis} axis\n * @param {number} borderWidth\n * @returns {boolean}\n */\nfunction inBoxRange(point, {x, y, x2, y2}, axis, borderWidth) {\n  const hBorderWidth = borderWidth / 2;\n  const inRangeX = point.x >= x - hBorderWidth - EPSILON && point.x <= x2 + hBorderWidth + EPSILON;\n  const inRangeY = point.y >= y - hBorderWidth - EPSILON && point.y <= y2 + hBorderWidth + EPSILON;\n  if (axis === 'x') {\n    return inRangeX;\n  } else if (axis === 'y') {\n    return inRangeY;\n  }\n  return inRangeX && inRangeY;\n}\n\n/**\n * @param {AnnotationElement} element\n * @param {boolean} useFinalPosition\n * @returns {Point}\n */\nfunction getElementCenterPoint(element, useFinalPosition) {\n  const {centerX, centerY} = element.getProps(['centerX', 'centerY'], useFinalPosition);\n  return {x: centerX, y: centerY};\n}\n\n/**\n * @param {string} pkg\n * @param {string} min\n * @param {string} ver\n * @param {boolean} [strict=true]\n * @returns {boolean}\n */\nfunction requireVersion(pkg, min, ver, strict = true) {\n  const parts = ver.split('.');\n  let i = 0;\n  for (const req of min.split('.')) {\n    const act = parts[i++];\n    if (parseInt(req, 10) < parseInt(act, 10)) {\n      break;\n    }\n    if (isOlderPart(act, req)) {\n      if (strict) {\n        throw new Error(`${pkg} v${ver} is not supported. v${min} or newer is required.`);\n      } else {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nconst isPercentString = (s) => typeof s === 'string' && s.endsWith('%');\nconst toPercent = (s) => parseFloat(s) / 100;\nconst toPositivePercent = (s) => clamp(toPercent(s), 0, 1);\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import('../../types/element').AnnotationBoxModel } AnnotationBoxModel\n * @typedef { import('../../types/options').AnnotationPointCoordinates } AnnotationPointCoordinates\n * @typedef { import('../../types/label').CoreLabelOptions } CoreLabelOptions\n * @typedef { import('../../types/label').LabelPositionObject } LabelPositionObject\n */\n\n/**\n * @param {number} size\n * @param {number|string} position\n * @returns {number}\n */\nfunction getRelativePosition(size, position) {\n  if (position === 'start') {\n    return 0;\n  }\n  if (position === 'end') {\n    return size;\n  }\n  if (isPercentString(position)) {\n    return toPositivePercent(position) * size;\n  }\n  return size / 2;\n}\n\n/**\n * @param {number} size\n * @param {number|string} value\n * @param {boolean} [positivePercent=true]\n * @returns {number}\n */\nfunction getSize(size, value, positivePercent = true) {\n  if (typeof value === 'number') {\n    return value;\n  } else if (isPercentString(value)) {\n    return (positivePercent ? toPositivePercent(value) : toPercent(value)) * size;\n  }\n  return size;\n}\n\n/**\n * @param {{x: number, width: number}} size\n * @param {CoreLabelOptions} options\n * @returns {number}\n */\nfunction calculateTextAlignment(size, options) {\n  const {x, width} = size;\n  const textAlign = options.textAlign;\n  if (textAlign === 'center') {\n    return x + width / 2;\n  } else if (textAlign === 'end' || textAlign === 'right') {\n    return x + width;\n  }\n  return x;\n}\n\n/**\n * @param {{x: number|string, y: number|string}|string|number} value\n * @param {string|number} defaultValue\n * @returns {{x: number|string, y: number|string}}\n */\nfunction toPosition(value, defaultValue = 'center') {\n  if (isObject(value)) {\n    return {\n      x: valueOrDefault(value.x, defaultValue),\n      y: valueOrDefault(value.y, defaultValue),\n    };\n  }\n  value = valueOrDefault(value, defaultValue);\n  return {\n    x: value,\n    y: value\n  };\n}\n\n/**\n * @param {AnnotationPointCoordinates} options\n * @returns {boolean}\n */\nfunction isBoundToPoint(options) {\n  return options && (defined(options.xValue) || defined(options.yValue));\n}\n\n/**\n * @param {Chart} chart\n * @param {AnnotationBoxModel} properties\n * @param {CoreAnnotationOptions} options\n * @param {boolean} [centerBased=false]\n * @returns {AnnotationBoxModel}\n */\nfunction initAnimationProperties(chart, properties, options, centerBased = false) {\n  const initAnim = options.init;\n  if (!initAnim) {\n    return;\n  } else if (initAnim === true) {\n    return applyDefault(properties, centerBased);\n  }\n  return checkCallbackResult(properties, centerBased, callback(initAnim, [{chart, properties, options}]));\n}\n\n/**\n * @param {Object} options\n * @param {Array} hooks\n * @param {Object} hooksContainer\n * @returns {boolean}\n */\nfunction loadHooks(options, hooks, hooksContainer) {\n  let activated = false;\n  hooks.forEach(hook => {\n    if (isFunction(options[hook])) {\n      activated = true;\n      hooksContainer[hook] = options[hook];\n    } else if (defined(hooksContainer[hook])) {\n      delete hooksContainer[hook];\n    }\n  });\n  return activated;\n}\n\nfunction applyDefault({centerX, centerY}, centerBased) {\n  if (centerBased) {\n    return {centerX, centerY, radius: 0, width: 0, height: 0};\n  }\n  return {x: centerX, y: centerY, x2: centerX, y2: centerY, width: 0, height: 0};\n}\n\nfunction checkCallbackResult(properties, centerBased, result) {\n  if (result === true) {\n    return applyDefault(properties, centerBased);\n  } else if (isObject(result)) {\n    return result;\n  }\n}\n\nconst widthCache = new Map();\nconst notRadius = (radius) => isNaN(radius) || radius <= 0;\nconst fontsKey = (fonts) => fonts.reduce(function(prev, item) {\n  prev += item.string;\n  return prev;\n}, '');\n\n/**\n * @typedef { import('chart.js').Point } Point\n * @typedef { import('../../types/label').CoreLabelOptions } CoreLabelOptions\n * @typedef { import('../../types/options').PointAnnotationOptions } PointAnnotationOptions\n */\n\n/**\n * Determine if content is an image or a canvas.\n * @param {*} content\n * @returns boolean|undefined\n * @todo move this function to chart.js helpers\n */\nfunction isImageOrCanvas(content) {\n  if (content && typeof content === 'object') {\n    const type = content.toString();\n    return (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]');\n  }\n}\n\n/**\n * Set the translation on the canvas if the rotation must be applied.\n * @param {CanvasRenderingContext2D} ctx - chart canvas context\n * @param {Point} point - the point of translation\n * @param {number} rotation - rotation (in degrees) to apply\n */\nfunction translate(ctx, {x, y}, rotation) {\n  if (rotation) {\n    ctx.translate(x, y);\n    ctx.rotate(toRadians(rotation));\n    ctx.translate(-x, -y);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {Object} options\n * @returns {boolean|undefined}\n */\nfunction setBorderStyle(ctx, options) {\n  if (options && options.borderWidth) {\n    ctx.lineCap = options.borderCapStyle;\n    ctx.setLineDash(options.borderDash);\n    ctx.lineDashOffset = options.borderDashOffset;\n    ctx.lineJoin = options.borderJoinStyle;\n    ctx.lineWidth = options.borderWidth;\n    ctx.strokeStyle = options.borderColor;\n    return true;\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {Object} options\n */\nfunction setShadowStyle(ctx, options) {\n  ctx.shadowColor = options.backgroundShadowColor;\n  ctx.shadowBlur = options.shadowBlur;\n  ctx.shadowOffsetX = options.shadowOffsetX;\n  ctx.shadowOffsetY = options.shadowOffsetY;\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {CoreLabelOptions} options\n * @returns {{width: number, height: number}}\n */\nfunction measureLabelSize(ctx, options) {\n  const content = options.content;\n  if (isImageOrCanvas(content)) {\n    return {\n      width: getSize(content.width, options.width),\n      height: getSize(content.height, options.height)\n    };\n  }\n  const optFont = options.font;\n  const fonts = isArray(optFont) ? optFont.map(f => toFont(f)) : [toFont(optFont)];\n  const strokeWidth = options.textStrokeWidth;\n  const lines = isArray(content) ? content : [content];\n  const mapKey = lines.join() + fontsKey(fonts) + strokeWidth + (ctx._measureText ? '-spriting' : '');\n  if (!widthCache.has(mapKey)) {\n    widthCache.set(mapKey, calculateLabelSize(ctx, lines, fonts, strokeWidth));\n  }\n  return widthCache.get(mapKey);\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {{x: number, y: number, width: number, height: number}} rect\n * @param {Object} options\n */\nfunction drawBox(ctx, rect, options) {\n  const {x, y, width, height} = rect;\n  ctx.save();\n  setShadowStyle(ctx, options);\n  const stroke = setBorderStyle(ctx, options);\n  ctx.fillStyle = options.backgroundColor;\n  ctx.beginPath();\n  addRoundedRectPath(ctx, {\n    x, y, w: width, h: height,\n    radius: clampAll(toTRBLCorners(options.borderRadius), 0, Math.min(width, height) / 2)\n  });\n  ctx.closePath();\n  ctx.fill();\n  if (stroke) {\n    ctx.shadowColor = options.borderShadowColor;\n    ctx.stroke();\n  }\n  ctx.restore();\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {{x: number, y: number, width: number, height: number}} rect\n * @param {CoreLabelOptions} options\n */\nfunction drawLabel(ctx, rect, options) {\n  const content = options.content;\n  if (isImageOrCanvas(content)) {\n    ctx.save();\n    ctx.globalAlpha = getOpacity(options.opacity, content.style.opacity);\n    ctx.drawImage(content, rect.x, rect.y, rect.width, rect.height);\n    ctx.restore();\n    return;\n  }\n  const labels = isArray(content) ? content : [content];\n  const optFont = options.font;\n  const fonts = isArray(optFont) ? optFont.map(f => toFont(f)) : [toFont(optFont)];\n  const optColor = options.color;\n  const colors = isArray(optColor) ? optColor : [optColor];\n  const x = calculateTextAlignment(rect, options);\n  const y = rect.y + options.textStrokeWidth / 2;\n  ctx.save();\n  ctx.textBaseline = 'middle';\n  ctx.textAlign = options.textAlign;\n  if (setTextStrokeStyle(ctx, options)) {\n    applyLabelDecoration(ctx, {x, y}, labels, fonts);\n  }\n  applyLabelContent(ctx, {x, y}, labels, {fonts, colors});\n  ctx.restore();\n}\n\nfunction setTextStrokeStyle(ctx, options) {\n  if (options.textStrokeWidth > 0) {\n    // https://stackoverflow.com/questions/13627111/drawing-text-with-an-outer-stroke-with-html5s-canvas\n    ctx.lineJoin = 'round';\n    ctx.miterLimit = 2;\n    ctx.lineWidth = options.textStrokeWidth;\n    ctx.strokeStyle = options.textStrokeColor;\n    return true;\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {{radius: number, options: PointAnnotationOptions}} element\n * @param {number} x\n * @param {number} y\n */\nfunction drawPoint(ctx, element, x, y) {\n  const {radius, options} = element;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (isImageOrCanvas(style)) {\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(rad);\n    ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n    ctx.restore();\n    return;\n  }\n  if (notRadius(radius)) {\n    return;\n  }\n  drawPointStyle(ctx, {x, y, radius, rotation, style, rad});\n}\n\nfunction drawPointStyle(ctx, {x, y, radius, rotation, style, rad}) {\n  let xOffset, yOffset, size, cornerRadius;\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n\n  ctx.fill();\n}\n\nfunction calculateLabelSize(ctx, lines, fonts, strokeWidth) {\n  ctx.save();\n  const count = lines.length;\n  let width = 0;\n  let height = strokeWidth;\n  for (let i = 0; i < count; i++) {\n    const font = fonts[Math.min(i, fonts.length - 1)];\n    ctx.font = font.string;\n    const text = lines[i];\n    width = Math.max(width, ctx.measureText(text).width + strokeWidth);\n    height += font.lineHeight;\n  }\n  ctx.restore();\n  return {width, height};\n}\n\nfunction applyLabelDecoration(ctx, {x, y}, labels, fonts) {\n  ctx.beginPath();\n  let lhs = 0;\n  labels.forEach(function(l, i) {\n    const f = fonts[Math.min(i, fonts.length - 1)];\n    const lh = f.lineHeight;\n    ctx.font = f.string;\n    ctx.strokeText(l, x, y + lh / 2 + lhs);\n    lhs += lh;\n  });\n  ctx.stroke();\n}\n\nfunction applyLabelContent(ctx, {x, y}, labels, {fonts, colors}) {\n  let lhs = 0;\n  labels.forEach(function(l, i) {\n    const c = colors[Math.min(i, colors.length - 1)];\n    const f = fonts[Math.min(i, fonts.length - 1)];\n    const lh = f.lineHeight;\n    ctx.beginPath();\n    ctx.font = f.string;\n    ctx.fillStyle = c;\n    ctx.fillText(l, x, y + lh / 2 + lhs);\n    lhs += lh;\n    ctx.fill();\n  });\n}\n\nfunction getOpacity(value, elementValue) {\n  const opacity = isNumber(value) ? value : elementValue;\n  return isNumber(opacity) ? clamp(opacity, 0, 1) : 1;\n}\n\nconst limitedLineScale = {\n  xScaleID: {min: 'xMin', max: 'xMax', start: 'left', end: 'right', startProp: 'x', endProp: 'x2'},\n  yScaleID: {min: 'yMin', max: 'yMax', start: 'bottom', end: 'top', startProp: 'y', endProp: 'y2'}\n};\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import(\"chart.js\").Scale } Scale\n * @typedef { import(\"chart.js\").Point } Point\n * @typedef { import('../../types/element').AnnotationBoxModel } AnnotationBoxModel\n * @typedef { import('../../types/options').CoreAnnotationOptions } CoreAnnotationOptions\n * @typedef { import('../../types/options').LineAnnotationOptions } LineAnnotationOptions\n * @typedef { import('../../types/options').PointAnnotationOptions } PointAnnotationOptions\n * @typedef { import('../../types/options').PolygonAnnotationOptions } PolygonAnnotationOptions\n */\n\n/**\n * @param {Scale} scale\n * @param {number|string} value\n * @param {number} fallback\n * @returns {number}\n */\nfunction scaleValue(scale, value, fallback) {\n  value = typeof value === 'number' ? value : scale.parse(value);\n  return isFinite(value) ? scale.getPixelForValue(value) : fallback;\n}\n\n/**\n * Search the scale defined in chartjs by the axis related to the annotation options key.\n * @param {{ [key: string]: Scale }} scales\n * @param {CoreAnnotationOptions} options\n * @param {string} key\n * @returns {string}\n */\nfunction retrieveScaleID(scales, options, key) {\n  const scaleID = options[key];\n  if (scaleID || key === 'scaleID') {\n    return scaleID;\n  }\n  const axis = key.charAt(0);\n  const axes = Object.values(scales).filter((scale) => scale.axis && scale.axis === axis);\n  if (axes.length) {\n    return axes[0].id;\n  }\n  return axis;\n}\n\n/**\n * @param {Scale} scale\n * @param {{min: number, max: number, start: number, end: number}} options\n * @returns {{start: number, end: number}|undefined}\n */\nfunction getDimensionByScale(scale, options) {\n  if (scale) {\n    const reverse = scale.options.reverse;\n    const start = scaleValue(scale, options.min, reverse ? options.end : options.start);\n    const end = scaleValue(scale, options.max, reverse ? options.start : options.end);\n    return {\n      start,\n      end\n    };\n  }\n}\n\n/**\n * @param {Chart} chart\n * @param {CoreAnnotationOptions} options\n * @returns {Point}\n */\nfunction getChartPoint(chart, options) {\n  const {chartArea, scales} = chart;\n  const xScale = scales[retrieveScaleID(scales, options, 'xScaleID')];\n  const yScale = scales[retrieveScaleID(scales, options, 'yScaleID')];\n  let x = chartArea.width / 2;\n  let y = chartArea.height / 2;\n\n  if (xScale) {\n    x = scaleValue(xScale, options.xValue, xScale.left + xScale.width / 2);\n  }\n\n  if (yScale) {\n    y = scaleValue(yScale, options.yValue, yScale.top + yScale.height / 2);\n  }\n  return {x, y};\n}\n\n/**\n * @param {Chart} chart\n * @param {CoreAnnotationOptions} options\n * @returns {AnnotationBoxModel}\n */\nfunction resolveBoxProperties(chart, options) {\n  const scales = chart.scales;\n  const xScale = scales[retrieveScaleID(scales, options, 'xScaleID')];\n  const yScale = scales[retrieveScaleID(scales, options, 'yScaleID')];\n\n  if (!xScale && !yScale) {\n    return {};\n  }\n\n  let {left: x, right: x2} = xScale || chart.chartArea;\n  let {top: y, bottom: y2} = yScale || chart.chartArea;\n  const xDim = getChartDimensionByScale(xScale, {min: options.xMin, max: options.xMax, start: x, end: x2});\n  x = xDim.start;\n  x2 = xDim.end;\n  const yDim = getChartDimensionByScale(yScale, {min: options.yMin, max: options.yMax, start: y2, end: y});\n  y = yDim.start;\n  y2 = yDim.end;\n\n  return {\n    x,\n    y,\n    x2,\n    y2,\n    width: x2 - x,\n    height: y2 - y,\n    centerX: x + (x2 - x) / 2,\n    centerY: y + (y2 - y) / 2\n  };\n}\n\n/**\n * @param {Chart} chart\n * @param {PointAnnotationOptions|PolygonAnnotationOptions} options\n * @returns {AnnotationBoxModel}\n */\nfunction resolvePointProperties(chart, options) {\n  if (!isBoundToPoint(options)) {\n    const box = resolveBoxProperties(chart, options);\n    let radius = options.radius;\n    if (!radius || isNaN(radius)) {\n      radius = Math.min(box.width, box.height) / 2;\n      options.radius = radius;\n    }\n    const size = radius * 2;\n    const adjustCenterX = box.centerX + options.xAdjust;\n    const adjustCenterY = box.centerY + options.yAdjust;\n    return {\n      x: adjustCenterX - radius,\n      y: adjustCenterY - radius,\n      x2: adjustCenterX + radius,\n      y2: adjustCenterY + radius,\n      centerX: adjustCenterX,\n      centerY: adjustCenterY,\n      width: size,\n      height: size,\n      radius\n    };\n  }\n  return getChartCircle(chart, options);\n}\n/**\n * @param {Chart} chart\n * @param {LineAnnotationOptions} options\n * @returns {AnnotationBoxModel}\n */\nfunction resolveLineProperties(chart, options) {\n  const {scales, chartArea} = chart;\n  const scale = scales[options.scaleID];\n  const area = {x: chartArea.left, y: chartArea.top, x2: chartArea.right, y2: chartArea.bottom};\n\n  if (scale) {\n    resolveFullLineProperties(scale, area, options);\n  } else {\n    resolveLimitedLineProperties(scales, area, options);\n  }\n  return area;\n}\n\n/**\n * @param {Chart} chart\n * @param {CoreAnnotationOptions} options\n * @param {boolean} [centerBased=false]\n * @returns {AnnotationBoxModel}\n */\nfunction resolveBoxAndLabelProperties(chart, options, centerBased) {\n  const properties = resolveBoxProperties(chart, options);\n  properties.initProperties = initAnimationProperties(chart, properties, options, centerBased);\n  properties.elements = [{\n    type: 'label',\n    optionScope: 'label',\n    properties: resolveLabelElementProperties$1(chart, properties, options),\n    initProperties: properties.initProperties\n  }];\n  return properties;\n}\n\nfunction getChartCircle(chart, options) {\n  const point = getChartPoint(chart, options);\n  const size = options.radius * 2;\n  return {\n    x: point.x - options.radius + options.xAdjust,\n    y: point.y - options.radius + options.yAdjust,\n    x2: point.x + options.radius + options.xAdjust,\n    y2: point.y + options.radius + options.yAdjust,\n    centerX: point.x + options.xAdjust,\n    centerY: point.y + options.yAdjust,\n    radius: options.radius,\n    width: size,\n    height: size\n  };\n}\n\nfunction getChartDimensionByScale(scale, options) {\n  const result = getDimensionByScale(scale, options) || options;\n  return {\n    start: Math.min(result.start, result.end),\n    end: Math.max(result.start, result.end)\n  };\n}\n\nfunction resolveFullLineProperties(scale, area, options) {\n  const min = scaleValue(scale, options.value, NaN);\n  const max = scaleValue(scale, options.endValue, min);\n  if (scale.isHorizontal()) {\n    area.x = min;\n    area.x2 = max;\n  } else {\n    area.y = min;\n    area.y2 = max;\n  }\n}\n\nfunction resolveLimitedLineProperties(scales, area, options) {\n  for (const scaleId of Object.keys(limitedLineScale)) {\n    const scale = scales[retrieveScaleID(scales, options, scaleId)];\n    if (scale) {\n      const {min, max, start, end, startProp, endProp} = limitedLineScale[scaleId];\n      const dim = getDimensionByScale(scale, {min: options[min], max: options[max], start: scale[start], end: scale[end]});\n      area[startProp] = dim.start;\n      area[endProp] = dim.end;\n    }\n  }\n}\n\nfunction calculateX({properties, options}, labelSize, position, padding) {\n  const {x: start, x2: end, width: size} = properties;\n  return calculatePosition$1({start, end, size, borderWidth: options.borderWidth}, {\n    position: position.x,\n    padding: {start: padding.left, end: padding.right},\n    adjust: options.label.xAdjust,\n    size: labelSize.width\n  });\n}\n\nfunction calculateY({properties, options}, labelSize, position, padding) {\n  const {y: start, y2: end, height: size} = properties;\n  return calculatePosition$1({start, end, size, borderWidth: options.borderWidth}, {\n    position: position.y,\n    padding: {start: padding.top, end: padding.bottom},\n    adjust: options.label.yAdjust,\n    size: labelSize.height\n  });\n}\n\nfunction calculatePosition$1(boxOpts, labelOpts) {\n  const {start, end, borderWidth} = boxOpts;\n  const {position, padding: {start: padStart, end: padEnd}, adjust} = labelOpts;\n  const availableSize = end - borderWidth - start - padStart - padEnd - labelOpts.size;\n  return start + borderWidth / 2 + adjust + getRelativePosition(availableSize, position);\n}\n\nfunction resolveLabelElementProperties$1(chart, properties, options) {\n  const label = options.label;\n  label.backgroundColor = 'transparent';\n  label.callout.display = false;\n  const position = toPosition(label.position);\n  const padding = toPadding(label.padding);\n  const labelSize = measureLabelSize(chart.ctx, label);\n  const x = calculateX({properties, options}, labelSize, position, padding);\n  const y = calculateY({properties, options}, labelSize, position, padding);\n  const width = labelSize.width + padding.width;\n  const height = labelSize.height + padding.height;\n  return {\n    x,\n    y,\n    x2: x + width,\n    y2: y + height,\n    width,\n    height,\n    centerX: x + width / 2,\n    centerY: y + height / 2,\n    rotation: label.rotation\n  };\n\n}\n\n/**\n * @typedef {import('chart.js').Point} Point\n */\n\n/**\n * Rotate a `point` relative to `center` point by `angle`\n * @param {Point} point - the point to rotate\n * @param {Point} center - center point for rotation\n * @param {number} angle - angle for rotation, in radians\n * @returns {Point} rotated point\n */\nfunction rotated(point, center, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const cx = center.x;\n  const cy = center.y;\n\n  return {\n    x: cx + cos * (point.x - cx) - sin * (point.y - cy),\n    y: cy + sin * (point.x - cx) + cos * (point.y - cy)\n  };\n}\n\nconst moveHooks = ['enter', 'leave'];\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import('../../types/options').AnnotationPluginOptions } AnnotationPluginOptions\n */\n\nconst eventHooks = moveHooks.concat('click');\n\n/**\n * @param {Chart} chart\n * @param {Object} state\n * @param {AnnotationPluginOptions} options\n */\nfunction updateListeners(chart, state, options) {\n  state.listened = loadHooks(options, eventHooks, state.listeners);\n  state.moveListened = false;\n  state._getElements = getElements; // for testing\n\n  moveHooks.forEach(hook => {\n    if (isFunction(options[hook])) {\n      state.moveListened = true;\n    }\n  });\n\n  if (!state.listened || !state.moveListened) {\n    state.annotations.forEach(scope => {\n      if (!state.listened && isFunction(scope.click)) {\n        state.listened = true;\n      }\n      if (!state.moveListened) {\n        moveHooks.forEach(hook => {\n          if (isFunction(scope[hook])) {\n            state.listened = true;\n            state.moveListened = true;\n          }\n        });\n      }\n    });\n  }\n}\n\n/**\n * @param {Object} state\n * @param {ChartEvent} event\n * @param {AnnotationPluginOptions} options\n * @return {boolean|undefined}\n */\nfunction handleEvent(state, event, options) {\n  if (state.listened) {\n    switch (event.type) {\n    case 'mousemove':\n    case 'mouseout':\n      return handleMoveEvents(state, event, options);\n    case 'click':\n      return handleClickEvents(state, event, options);\n    }\n  }\n}\n\nfunction handleMoveEvents(state, event, options) {\n  if (!state.moveListened) {\n    return;\n  }\n\n  let elements;\n\n  if (event.type === 'mousemove') {\n    elements = getElements(state, event, options.interaction);\n  } else {\n    elements = [];\n  }\n\n  const previous = state.hovered;\n  state.hovered = elements;\n\n  const context = {state, event};\n  let changed = dispatchMoveEvents(context, 'leave', previous, elements);\n  return dispatchMoveEvents(context, 'enter', elements, previous) || changed;\n}\n\nfunction dispatchMoveEvents({state, event}, hook, elements, checkElements) {\n  let changed;\n  for (const element of elements) {\n    if (checkElements.indexOf(element) < 0) {\n      changed = dispatchEvent(element.options[hook] || state.listeners[hook], element, event) || changed;\n    }\n  }\n  return changed;\n}\n\nfunction handleClickEvents(state, event, options) {\n  const listeners = state.listeners;\n  const elements = getElements(state, event, options.interaction);\n  let changed;\n  for (const element of elements) {\n    changed = dispatchEvent(element.options.click || listeners.click, element, event) || changed;\n  }\n  return changed;\n}\n\nfunction dispatchEvent(handler, element, event) {\n  return callback(handler, [element.$context, event]) === true;\n}\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import('../../types/options').AnnotationPluginOptions } AnnotationPluginOptions\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */\n\nconst elementHooks = ['afterDraw', 'beforeDraw'];\n\n/**\n * @param {Chart} chart\n * @param {Object} state\n * @param {AnnotationPluginOptions} options\n */\nfunction updateHooks(chart, state, options) {\n  const visibleElements = state.visibleElements;\n  state.hooked = loadHooks(options, elementHooks, state.hooks);\n\n  if (!state.hooked) {\n    visibleElements.forEach(scope => {\n      if (!state.hooked) {\n        elementHooks.forEach(hook => {\n          if (isFunction(scope.options[hook])) {\n            state.hooked = true;\n          }\n        });\n      }\n    });\n  }\n}\n\n/**\n * @param {Object} state\n * @param {AnnotationElement} element\n * @param {string} hook\n */\nfunction invokeHook(state, element, hook) {\n  if (state.hooked) {\n    const callbackHook = element.options[hook] || state.hooks[hook];\n    return callback(callbackHook, [element.$context]);\n  }\n}\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import(\"chart.js\").Scale } Scale\n * @typedef { import('../../types/options').CoreAnnotationOptions } CoreAnnotationOptions\n */\n\n/**\n * @param {Chart} chart\n * @param {Scale} scale\n * @param {CoreAnnotationOptions[]} annotations\n */\nfunction adjustScaleRange(chart, scale, annotations) {\n  const range = getScaleLimits(chart.scales, scale, annotations);\n  let changed = changeScaleLimit(scale, range, 'min', 'suggestedMin');\n  changed = changeScaleLimit(scale, range, 'max', 'suggestedMax') || changed;\n  if (changed && isFunction(scale.handleTickRangeOptions)) {\n    scale.handleTickRangeOptions();\n  }\n}\n\n/**\n * @param {CoreAnnotationOptions[]} annotations\n * @param {{ [key: string]: Scale }} scales\n */\nfunction verifyScaleOptions(annotations, scales) {\n  for (const annotation of annotations) {\n    verifyScaleIDs(annotation, scales);\n  }\n}\n\nfunction changeScaleLimit(scale, range, limit, suggestedLimit) {\n  if (isFinite(range[limit]) && !scaleLimitDefined(scale.options, limit, suggestedLimit)) {\n    const changed = scale[limit] !== range[limit];\n    scale[limit] = range[limit];\n    return changed;\n  }\n}\n\nfunction scaleLimitDefined(scaleOptions, limit, suggestedLimit) {\n  return defined(scaleOptions[limit]) || defined(scaleOptions[suggestedLimit]);\n}\n\nfunction verifyScaleIDs(annotation, scales) {\n  for (const key of ['scaleID', 'xScaleID', 'yScaleID']) {\n    const scaleID = retrieveScaleID(scales, annotation, key);\n    if (scaleID && !scales[scaleID] && verifyProperties(annotation, key)) {\n      console.warn(`No scale found with id '${scaleID}' for annotation '${annotation.id}'`);\n    }\n  }\n}\n\nfunction verifyProperties(annotation, key) {\n  if (key === 'scaleID') {\n    return true;\n  }\n  const axis = key.charAt(0);\n  for (const prop of ['Min', 'Max', 'Value']) {\n    if (defined(annotation[axis + prop])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction getScaleLimits(scales, scale, annotations) {\n  const axis = scale.axis;\n  const scaleID = scale.id;\n  const scaleIDOption = axis + 'ScaleID';\n  const limits = {\n    min: valueOrDefault(scale.min, Number.NEGATIVE_INFINITY),\n    max: valueOrDefault(scale.max, Number.POSITIVE_INFINITY)\n  };\n  for (const annotation of annotations) {\n    if (annotation.scaleID === scaleID) {\n      updateLimits(annotation, scale, ['value', 'endValue'], limits);\n    } else if (retrieveScaleID(scales, annotation, scaleIDOption) === scaleID) {\n      updateLimits(annotation, scale, [axis + 'Min', axis + 'Max', axis + 'Value'], limits);\n    }\n  }\n  return limits;\n}\n\nfunction updateLimits(annotation, scale, props, limits) {\n  for (const prop of props) {\n    const raw = annotation[prop];\n    if (defined(raw)) {\n      const value = scale.parse(raw);\n      limits.min = Math.min(limits.min, value);\n      limits.max = Math.max(limits.max, value);\n    }\n  }\n}\n\nclass BoxAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const {x, y} = rotated({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), toRadians(-this.options.rotation));\n    return inBoxRange({x, y}, this.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition), axis, this.options.borderWidth);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    ctx.save();\n    translate(ctx, this.getCenterPoint(), this.options.rotation);\n    drawBox(ctx, this, this.options);\n    ctx.restore();\n  }\n\n  get label() {\n    return this.elements && this.elements[0];\n  }\n\n  resolveElementProperties(chart, options) {\n    return resolveBoxAndLabelProperties(chart, options);\n  }\n}\n\nBoxAnnotation.id = 'boxAnnotation';\n\nBoxAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderRadius: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  init: undefined,\n  label: {\n    backgroundColor: 'transparent',\n    borderWidth: 0,\n    callout: {\n      display: false\n    },\n    color: 'black',\n    content: null,\n    display: false,\n    drawTime: undefined,\n    font: {\n      family: undefined,\n      lineHeight: undefined,\n      size: undefined,\n      style: undefined,\n      weight: 'bold'\n    },\n    height: undefined,\n    opacity: undefined,\n    padding: 6,\n    position: 'center',\n    rotation: undefined,\n    textAlign: 'start',\n    textStrokeColor: undefined,\n    textStrokeWidth: 0,\n    width: undefined,\n    xAdjust: 0,\n    yAdjust: 0,\n    z: undefined\n  },\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  z: 0\n};\n\nBoxAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nBoxAnnotation.descriptors = {\n  label: {\n    _fallback: true\n  }\n};\n\nconst positions = ['left', 'bottom', 'top', 'right'];\n\nclass LabelAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const {x, y} = rotated({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), toRadians(-this.rotation));\n    return inBoxRange({x, y}, this.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition), axis, this.options.borderWidth);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const options = this.options;\n    const visible = !defined(this._visible) || this._visible;\n    if (!options.display || !options.content || !visible) {\n      return;\n    }\n    ctx.save();\n    translate(ctx, this.getCenterPoint(), this.rotation);\n    drawCallout(ctx, this);\n    drawBox(ctx, this, options);\n    drawLabel(ctx, getLabelSize(this), options);\n    ctx.restore();\n  }\n\n  resolveElementProperties(chart, options) {\n    let point;\n    if (!isBoundToPoint(options)) {\n      const {centerX, centerY} = resolveBoxProperties(chart, options);\n      point = {x: centerX, y: centerY};\n    } else {\n      point = getChartPoint(chart, options);\n    }\n    const padding = toPadding(options.padding);\n    const labelSize = measureLabelSize(chart.ctx, options);\n    const boxSize = measureRect(point, labelSize, options, padding);\n    return {\n      initProperties: initAnimationProperties(chart, boxSize, options),\n      pointX: point.x,\n      pointY: point.y,\n      ...boxSize,\n      rotation: options.rotation\n    };\n  }\n}\n\nLabelAnnotation.id = 'labelAnnotation';\n\nLabelAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundColor: 'transparent',\n  backgroundShadowColor: 'transparent',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderRadius: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 0,\n  callout: {\n    borderCapStyle: 'butt',\n    borderColor: undefined,\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 1,\n    display: false,\n    margin: 5,\n    position: 'auto',\n    side: 5,\n    start: '50%',\n  },\n  color: 'black',\n  content: null,\n  display: true,\n  font: {\n    family: undefined,\n    lineHeight: undefined,\n    size: undefined,\n    style: undefined,\n    weight: undefined\n  },\n  height: undefined,\n  init: undefined,\n  opacity: undefined,\n  padding: 6,\n  position: 'center',\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  textAlign: 'center',\n  textStrokeColor: undefined,\n  textStrokeWidth: 0,\n  width: undefined,\n  xAdjust: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  xValue: undefined,\n  yAdjust: 0,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  yValue: undefined,\n  z: 0\n};\n\nLabelAnnotation.defaultRoutes = {\n  borderColor: 'color'\n};\n\nfunction measureRect(point, size, options, padding) {\n  const width = size.width + padding.width + options.borderWidth;\n  const height = size.height + padding.height + options.borderWidth;\n  const position = toPosition(options.position, 'center');\n  const x = calculatePosition(point.x, width, options.xAdjust, position.x);\n  const y = calculatePosition(point.y, height, options.yAdjust, position.y);\n\n  return {\n    x,\n    y,\n    x2: x + width,\n    y2: y + height,\n    width,\n    height,\n    centerX: x + width / 2,\n    centerY: y + height / 2\n  };\n}\n\nfunction calculatePosition(start, size, adjust = 0, position) {\n  return start - getRelativePosition(size, position) + adjust;\n}\n\nfunction drawCallout(ctx, element) {\n  const {pointX, pointY, options} = element;\n  const callout = options.callout;\n  const calloutPosition = callout && callout.display && resolveCalloutPosition(element, callout);\n  if (!calloutPosition || isPointInRange(element, callout, calloutPosition)) {\n    return;\n  }\n\n  ctx.save();\n  ctx.beginPath();\n  const stroke = setBorderStyle(ctx, callout);\n  if (!stroke) {\n    return ctx.restore();\n  }\n  const {separatorStart, separatorEnd} = getCalloutSeparatorCoord(element, calloutPosition);\n  const {sideStart, sideEnd} = getCalloutSideCoord(element, calloutPosition, separatorStart);\n  if (callout.margin > 0 || options.borderWidth === 0) {\n    ctx.moveTo(separatorStart.x, separatorStart.y);\n    ctx.lineTo(separatorEnd.x, separatorEnd.y);\n  }\n  ctx.moveTo(sideStart.x, sideStart.y);\n  ctx.lineTo(sideEnd.x, sideEnd.y);\n  const rotatedPoint = rotated({x: pointX, y: pointY}, element.getCenterPoint(), toRadians(-element.rotation));\n  ctx.lineTo(rotatedPoint.x, rotatedPoint.y);\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction getCalloutSeparatorCoord(element, position) {\n  const {x, y, x2, y2} = element;\n  const adjust = getCalloutSeparatorAdjust(element, position);\n  let separatorStart, separatorEnd;\n  if (position === 'left' || position === 'right') {\n    separatorStart = {x: x + adjust, y};\n    separatorEnd = {x: separatorStart.x, y: y2};\n  } else {\n    //  position 'top' or 'bottom'\n    separatorStart = {x, y: y + adjust};\n    separatorEnd = {x: x2, y: separatorStart.y};\n  }\n  return {separatorStart, separatorEnd};\n}\n\nfunction getCalloutSeparatorAdjust(element, position) {\n  const {width, height, options} = element;\n  const adjust = options.callout.margin + options.borderWidth / 2;\n  if (position === 'right') {\n    return width + adjust;\n  } else if (position === 'bottom') {\n    return height + adjust;\n  }\n  return -adjust;\n}\n\nfunction getCalloutSideCoord(element, position, separatorStart) {\n  const {y, width, height, options} = element;\n  const start = options.callout.start;\n  const side = getCalloutSideAdjust(position, options.callout);\n  let sideStart, sideEnd;\n  if (position === 'left' || position === 'right') {\n    sideStart = {x: separatorStart.x, y: y + getSize(height, start)};\n    sideEnd = {x: sideStart.x + side, y: sideStart.y};\n  } else {\n    //  position 'top' or 'bottom'\n    sideStart = {x: separatorStart.x + getSize(width, start), y: separatorStart.y};\n    sideEnd = {x: sideStart.x, y: sideStart.y + side};\n  }\n  return {sideStart, sideEnd};\n}\n\nfunction getCalloutSideAdjust(position, options) {\n  const side = options.side;\n  if (position === 'left' || position === 'top') {\n    return -side;\n  }\n  return side;\n}\n\nfunction resolveCalloutPosition(element, options) {\n  const position = options.position;\n  if (positions.includes(position)) {\n    return position;\n  }\n  return resolveCalloutAutoPosition(element, options);\n}\n\nfunction resolveCalloutAutoPosition(element, options) {\n  const {x, y, x2, y2, width, height, pointX, pointY, centerX, centerY, rotation} = element;\n  const center = {x: centerX, y: centerY};\n  const start = options.start;\n  const xAdjust = getSize(width, start);\n  const yAdjust = getSize(height, start);\n  const xPoints = [x, x + xAdjust, x + xAdjust, x2];\n  const yPoints = [y + yAdjust, y2, y, y2];\n  const result = [];\n  for (let index = 0; index < 4; index++) {\n    const rotatedPoint = rotated({x: xPoints[index], y: yPoints[index]}, center, toRadians(rotation));\n    result.push({\n      position: positions[index],\n      distance: distanceBetweenPoints(rotatedPoint, {x: pointX, y: pointY})\n    });\n  }\n  return result.sort((a, b) => a.distance - b.distance)[0].position;\n}\n\nfunction getLabelSize({x, y, width, height, options}) {\n  const hBorderWidth = options.borderWidth / 2;\n  const padding = toPadding(options.padding);\n  return {\n    x: x + padding.left + hBorderWidth,\n    y: y + padding.top + hBorderWidth,\n    width: width - padding.left - padding.right - options.borderWidth,\n    height: height - padding.top - padding.bottom - options.borderWidth\n  };\n}\n\nfunction isPointInRange(element, callout, position) {\n  const {pointX, pointY} = element;\n  const margin = callout.margin;\n  let x = pointX;\n  let y = pointY;\n  if (position === 'left') {\n    x += margin;\n  } else if (position === 'right') {\n    x -= margin;\n  } else if (position === 'top') {\n    y += margin;\n  } else if (position === 'bottom') {\n    y -= margin;\n  }\n  return element.inRange(x, y);\n}\n\nconst pointInLine = (p1, p2, t) => ({x: p1.x + t * (p2.x - p1.x), y: p1.y + t * (p2.y - p1.y)});\nconst interpolateX = (y, p1, p2) => pointInLine(p1, p2, Math.abs((y - p1.y) / (p2.y - p1.y))).x;\nconst interpolateY = (x, p1, p2) => pointInLine(p1, p2, Math.abs((x - p1.x) / (p2.x - p1.x))).y;\nconst sqr = v => v * v;\nconst rangeLimit = (mouseX, mouseY, {x, y, x2, y2}, axis) => axis === 'y' ? {start: Math.min(y, y2), end: Math.max(y, y2), value: mouseY} : {start: Math.min(x, x2), end: Math.max(x, x2), value: mouseX};\n// http://www.independent-software.com/determining-coordinates-on-a-html-canvas-bezier-curve.html\nconst coordInCurve = (start, cp, end, t) => (1 - t) * (1 - t) * start + 2 * (1 - t) * t * cp + t * t * end;\nconst pointInCurve = (start, cp, end, t) => ({x: coordInCurve(start.x, cp.x, end.x, t), y: coordInCurve(start.y, cp.y, end.y, t)});\nconst coordAngleInCurve = (start, cp, end, t) => 2 * (1 - t) * (cp - start) + 2 * t * (end - cp);\nconst angleInCurve = (start, cp, end, t) => -Math.atan2(coordAngleInCurve(start.x, cp.x, end.x, t), coordAngleInCurve(start.y, cp.y, end.y, t)) + 0.5 * PI;\n\nclass LineAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const hBorderWidth = this.options.borderWidth / 2;\n    if (axis !== 'x' && axis !== 'y') {\n      const point = {mouseX, mouseY};\n      const {path, ctx} = this;\n      if (path) {\n        setBorderStyle(ctx, this.options);\n        const {chart} = this.$context;\n        const mx = mouseX * chart.currentDevicePixelRatio;\n        const my = mouseY * chart.currentDevicePixelRatio;\n        const result = ctx.isPointInStroke(path, mx, my) || isOnLabel(this, point, useFinalPosition);\n        ctx.restore();\n        return result;\n      }\n      const epsilon = sqr(hBorderWidth);\n      return intersects(this, point, epsilon, useFinalPosition) || isOnLabel(this, point, useFinalPosition);\n    }\n    return inAxisRange(this, {mouseX, mouseY}, axis, {hBorderWidth, useFinalPosition});\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {x, y, x2, y2, cp, options} = this;\n\n    ctx.save();\n    if (!setBorderStyle(ctx, options)) {\n      // no border width, then line is not drawn\n      return ctx.restore();\n    }\n    setShadowStyle(ctx, options);\n\n    const length = Math.sqrt(Math.pow(x2 - x, 2) + Math.pow(y2 - y, 2));\n    if (options.curve && cp) {\n      drawCurve(ctx, this, cp, length);\n      return ctx.restore();\n    }\n    const {startOpts, endOpts, startAdjust, endAdjust} = getArrowHeads(this);\n    const angle = Math.atan2(y2 - y, x2 - x);\n    ctx.translate(x, y);\n    ctx.rotate(angle);\n    ctx.beginPath();\n    ctx.moveTo(0 + startAdjust, 0);\n    ctx.lineTo(length - endAdjust, 0);\n    ctx.shadowColor = options.borderShadowColor;\n    ctx.stroke();\n    drawArrowHead(ctx, 0, startAdjust, startOpts);\n    drawArrowHead(ctx, length, -endAdjust, endOpts);\n    ctx.restore();\n  }\n\n  get label() {\n    return this.elements && this.elements[0];\n  }\n\n  resolveElementProperties(chart, options) {\n    const area = resolveLineProperties(chart, options);\n    const {x, y, x2, y2} = area;\n    const inside = isLineInArea(area, chart.chartArea);\n    const properties = inside\n      ? limitLineToArea({x, y}, {x: x2, y: y2}, chart.chartArea)\n      : {x, y, x2, y2, width: Math.abs(x2 - x), height: Math.abs(y2 - y)};\n    properties.centerX = (x2 + x) / 2;\n    properties.centerY = (y2 + y) / 2;\n    properties.initProperties = initAnimationProperties(chart, properties, options);\n    if (options.curve) {\n      const p1 = {x: properties.x, y: properties.y};\n      const p2 = {x: properties.x2, y: properties.y2};\n      properties.cp = getControlPoint(properties, options, distanceBetweenPoints(p1, p2));\n    }\n    const labelProperties = resolveLabelElementProperties(chart, properties, options.label);\n    // additonal prop to manage zoom/pan\n    labelProperties._visible = inside;\n\n    properties.elements = [{\n      type: 'label',\n      optionScope: 'label',\n      properties: labelProperties,\n      initProperties: properties.initProperties\n    }];\n    return properties;\n  }\n}\n\nLineAnnotation.id = 'lineAnnotation';\n\nconst arrowHeadsDefaults = {\n  backgroundColor: undefined,\n  backgroundShadowColor: undefined,\n  borderColor: undefined,\n  borderDash: undefined,\n  borderDashOffset: undefined,\n  borderShadowColor: undefined,\n  borderWidth: undefined,\n  display: undefined,\n  fill: undefined,\n  length: undefined,\n  shadowBlur: undefined,\n  shadowOffsetX: undefined,\n  shadowOffsetY: undefined,\n  width: undefined\n};\n\nLineAnnotation.defaults = {\n  adjustScaleRange: true,\n  arrowHeads: {\n    display: false,\n    end: Object.assign({}, arrowHeadsDefaults),\n    fill: false,\n    length: 12,\n    start: Object.assign({}, arrowHeadsDefaults),\n    width: 6\n  },\n  borderDash: [],\n  borderDashOffset: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 2,\n  curve: false,\n  controlPoint: {\n    y: '-50%'\n  },\n  display: true,\n  endValue: undefined,\n  init: undefined,\n  label: {\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    backgroundShadowColor: 'transparent',\n    borderCapStyle: 'butt',\n    borderColor: 'black',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderRadius: 6,\n    borderShadowColor: 'transparent',\n    borderWidth: 0,\n    callout: Object.assign({}, LabelAnnotation.defaults.callout),\n    color: '#fff',\n    content: null,\n    display: false,\n    drawTime: undefined,\n    font: {\n      family: undefined,\n      lineHeight: undefined,\n      size: undefined,\n      style: undefined,\n      weight: 'bold'\n    },\n    height: undefined,\n    opacity: undefined,\n    padding: 6,\n    position: 'center',\n    rotation: 0,\n    shadowBlur: 0,\n    shadowOffsetX: 0,\n    shadowOffsetY: 0,\n    textAlign: 'center',\n    textStrokeColor: undefined,\n    textStrokeWidth: 0,\n    width: undefined,\n    xAdjust: 0,\n    yAdjust: 0,\n    z: undefined\n  },\n  scaleID: undefined,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  value: undefined,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  z: 0\n};\n\nLineAnnotation.descriptors = {\n  arrowHeads: {\n    start: {\n      _fallback: true\n    },\n    end: {\n      _fallback: true\n    },\n    _fallback: true\n  }\n};\n\nLineAnnotation.defaultRoutes = {\n  borderColor: 'color'\n};\n\nfunction inAxisRange(element, {mouseX, mouseY}, axis, {hBorderWidth, useFinalPosition}) {\n  const limit = rangeLimit(mouseX, mouseY, element.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition), axis);\n  return (limit.value >= limit.start - hBorderWidth && limit.value <= limit.end + hBorderWidth) || isOnLabel(element, {mouseX, mouseY}, useFinalPosition, axis);\n}\n\nfunction isLineInArea({x, y, x2, y2}, {top, right, bottom, left}) {\n  return !(\n    (x < left && x2 < left) ||\n    (x > right && x2 > right) ||\n    (y < top && y2 < top) ||\n    (y > bottom && y2 > bottom)\n  );\n}\n\nfunction limitPointToArea({x, y}, p2, {top, right, bottom, left}) {\n  if (x < left) {\n    y = interpolateY(left, {x, y}, p2);\n    x = left;\n  }\n  if (x > right) {\n    y = interpolateY(right, {x, y}, p2);\n    x = right;\n  }\n  if (y < top) {\n    x = interpolateX(top, {x, y}, p2);\n    y = top;\n  }\n  if (y > bottom) {\n    x = interpolateX(bottom, {x, y}, p2);\n    y = bottom;\n  }\n  return {x, y};\n}\n\nfunction limitLineToArea(p1, p2, area) {\n  const {x, y} = limitPointToArea(p1, p2, area);\n  const {x: x2, y: y2} = limitPointToArea(p2, p1, area);\n  return {x, y, x2, y2, width: Math.abs(x2 - x), height: Math.abs(y2 - y)};\n}\n\nfunction intersects(element, {mouseX, mouseY}, epsilon = EPSILON, useFinalPosition) {\n  // Adapted from https://stackoverflow.com/a/6853926/25507\n  const {x: x1, y: y1, x2, y2} = element.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition);\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const lenSq = sqr(dx) + sqr(dy);\n  const t = lenSq === 0 ? -1 : ((mouseX - x1) * dx + (mouseY - y1) * dy) / lenSq;\n  let xx, yy;\n  if (t < 0) {\n    xx = x1;\n    yy = y1;\n  } else if (t > 1) {\n    xx = x2;\n    yy = y2;\n  } else {\n    xx = x1 + t * dx;\n    yy = y1 + t * dy;\n  }\n  return (sqr(mouseX - xx) + sqr(mouseY - yy)) <= epsilon;\n}\n\nfunction isOnLabel(element, {mouseX, mouseY}, useFinalPosition, axis) {\n  const label = element.label;\n  return label.options.display && label.inRange(mouseX, mouseY, axis, useFinalPosition);\n}\n\nfunction resolveLabelElementProperties(chart, properties, options) {\n  const borderWidth = options.borderWidth;\n  const padding = toPadding(options.padding);\n  const textSize = measureLabelSize(chart.ctx, options);\n  const width = textSize.width + padding.width + borderWidth;\n  const height = textSize.height + padding.height + borderWidth;\n  return calculateLabelPosition(properties, options, {width, height, padding}, chart.chartArea);\n}\n\nfunction calculateAutoRotation(properties) {\n  const {x, y, x2, y2} = properties;\n  const rotation = Math.atan2(y2 - y, x2 - x);\n  // Flip the rotation if it goes > PI/2 or < -PI/2, so label stays upright\n  return rotation > PI / 2 ? rotation - PI : rotation < PI / -2 ? rotation + PI : rotation;\n}\n\nfunction calculateLabelPosition(properties, label, sizes, chartArea) {\n  const {width, height, padding} = sizes;\n  const {xAdjust, yAdjust} = label;\n  const p1 = {x: properties.x, y: properties.y};\n  const p2 = {x: properties.x2, y: properties.y2};\n  const rotation = label.rotation === 'auto' ? calculateAutoRotation(properties) : toRadians(label.rotation);\n  const size = rotatedSize(width, height, rotation);\n  const t = calculateT(properties, label, {labelSize: size, padding}, chartArea);\n  const pt = properties.cp ? pointInCurve(p1, properties.cp, p2, t) : pointInLine(p1, p2, t);\n  const xCoordinateSizes = {size: size.w, min: chartArea.left, max: chartArea.right, padding: padding.left};\n  const yCoordinateSizes = {size: size.h, min: chartArea.top, max: chartArea.bottom, padding: padding.top};\n  const centerX = adjustLabelCoordinate(pt.x, xCoordinateSizes) + xAdjust;\n  const centerY = adjustLabelCoordinate(pt.y, yCoordinateSizes) + yAdjust;\n  return {\n    x: centerX - (width / 2),\n    y: centerY - (height / 2),\n    x2: centerX + (width / 2),\n    y2: centerY + (height / 2),\n    centerX,\n    centerY,\n    pointX: pt.x,\n    pointY: pt.y,\n    width,\n    height,\n    rotation: toDegrees(rotation)\n  };\n}\n\nfunction rotatedSize(width, height, rotation) {\n  const cos = Math.cos(rotation);\n  const sin = Math.sin(rotation);\n  return {\n    w: Math.abs(width * cos) + Math.abs(height * sin),\n    h: Math.abs(width * sin) + Math.abs(height * cos)\n  };\n}\n\nfunction calculateT(properties, label, sizes, chartArea) {\n  let t;\n  const space = spaceAround(properties, chartArea);\n  if (label.position === 'start') {\n    t = calculateTAdjust({w: properties.x2 - properties.x, h: properties.y2 - properties.y}, sizes, label, space);\n  } else if (label.position === 'end') {\n    t = 1 - calculateTAdjust({w: properties.x - properties.x2, h: properties.y - properties.y2}, sizes, label, space);\n  } else {\n    t = getRelativePosition(1, label.position);\n  }\n  return t;\n}\n\nfunction calculateTAdjust(lineSize, sizes, label, space) {\n  const {labelSize, padding} = sizes;\n  const lineW = lineSize.w * space.dx;\n  const lineH = lineSize.h * space.dy;\n  const x = (lineW > 0) && ((labelSize.w / 2 + padding.left - space.x) / lineW);\n  const y = (lineH > 0) && ((labelSize.h / 2 + padding.top - space.y) / lineH);\n  return clamp(Math.max(x, y), 0, 0.25);\n}\n\nfunction spaceAround(properties, chartArea) {\n  const {x, x2, y, y2} = properties;\n  const t = Math.min(y, y2) - chartArea.top;\n  const l = Math.min(x, x2) - chartArea.left;\n  const b = chartArea.bottom - Math.max(y, y2);\n  const r = chartArea.right - Math.max(x, x2);\n  return {\n    x: Math.min(l, r),\n    y: Math.min(t, b),\n    dx: l <= r ? 1 : -1,\n    dy: t <= b ? 1 : -1\n  };\n}\n\nfunction adjustLabelCoordinate(coordinate, labelSizes) {\n  const {size, min, max, padding} = labelSizes;\n  const halfSize = size / 2;\n  if (size > max - min) {\n    // if it does not fit, display as much as possible\n    return (max + min) / 2;\n  }\n  if (min >= (coordinate - padding - halfSize)) {\n    coordinate = min + padding + halfSize;\n  }\n  if (max <= (coordinate + padding + halfSize)) {\n    coordinate = max - padding - halfSize;\n  }\n  return coordinate;\n}\n\nfunction getArrowHeads(line) {\n  const options = line.options;\n  const arrowStartOpts = options.arrowHeads && options.arrowHeads.start;\n  const arrowEndOpts = options.arrowHeads && options.arrowHeads.end;\n  return {\n    startOpts: arrowStartOpts,\n    endOpts: arrowEndOpts,\n    startAdjust: getLineAdjust(line, arrowStartOpts),\n    endAdjust: getLineAdjust(line, arrowEndOpts)\n  };\n}\n\nfunction getLineAdjust(line, arrowOpts) {\n  if (!arrowOpts || !arrowOpts.display) {\n    return 0;\n  }\n  const {length, width} = arrowOpts;\n  const adjust = line.options.borderWidth / 2;\n  const p1 = {x: length, y: width + adjust};\n  const p2 = {x: 0, y: adjust};\n  return Math.abs(interpolateX(0, p1, p2));\n}\n\nfunction drawArrowHead(ctx, offset, adjust, arrowOpts) {\n  if (!arrowOpts || !arrowOpts.display) {\n    return;\n  }\n  const {length, width, fill, backgroundColor, borderColor} = arrowOpts;\n  const arrowOffsetX = Math.abs(offset - length) + adjust;\n  ctx.beginPath();\n  setShadowStyle(ctx, arrowOpts);\n  setBorderStyle(ctx, arrowOpts);\n  ctx.moveTo(arrowOffsetX, -width);\n  ctx.lineTo(offset + adjust, 0);\n  ctx.lineTo(arrowOffsetX, width);\n  if (fill === true) {\n    ctx.fillStyle = backgroundColor || borderColor;\n    ctx.closePath();\n    ctx.fill();\n    ctx.shadowColor = 'transparent';\n  } else {\n    ctx.shadowColor = arrowOpts.borderShadowColor;\n  }\n  ctx.stroke();\n}\n\nfunction getControlPoint(properties, options, distance) {\n  const {x, y, x2, y2, centerX, centerY} = properties;\n  const angle = Math.atan2(y2 - y, x2 - x);\n  const cp = toPosition(options.controlPoint, 0);\n  const point = {\n    x: centerX + getSize(distance, cp.x, false),\n    y: centerY + getSize(distance, cp.y, false)\n  };\n  return rotated(point, {x: centerX, y: centerY}, angle);\n}\n\nfunction drawArrowHeadOnCurve(ctx, {x, y}, {angle, adjust}, arrowOpts) {\n  if (!arrowOpts || !arrowOpts.display) {\n    return;\n  }\n  ctx.save();\n  ctx.translate(x, y);\n  ctx.rotate(angle);\n  drawArrowHead(ctx, 0, -adjust, arrowOpts);\n  ctx.restore();\n}\n\nfunction drawCurve(ctx, element, cp, length) {\n  const {x, y, x2, y2, options} = element;\n  const {startOpts, endOpts, startAdjust, endAdjust} = getArrowHeads(element);\n  const p1 = {x, y};\n  const p2 = {x: x2, y: y2};\n  const startAngle = angleInCurve(p1, cp, p2, 0);\n  const endAngle = angleInCurve(p1, cp, p2, 1) - PI;\n  const ps = pointInCurve(p1, cp, p2, startAdjust / length);\n  const pe = pointInCurve(p1, cp, p2, 1 - endAdjust / length);\n\n  const path = new Path2D();\n  ctx.beginPath();\n  path.moveTo(ps.x, ps.y);\n  path.quadraticCurveTo(cp.x, cp.y, pe.x, pe.y);\n  ctx.shadowColor = options.borderShadowColor;\n  ctx.stroke(path);\n  element.path = path;\n  element.ctx = ctx;\n  drawArrowHeadOnCurve(ctx, ps, {angle: startAngle, adjust: startAdjust}, startOpts);\n  drawArrowHeadOnCurve(ctx, pe, {angle: endAngle, adjust: endAdjust}, endOpts);\n}\n\nclass EllipseAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const rotation = this.options.rotation;\n    const borderWidth = this.options.borderWidth;\n    if (axis !== 'x' && axis !== 'y') {\n      return pointInEllipse({x: mouseX, y: mouseY}, this.getProps(['width', 'height', 'centerX', 'centerY'], useFinalPosition), rotation, borderWidth);\n    }\n    const {x, y, x2, y2} = this.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition);\n    const hBorderWidth = borderWidth / 2;\n    const limit = axis === 'y' ? {start: y, end: y2} : {start: x, end: x2};\n    const rotatedPoint = rotated({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), toRadians(-rotation));\n    return rotatedPoint[axis] >= limit.start - hBorderWidth - EPSILON && rotatedPoint[axis] <= limit.end + hBorderWidth + EPSILON;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {width, height, centerX, centerY, options} = this;\n    ctx.save();\n    translate(ctx, this.getCenterPoint(), options.rotation);\n    setShadowStyle(ctx, this.options);\n    ctx.beginPath();\n    ctx.fillStyle = options.backgroundColor;\n    const stroke = setBorderStyle(ctx, options);\n    ctx.ellipse(centerX, centerY, height / 2, width / 2, PI / 2, 0, 2 * PI);\n    ctx.fill();\n    if (stroke) {\n      ctx.shadowColor = options.borderShadowColor;\n      ctx.stroke();\n    }\n    ctx.restore();\n  }\n\n  get label() {\n    return this.elements && this.elements[0];\n  }\n\n  resolveElementProperties(chart, options) {\n    return resolveBoxAndLabelProperties(chart, options, true);\n  }\n\n}\n\nEllipseAnnotation.id = 'ellipseAnnotation';\n\nEllipseAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  init: undefined,\n  label: Object.assign({}, BoxAnnotation.defaults.label),\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  z: 0\n};\n\nEllipseAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nEllipseAnnotation.descriptors = {\n  label: {\n    _fallback: true\n  }\n};\n\nfunction pointInEllipse(p, ellipse, rotation, borderWidth) {\n  const {width, height, centerX, centerY} = ellipse;\n  const xRadius = width / 2;\n  const yRadius = height / 2;\n\n  if (xRadius <= 0 || yRadius <= 0) {\n    return false;\n  }\n  // https://stackoverflow.com/questions/7946187/point-and-ellipse-rotated-position-test-algorithm\n  const angle = toRadians(rotation || 0);\n  const hBorderWidth = borderWidth / 2 || 0;\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const a = Math.pow(cosAngle * (p.x - centerX) + sinAngle * (p.y - centerY), 2);\n  const b = Math.pow(sinAngle * (p.x - centerX) - cosAngle * (p.y - centerY), 2);\n  return (a / Math.pow(xRadius + hBorderWidth, 2)) + (b / Math.pow(yRadius + hBorderWidth, 2)) <= 1.0001;\n}\n\nclass PointAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const {x, y, x2, y2, width} = this.getProps(['x', 'y', 'x2', 'y2', 'width'], useFinalPosition);\n    const borderWidth = this.options.borderWidth;\n    if (axis !== 'x' && axis !== 'y') {\n      return inPointRange({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), width / 2, borderWidth);\n    }\n    const hBorderWidth = borderWidth / 2;\n    const limit = axis === 'y' ? {start: y, end: y2, value: mouseY} : {start: x, end: x2, value: mouseX};\n    return limit.value >= limit.start - hBorderWidth && limit.value <= limit.end + hBorderWidth;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const options = this.options;\n    const borderWidth = options.borderWidth;\n    if (options.radius < 0.1) {\n      return;\n    }\n    ctx.save();\n    ctx.fillStyle = options.backgroundColor;\n    setShadowStyle(ctx, options);\n    const stroke = setBorderStyle(ctx, options);\n    drawPoint(ctx, this, this.centerX, this.centerY);\n    if (stroke && !isImageOrCanvas(options.pointStyle)) {\n      ctx.shadowColor = options.borderShadowColor;\n      ctx.stroke();\n    }\n    ctx.restore();\n    options.borderWidth = borderWidth;\n  }\n\n  resolveElementProperties(chart, options) {\n    const properties = resolvePointProperties(chart, options);\n    properties.initProperties = initAnimationProperties(chart, properties, options, true);\n    return properties;\n  }\n}\n\nPointAnnotation.id = 'pointAnnotation';\n\nPointAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  init: undefined,\n  pointStyle: 'circle',\n  radius: 10,\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  xAdjust: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  xValue: undefined,\n  yAdjust: 0,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  yValue: undefined,\n  z: 0\n};\n\nPointAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nclass PolygonAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    if (axis !== 'x' && axis !== 'y') {\n      return this.options.radius >= 0.1 && this.elements.length > 1 && pointIsInPolygon(this.elements, mouseX, mouseY, useFinalPosition);\n    }\n    const rotatedPoint = rotated({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), toRadians(-this.options.rotation));\n    const axisPoints = this.elements.map((point) => axis === 'y' ? point.bY : point.bX);\n    const start = Math.min(...axisPoints);\n    const end = Math.max(...axisPoints);\n    return rotatedPoint[axis] >= start && rotatedPoint[axis] <= end;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {elements, options} = this;\n    ctx.save();\n    ctx.beginPath();\n    ctx.fillStyle = options.backgroundColor;\n    setShadowStyle(ctx, options);\n    const stroke = setBorderStyle(ctx, options);\n    let first = true;\n    for (const el of elements) {\n      if (first) {\n        ctx.moveTo(el.x, el.y);\n        first = false;\n      } else {\n        ctx.lineTo(el.x, el.y);\n      }\n    }\n    ctx.closePath();\n    ctx.fill();\n    // If no border, don't draw it\n    if (stroke) {\n      ctx.shadowColor = options.borderShadowColor;\n      ctx.stroke();\n    }\n    ctx.restore();\n  }\n\n  resolveElementProperties(chart, options) {\n    const properties = resolvePointProperties(chart, options);\n    const {sides, rotation} = options;\n    const elements = [];\n    const angle = (2 * PI) / sides;\n    let rad = rotation * RAD_PER_DEG;\n    for (let i = 0; i < sides; i++, rad += angle) {\n      const elProps = buildPointElement(properties, options, rad);\n      elProps.initProperties = initAnimationProperties(chart, properties, options);\n      elements.push(elProps);\n    }\n    properties.elements = elements;\n    return properties;\n  }\n}\n\nPolygonAnnotation.id = 'polygonAnnotation';\n\nPolygonAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  init: undefined,\n  point: {\n    radius: 0\n  },\n  radius: 10,\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  sides: 3,\n  xAdjust: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  xValue: undefined,\n  yAdjust: 0,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  yValue: undefined,\n  z: 0\n};\n\nPolygonAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nfunction buildPointElement({centerX, centerY}, {radius, borderWidth}, rad) {\n  const halfBorder = borderWidth / 2;\n  const sin = Math.sin(rad);\n  const cos = Math.cos(rad);\n  const point = {x: centerX + sin * radius, y: centerY - cos * radius};\n  return {\n    type: 'point',\n    optionScope: 'point',\n    properties: {\n      x: point.x,\n      y: point.y,\n      centerX: point.x,\n      centerY: point.y,\n      bX: centerX + sin * (radius + halfBorder),\n      bY: centerY - cos * (radius + halfBorder)\n    }\n  };\n}\n\nfunction pointIsInPolygon(points, x, y, useFinalPosition) {\n  let isInside = false;\n  let A = points[points.length - 1].getProps(['bX', 'bY'], useFinalPosition);\n  for (const point of points) {\n    const B = point.getProps(['bX', 'bY'], useFinalPosition);\n    if ((B.bY > y) !== (A.bY > y) && x < (A.bX - B.bX) * (y - B.bY) / (A.bY - B.bY) + B.bX) {\n      isInside = !isInside;\n    }\n    A = B;\n  }\n  return isInside;\n}\n\nconst annotationTypes = {\n  box: BoxAnnotation,\n  ellipse: EllipseAnnotation,\n  label: LabelAnnotation,\n  line: LineAnnotation,\n  point: PointAnnotation,\n  polygon: PolygonAnnotation\n};\n\n/**\n * Register fallback for annotation elements\n * For example lineAnnotation options would be looked through:\n * - the annotation object (options.plugins.annotation.annotations[id])\n * - element options (options.elements.lineAnnotation)\n * - element defaults (defaults.elements.lineAnnotation)\n * - annotation plugin defaults (defaults.plugins.annotation, this is what we are registering here)\n */\nObject.keys(annotationTypes).forEach(key => {\n  defaults.describe(`elements.${annotationTypes[key].id}`, {\n    _fallback: 'plugins.annotation.common'\n  });\n});\n\nconst directUpdater = {\n  update: Object.assign\n};\n\nconst hooks$1 = eventHooks.concat(elementHooks);\nconst resolve = (value, optDefs) => isObject(optDefs) ? resolveObj(value, optDefs) : value;\n\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import(\"chart.js\").UpdateMode } UpdateMode\n * @typedef { import('../../types/options').AnnotationPluginOptions } AnnotationPluginOptions\n */\n\n/**\n * @param {string} prop\n * @returns {boolean}\n */\nconst isIndexable = (prop) => prop === 'color' || prop === 'font';\n\n/**\n * Resolve the annotation type, checking if is supported.\n * @param {string} [type=line] - annotation type\n * @returns {string} resolved annotation type\n */\nfunction resolveType(type = 'line') {\n  if (annotationTypes[type]) {\n    return type;\n  }\n  console.warn(`Unknown annotation type: '${type}', defaulting to 'line'`);\n  return 'line';\n}\n\n/**\n * @param {Chart} chart\n * @param {Object} state\n * @param {AnnotationPluginOptions} options\n * @param {UpdateMode} mode\n */\nfunction updateElements(chart, state, options, mode) {\n  const animations = resolveAnimations(chart, options.animations, mode);\n\n  const annotations = state.annotations;\n  const elements = resyncElements(state.elements, annotations);\n\n  for (let i = 0; i < annotations.length; i++) {\n    const annotationOptions = annotations[i];\n    const element = getOrCreateElement(elements, i, annotationOptions.type);\n    const resolver = annotationOptions.setContext(getContext(chart, element, annotationOptions));\n    const properties = element.resolveElementProperties(chart, resolver);\n\n    properties.skip = toSkip(properties);\n\n    if ('elements' in properties) {\n      updateSubElements(element, properties.elements, resolver, animations);\n      // Remove the sub-element definitions from properties, so the actual elements\n      // are not overwritten by their definitions\n      delete properties.elements;\n    }\n\n    if (!defined(element.x)) {\n      // If the element is newly created, assing the properties directly - to\n      // make them readily awailable to any scriptable options. If we do not do this,\n      // the properties retruned by `resolveElementProperties` are available only\n      // after options resolution.\n      Object.assign(element, properties);\n    }\n\n    Object.assign(element, properties.initProperties);\n    properties.options = resolveAnnotationOptions(resolver);\n\n    animations.update(element, properties);\n  }\n}\n\nfunction toSkip(properties) {\n  return isNaN(properties.x) || isNaN(properties.y);\n}\n\nfunction resolveAnimations(chart, animOpts, mode) {\n  if (mode === 'reset' || mode === 'none' || mode === 'resize') {\n    return directUpdater;\n  }\n  return new Animations(chart, animOpts);\n}\n\nfunction updateSubElements(mainElement, elements, resolver, animations) {\n  const subElements = mainElement.elements || (mainElement.elements = []);\n  subElements.length = elements.length;\n  for (let i = 0; i < elements.length; i++) {\n    const definition = elements[i];\n    const properties = definition.properties;\n    const subElement = getOrCreateElement(subElements, i, definition.type, definition.initProperties);\n    const subResolver = resolver[definition.optionScope].override(definition);\n    properties.options = resolveAnnotationOptions(subResolver);\n    animations.update(subElement, properties);\n  }\n}\n\nfunction getOrCreateElement(elements, index, type, initProperties) {\n  const elementClass = annotationTypes[resolveType(type)];\n  let element = elements[index];\n  if (!element || !(element instanceof elementClass)) {\n    element = elements[index] = new elementClass();\n    Object.assign(element, initProperties);\n  }\n  return element;\n}\n\nfunction resolveAnnotationOptions(resolver) {\n  const elementClass = annotationTypes[resolveType(resolver.type)];\n  const result = {};\n  result.id = resolver.id;\n  result.type = resolver.type;\n  result.drawTime = resolver.drawTime;\n  Object.assign(result,\n    resolveObj(resolver, elementClass.defaults),\n    resolveObj(resolver, elementClass.defaultRoutes));\n  for (const hook of hooks$1) {\n    result[hook] = resolver[hook];\n  }\n  return result;\n}\n\nfunction resolveObj(resolver, defs) {\n  const result = {};\n  for (const prop of Object.keys(defs)) {\n    const optDefs = defs[prop];\n    const value = resolver[prop];\n    if (isIndexable(prop) && isArray(value)) {\n      result[prop] = value.map((item) => resolve(item, optDefs));\n    } else {\n      result[prop] = resolve(value, optDefs);\n    }\n  }\n  return result;\n}\n\nfunction getContext(chart, element, annotation) {\n  return element.$context || (element.$context = Object.assign(Object.create(chart.getContext()), {\n    element,\n    id: annotation.id,\n    type: 'annotation'\n  }));\n}\n\nfunction resyncElements(elements, annotations) {\n  const count = annotations.length;\n  const start = elements.length;\n\n  if (start < count) {\n    const add = count - start;\n    elements.splice(start, 0, ...new Array(add));\n  } else if (start > count) {\n    elements.splice(count, start - count);\n  }\n  return elements;\n}\n\nvar version = \"2.2.1\";\n\nconst chartStates = new Map();\nconst hooks = eventHooks.concat(elementHooks);\n\nvar annotation = {\n  id: 'annotation',\n\n  version,\n\n  beforeRegister() {\n    requireVersion('chart.js', '3.7', Chart.version);\n  },\n\n  afterRegister() {\n    Chart.register(annotationTypes);\n  },\n\n  afterUnregister() {\n    Chart.unregister(annotationTypes);\n  },\n\n  beforeInit(chart) {\n    chartStates.set(chart, {\n      annotations: [],\n      elements: [],\n      visibleElements: [],\n      listeners: {},\n      listened: false,\n      moveListened: false,\n      hooks: {},\n      hooked: false,\n      hovered: []\n    });\n  },\n\n  beforeUpdate(chart, args, options) {\n    const state = chartStates.get(chart);\n    const annotations = state.annotations = [];\n\n    let annotationOptions = options.annotations;\n    if (isObject(annotationOptions)) {\n      Object.keys(annotationOptions).forEach(key => {\n        const value = annotationOptions[key];\n        if (isObject(value)) {\n          value.id = key;\n          annotations.push(value);\n        }\n      });\n    } else if (isArray(annotationOptions)) {\n      annotations.push(...annotationOptions);\n    }\n    verifyScaleOptions(annotations, chart.scales);\n  },\n\n  afterDataLimits(chart, args) {\n    const state = chartStates.get(chart);\n    adjustScaleRange(chart, args.scale, state.annotations.filter(a => a.display && a.adjustScaleRange));\n  },\n\n  afterUpdate(chart, args, options) {\n    const state = chartStates.get(chart);\n    updateListeners(chart, state, options);\n    updateElements(chart, state, options, args.mode);\n    state.visibleElements = state.elements.filter(el => !el.skip && el.options.display);\n    updateHooks(chart, state, options);\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    draw(chart, 'beforeDatasetsDraw', options.clip);\n  },\n\n  afterDatasetsDraw(chart, _args, options) {\n    draw(chart, 'afterDatasetsDraw', options.clip);\n  },\n\n  beforeDraw(chart, _args, options) {\n    draw(chart, 'beforeDraw', options.clip);\n  },\n\n  afterDraw(chart, _args, options) {\n    draw(chart, 'afterDraw', options.clip);\n  },\n\n  beforeEvent(chart, args, options) {\n    const state = chartStates.get(chart);\n    if (handleEvent(state, args.event, options)) {\n      args.changed = true;\n    }\n  },\n\n  afterDestroy(chart) {\n    chartStates.delete(chart);\n  },\n\n  _getState(chart) {\n    return chartStates.get(chart);\n  },\n\n  defaults: {\n    animations: {\n      numbers: {\n        properties: ['x', 'y', 'x2', 'y2', 'width', 'height', 'centerX', 'centerY', 'pointX', 'pointY', 'radius'],\n        type: 'number'\n      },\n    },\n    clip: true,\n    interaction: {\n      mode: undefined,\n      axis: undefined,\n      intersect: undefined\n    },\n    common: {\n      drawTime: 'afterDatasetsDraw',\n      init: false,\n      label: {\n      }\n    }\n  },\n\n  descriptors: {\n    _indexable: false,\n    _scriptable: (prop) => !hooks.includes(prop) && prop !== 'init',\n    annotations: {\n      _allKeys: false,\n      _fallback: (prop, opts) => `elements.${annotationTypes[resolveType(opts.type)].id}`\n    },\n    interaction: {\n      _fallback: true\n    },\n    common: {\n      label: {\n        _indexable: isIndexable,\n        _fallback: true\n      },\n      _indexable: isIndexable\n    }\n  },\n\n  additionalOptionScopes: ['']\n};\n\nfunction draw(chart, caller, clip) {\n  const {ctx, chartArea} = chart;\n  const state = chartStates.get(chart);\n\n  if (clip) {\n    clipArea(ctx, chartArea);\n  }\n\n  const drawableElements = getDrawableElements(state.visibleElements, caller).sort((a, b) => a.element.options.z - b.element.options.z);\n  for (const item of drawableElements) {\n    drawElement(ctx, chartArea, state, item);\n  }\n\n  if (clip) {\n    unclipArea(ctx);\n  }\n}\n\nfunction getDrawableElements(elements, caller) {\n  const drawableElements = [];\n  for (const el of elements) {\n    if (el.options.drawTime === caller) {\n      drawableElements.push({element: el, main: true});\n    }\n    if (el.elements && el.elements.length) {\n      for (const sub of el.elements) {\n        if (sub.options.display && sub.options.drawTime === caller) {\n          drawableElements.push({element: sub});\n        }\n      }\n    }\n  }\n  return drawableElements;\n}\n\nfunction drawElement(ctx, chartArea, state, item) {\n  const el = item.element;\n  if (item.main) {\n    invokeHook(state, el, 'beforeDraw');\n    el.draw(ctx, chartArea);\n    invokeHook(state, el, 'afterDraw');\n  } else {\n    el.draw(ctx, chartArea);\n  }\n}\n\nexport { annotation as default };\n"],"names":["interaction","modes","point","state","event","filterElements","intersect","nearest","options","minDistance","Number","POSITIVE_INFINITY","reduce","nearestItems","element","center","getCenterPoint","evenPoint","axis","x","y","getPointByAxis","distance","distanceBetweenPoints","push","sort","a","b","_index","slice","getNearestItem","getElements","mode","visibleElements","filter","inRange","inRangeByAxis","isOlderPart","act","req","length","EPSILON","clamp","from","to","Math","min","max","clampAll","obj","key","Object","keys","inBoxRange","_ref","borderWidth","x2","y2","hBorderWidth","inRangeX","inRangeY","getElementCenterPoint","useFinalPosition","centerX","centerY","getProps","isPercentString","s","endsWith","toPercent","parseFloat","toPositivePercent","getRelativePosition","size","position","getSize","value","positivePercent","arguments","undefined","toPosition","defaultValue","isObject","valueOrDefault","isBoundToPoint","defined","xValue","yValue","initAnimationProperties","chart","properties","centerBased","initAnim","init","applyDefault","result","checkCallbackResult","callback","loadHooks","hooks","hooksContainer","activated","forEach","hook","isFunction","_ref2","radius","width","height","widthCache","Map","fontsKey","fonts","prev","item","string","isImageOrCanvas","content","type","toString","translate","ctx","_ref3","rotation","rotate","toRadians","setBorderStyle","lineCap","borderCapStyle","setLineDash","borderDash","lineDashOffset","borderDashOffset","lineJoin","borderJoinStyle","lineWidth","strokeStyle","borderColor","setShadowStyle","shadowColor","backgroundShadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","measureLabelSize","optFont","font","isArray","map","f","toFont","strokeWidth","textStrokeWidth","lines","mapKey","join","_measureText","has","set","save","count","i","text","measureText","lineHeight","restore","calculateLabelSize","get","drawBox","rect","stroke","fillStyle","backgroundColor","beginPath","addRoundedRectPath","w","h","toTRBLCorners","borderRadius","closePath","fill","borderShadowColor","drawLabel","globalAlpha","elementValue","opacity","isNumber","getOpacity","style","drawImage","labels","optColor","color","colors","textAlign","calculateTextAlignment","textBaseline","miterLimit","textStrokeColor","setTextStrokeStyle","_ref5","lhs","l","lh","strokeText","applyLabelDecoration","_ref6","_ref7","c","fillText","applyLabelContent","drawPoint","pointStyle","rad","RAD_PER_DEG","isNaN","notRadius","_ref4","xOffset","yOffset","cornerRadius","arc","TAU","moveTo","sin","cos","TWO_THIRDS_PI","lineTo","QUARTER_PI","PI","HALF_PI","SQRT1_2","drawPointStyle","limitedLineScale","xScaleID","start","end","startProp","endProp","yScaleID","scaleValue","scale","fallback","parse","isFinite","getPixelForValue","retrieveScaleID","scales","scaleID","charAt","axes","values","id","getDimensionByScale","reverse","getChartPoint","chartArea","xScale","yScale","left","top","resolveBoxProperties","right","bottom","xDim","getChartDimensionByScale","xMin","xMax","yDim","yMin","yMax","resolvePointProperties","box","adjustCenterX","xAdjust","adjustCenterY","yAdjust","getChartCircle","resolveLineProperties","area","NaN","endValue","isHorizontal","resolveFullLineProperties","scaleId","dim","resolveLimitedLineProperties","resolveBoxAndLabelProperties","initProperties","elements","optionScope","resolveLabelElementProperties$1","calculatePosition$1","boxOpts","labelOpts","padding","padStart","padEnd","adjust","label","callout","display","toPadding","labelSize","_ref8","calculateX","_ref9","calculateY","rotated","angle","cx","cy","moveHooks","eventHooks","concat","handleEvent","listened","moveListened","previous","hovered","context","changed","dispatchMoveEvents","handleMoveEvents","listeners","dispatchEvent","click","handleClickEvents","_ref10","checkElements","indexOf","handler","$context","elementHooks","invokeHook","hooked","callbackHook","adjustScaleRange","annotations","range","scaleIDOption","limits","NEGATIVE_INFINITY","annotation","updateLimits","getScaleLimits","changeScaleLimit","handleTickRangeOptions","limit","suggestedLimit","scaleOptions","scaleLimitDefined","verifyScaleIDs","verifyProperties","console","warn","prop","props","raw","BoxAnnotation","Element","mouseX","mouseY","this","draw","resolveElementProperties","defaults","drawTime","family","weight","z","defaultRoutes","descriptors","_fallback","positions","LabelAnnotation","visible","_visible","pointX","pointY","calloutPosition","includes","xPoints","yPoints","index","rotatedPoint","resolveCalloutAutoPosition","resolveCalloutPosition","margin","isPointInRange","separatorStart","separatorEnd","getCalloutSeparatorAdjust","getCalloutSeparatorCoord","sideStart","sideEnd","side","getCalloutSideAdjust","getCalloutSideCoord","drawCallout","_ref11","getLabelSize","boxSize","calculatePosition","measureRect","pointInLine","p1","p2","t","interpolateX","abs","interpolateY","sqr","v","coordInCurve","cp","pointInCurve","coordAngleInCurve","angleInCurve","atan2","LineAnnotation","path","mx","currentDevicePixelRatio","my","isPointInStroke","isOnLabel","_ref19","epsilon","x1","y1","dx","dy","lenSq","xx","yy","intersects","_ref13","_ref14","rangeLimit","_ref12","inAxisRange","sqrt","pow","curve","startOpts","endOpts","startAdjust","endAdjust","getArrowHeads","startAngle","endAngle","ps","pe","Path2D","quadraticCurveTo","drawArrowHeadOnCurve","drawCurve","drawArrowHead","inside","_ref15","_ref16","isLineInArea","limitPointToArea","limitLineToArea","controlPoint","getControlPoint","labelProperties","textSize","sizes","calculateAutoRotation","rotatedSize","space","r","spaceAround","calculateTAdjust","calculateT","pt","xCoordinateSizes","yCoordinateSizes","adjustLabelCoordinate","toDegrees","calculateLabelPosition","resolveLabelElementProperties","arrowHeadsDefaults","_ref17","_ref18","_ref20","lineSize","lineW","lineH","coordinate","labelSizes","halfSize","line","arrowStartOpts","arrowHeads","arrowEndOpts","getLineAdjust","arrowOpts","offset","arrowOffsetX","_ref21","_ref22","assign","EllipseAnnotation","p","ellipse","xRadius","yRadius","cosAngle","sinAngle","pointInEllipse","PointAnnotation","inPointRange","PolygonAnnotation","points","isInside","A","B","bY","bX","pointIsInPolygon","axisPoints","first","el","sides","elProps","buildPointElement","_ref23","_ref24","halfBorder","annotationTypes","polygon","describe","directUpdater","update","hooks$1","resolve","optDefs","resolveObj","isIndexable","resolveType","updateElements","animations","animOpts","Animations","resolveAnimations","add","splice","Array","resyncElements","annotationOptions","getOrCreateElement","resolver","setContext","getContext","skip","toSkip","updateSubElements","resolveAnnotationOptions","mainElement","subElements","definition","subElement","subResolver","override","elementClass","defs","create","chartStates","version","beforeRegister","pkg","ver","strict","parts","split","parseInt","Error","requireVersion","Chart","afterRegister","register","afterUnregister","unregister","beforeInit","beforeUpdate","args","verifyScaleOptions","afterDataLimits","afterUpdate","_getElements","scope","updateListeners","updateHooks","beforeDatasetsDraw","_args","clip","afterDatasetsDraw","beforeDraw","afterDraw","beforeEvent","afterDestroy","delete","_getState","numbers","common","_indexable","_scriptable","_allKeys","opts","additionalOptionScopes","caller","clipArea","drawableElements","main","sub","getDrawableElements","drawElement","unclipArea"],"sourceRoot":""}
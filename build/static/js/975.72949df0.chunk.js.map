{"version":3,"file":"static/js/975.72949df0.chunk.js","mappings":"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","sources":["../node_modules/chartjs-plugin-annotation/dist/chartjs-plugin-annotation.esm.js"],"sourcesContent":["/*!\n* chartjs-plugin-annotation v2.2.1\n* https://www.chartjs.org/chartjs-plugin-annotation/index\n * (c) 2023 chartjs-plugin-annotation Contributors\n * Released under the MIT License\n */\nimport { Element, defaults, Animations, Chart } from 'chart.js';\nimport { distanceBetweenPoints, isObject, valueOrDefault, defined, callback, isFunction, toRadians, isArray, toFont, addRoundedRectPath, toTRBLCorners, QUARTER_PI, PI, HALF_PI, TWO_THIRDS_PI, TAU, isNumber, RAD_PER_DEG, toPadding, isFinite, toDegrees, clipArea, unclipArea } from 'chart.js/helpers';\n\n/**\n * @typedef { import(\"chart.js\").ChartEvent } ChartEvent\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */\n\nconst interaction = {\n  modes: {\n    /**\n     * Point mode returns all elements that hit test based on the event position\n     * @param {Object} state - the state of the plugin\n     * @param {ChartEvent} event - the event we are find things at\n     * @return {AnnotationElement[]} - elements that are found\n     */\n    point(state, event) {\n      return filterElements(state, event, {intersect: true});\n    },\n\n    /**\n     * Nearest mode returns the element closest to the event position\n     * @param {Object} state - the state of the plugin\n     * @param {ChartEvent} event - the event we are find things at\n     * @param {Object} options - interaction options to use\n     * @return {AnnotationElement[]} - elements that are found (only 1 element)\n     */\n    nearest(state, event, options) {\n      return getNearestItem(state, event, options);\n    },\n    /**\n     * x mode returns the elements that hit-test at the current x coordinate\n     * @param {Object} state - the state of the plugin\n     * @param {ChartEvent} event - the event we are find things at\n     * @param {Object} options - interaction options to use\n     * @return {AnnotationElement[]} - elements that are found\n     */\n    x(state, event, options) {\n      return filterElements(state, event, {intersect: options.intersect, axis: 'x'});\n    },\n\n    /**\n     * y mode returns the elements that hit-test at the current y coordinate\n     * @param {Object} state - the state of the plugin\n     * @param {ChartEvent} event - the event we are find things at\n     * @param {Object} options - interaction options to use\n     * @return {AnnotationElement[]} - elements that are found\n     */\n    y(state, event, options) {\n      return filterElements(state, event, {intersect: options.intersect, axis: 'y'});\n    }\n  }\n};\n\n/**\n * Returns all elements that hit test based on the event position\n * @param {Object} state - the state of the plugin\n * @param {ChartEvent} event - the event we are find things at\n * @param {Object} options - interaction options to use\n * @return {AnnotationElement[]} - elements that are found\n */\nfunction getElements(state, event, options) {\n  const mode = interaction.modes[options.mode] || interaction.modes.nearest;\n  return mode(state, event, options);\n}\n\nfunction inRangeByAxis(element, event, axis) {\n  if (axis !== 'x' && axis !== 'y') {\n    return element.inRange(event.x, event.y, 'x', true) || element.inRange(event.x, event.y, 'y', true);\n  }\n  return element.inRange(event.x, event.y, axis, true);\n}\n\nfunction getPointByAxis(event, center, axis) {\n  if (axis === 'x') {\n    return {x: event.x, y: center.y};\n  } else if (axis === 'y') {\n    return {x: center.x, y: event.y};\n  }\n  return center;\n}\n\nfunction filterElements(state, event, options) {\n  return state.visibleElements.filter((element) => options.intersect ? element.inRange(event.x, event.y) : inRangeByAxis(element, event, options.axis));\n}\n\nfunction getNearestItem(state, event, options) {\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  return filterElements(state, event, options)\n    .reduce((nearestItems, element) => {\n      const center = element.getCenterPoint();\n      const evenPoint = getPointByAxis(event, center, options.axis);\n      const distance = distanceBetweenPoints(event, evenPoint);\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n\n      return nearestItems;\n    }, [])\n    .sort((a, b) => a._index - b._index)\n    .slice(0, 1); // return only the top item;\n}\n\nconst isOlderPart = (act, req) => req > act || (act.length > req.length && act.slice(0, req.length) === req);\n\n/**\n * @typedef { import('chart.js').Point } Point\n * @typedef { import('chart.js').InteractionAxis } InteractionAxis\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */\n\nconst EPSILON = 0.001;\nconst clamp = (x, from, to) => Math.min(to, Math.max(from, x));\n\n/**\n * @param {Object} obj\n * @param {number} from\n * @param {number} to\n * @returns {Object}\n */\nfunction clampAll(obj, from, to) {\n  for (const key of Object.keys(obj)) {\n    obj[key] = clamp(obj[key], from, to);\n  }\n  return obj;\n}\n\n/**\n * @param {Point} point\n * @param {Point} center\n * @param {number} radius\n * @param {number} borderWidth\n * @returns {boolean}\n */\nfunction inPointRange(point, center, radius, borderWidth) {\n  if (!point || !center || radius <= 0) {\n    return false;\n  }\n  const hBorderWidth = borderWidth / 2;\n  return (Math.pow(point.x - center.x, 2) + Math.pow(point.y - center.y, 2)) <= Math.pow(radius + hBorderWidth, 2);\n}\n\n/**\n * @param {Point} point\n * @param {{x: number, y: number, x2: number, y2: number}} rect\n * @param {InteractionAxis} axis\n * @param {number} borderWidth\n * @returns {boolean}\n */\nfunction inBoxRange(point, {x, y, x2, y2}, axis, borderWidth) {\n  const hBorderWidth = borderWidth / 2;\n  const inRangeX = point.x >= x - hBorderWidth - EPSILON && point.x <= x2 + hBorderWidth + EPSILON;\n  const inRangeY = point.y >= y - hBorderWidth - EPSILON && point.y <= y2 + hBorderWidth + EPSILON;\n  if (axis === 'x') {\n    return inRangeX;\n  } else if (axis === 'y') {\n    return inRangeY;\n  }\n  return inRangeX && inRangeY;\n}\n\n/**\n * @param {AnnotationElement} element\n * @param {boolean} useFinalPosition\n * @returns {Point}\n */\nfunction getElementCenterPoint(element, useFinalPosition) {\n  const {centerX, centerY} = element.getProps(['centerX', 'centerY'], useFinalPosition);\n  return {x: centerX, y: centerY};\n}\n\n/**\n * @param {string} pkg\n * @param {string} min\n * @param {string} ver\n * @param {boolean} [strict=true]\n * @returns {boolean}\n */\nfunction requireVersion(pkg, min, ver, strict = true) {\n  const parts = ver.split('.');\n  let i = 0;\n  for (const req of min.split('.')) {\n    const act = parts[i++];\n    if (parseInt(req, 10) < parseInt(act, 10)) {\n      break;\n    }\n    if (isOlderPart(act, req)) {\n      if (strict) {\n        throw new Error(`${pkg} v${ver} is not supported. v${min} or newer is required.`);\n      } else {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nconst isPercentString = (s) => typeof s === 'string' && s.endsWith('%');\nconst toPercent = (s) => parseFloat(s) / 100;\nconst toPositivePercent = (s) => clamp(toPercent(s), 0, 1);\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import('../../types/element').AnnotationBoxModel } AnnotationBoxModel\n * @typedef { import('../../types/options').AnnotationPointCoordinates } AnnotationPointCoordinates\n * @typedef { import('../../types/label').CoreLabelOptions } CoreLabelOptions\n * @typedef { import('../../types/label').LabelPositionObject } LabelPositionObject\n */\n\n/**\n * @param {number} size\n * @param {number|string} position\n * @returns {number}\n */\nfunction getRelativePosition(size, position) {\n  if (position === 'start') {\n    return 0;\n  }\n  if (position === 'end') {\n    return size;\n  }\n  if (isPercentString(position)) {\n    return toPositivePercent(position) * size;\n  }\n  return size / 2;\n}\n\n/**\n * @param {number} size\n * @param {number|string} value\n * @param {boolean} [positivePercent=true]\n * @returns {number}\n */\nfunction getSize(size, value, positivePercent = true) {\n  if (typeof value === 'number') {\n    return value;\n  } else if (isPercentString(value)) {\n    return (positivePercent ? toPositivePercent(value) : toPercent(value)) * size;\n  }\n  return size;\n}\n\n/**\n * @param {{x: number, width: number}} size\n * @param {CoreLabelOptions} options\n * @returns {number}\n */\nfunction calculateTextAlignment(size, options) {\n  const {x, width} = size;\n  const textAlign = options.textAlign;\n  if (textAlign === 'center') {\n    return x + width / 2;\n  } else if (textAlign === 'end' || textAlign === 'right') {\n    return x + width;\n  }\n  return x;\n}\n\n/**\n * @param {{x: number|string, y: number|string}|string|number} value\n * @param {string|number} defaultValue\n * @returns {{x: number|string, y: number|string}}\n */\nfunction toPosition(value, defaultValue = 'center') {\n  if (isObject(value)) {\n    return {\n      x: valueOrDefault(value.x, defaultValue),\n      y: valueOrDefault(value.y, defaultValue),\n    };\n  }\n  value = valueOrDefault(value, defaultValue);\n  return {\n    x: value,\n    y: value\n  };\n}\n\n/**\n * @param {AnnotationPointCoordinates} options\n * @returns {boolean}\n */\nfunction isBoundToPoint(options) {\n  return options && (defined(options.xValue) || defined(options.yValue));\n}\n\n/**\n * @param {Chart} chart\n * @param {AnnotationBoxModel} properties\n * @param {CoreAnnotationOptions} options\n * @param {boolean} [centerBased=false]\n * @returns {AnnotationBoxModel}\n */\nfunction initAnimationProperties(chart, properties, options, centerBased = false) {\n  const initAnim = options.init;\n  if (!initAnim) {\n    return;\n  } else if (initAnim === true) {\n    return applyDefault(properties, centerBased);\n  }\n  return checkCallbackResult(properties, centerBased, callback(initAnim, [{chart, properties, options}]));\n}\n\n/**\n * @param {Object} options\n * @param {Array} hooks\n * @param {Object} hooksContainer\n * @returns {boolean}\n */\nfunction loadHooks(options, hooks, hooksContainer) {\n  let activated = false;\n  hooks.forEach(hook => {\n    if (isFunction(options[hook])) {\n      activated = true;\n      hooksContainer[hook] = options[hook];\n    } else if (defined(hooksContainer[hook])) {\n      delete hooksContainer[hook];\n    }\n  });\n  return activated;\n}\n\nfunction applyDefault({centerX, centerY}, centerBased) {\n  if (centerBased) {\n    return {centerX, centerY, radius: 0, width: 0, height: 0};\n  }\n  return {x: centerX, y: centerY, x2: centerX, y2: centerY, width: 0, height: 0};\n}\n\nfunction checkCallbackResult(properties, centerBased, result) {\n  if (result === true) {\n    return applyDefault(properties, centerBased);\n  } else if (isObject(result)) {\n    return result;\n  }\n}\n\nconst widthCache = new Map();\nconst notRadius = (radius) => isNaN(radius) || radius <= 0;\nconst fontsKey = (fonts) => fonts.reduce(function(prev, item) {\n  prev += item.string;\n  return prev;\n}, '');\n\n/**\n * @typedef { import('chart.js').Point } Point\n * @typedef { import('../../types/label').CoreLabelOptions } CoreLabelOptions\n * @typedef { import('../../types/options').PointAnnotationOptions } PointAnnotationOptions\n */\n\n/**\n * Determine if content is an image or a canvas.\n * @param {*} content\n * @returns boolean|undefined\n * @todo move this function to chart.js helpers\n */\nfunction isImageOrCanvas(content) {\n  if (content && typeof content === 'object') {\n    const type = content.toString();\n    return (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]');\n  }\n}\n\n/**\n * Set the translation on the canvas if the rotation must be applied.\n * @param {CanvasRenderingContext2D} ctx - chart canvas context\n * @param {Point} point - the point of translation\n * @param {number} rotation - rotation (in degrees) to apply\n */\nfunction translate(ctx, {x, y}, rotation) {\n  if (rotation) {\n    ctx.translate(x, y);\n    ctx.rotate(toRadians(rotation));\n    ctx.translate(-x, -y);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {Object} options\n * @returns {boolean|undefined}\n */\nfunction setBorderStyle(ctx, options) {\n  if (options && options.borderWidth) {\n    ctx.lineCap = options.borderCapStyle;\n    ctx.setLineDash(options.borderDash);\n    ctx.lineDashOffset = options.borderDashOffset;\n    ctx.lineJoin = options.borderJoinStyle;\n    ctx.lineWidth = options.borderWidth;\n    ctx.strokeStyle = options.borderColor;\n    return true;\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {Object} options\n */\nfunction setShadowStyle(ctx, options) {\n  ctx.shadowColor = options.backgroundShadowColor;\n  ctx.shadowBlur = options.shadowBlur;\n  ctx.shadowOffsetX = options.shadowOffsetX;\n  ctx.shadowOffsetY = options.shadowOffsetY;\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {CoreLabelOptions} options\n * @returns {{width: number, height: number}}\n */\nfunction measureLabelSize(ctx, options) {\n  const content = options.content;\n  if (isImageOrCanvas(content)) {\n    return {\n      width: getSize(content.width, options.width),\n      height: getSize(content.height, options.height)\n    };\n  }\n  const optFont = options.font;\n  const fonts = isArray(optFont) ? optFont.map(f => toFont(f)) : [toFont(optFont)];\n  const strokeWidth = options.textStrokeWidth;\n  const lines = isArray(content) ? content : [content];\n  const mapKey = lines.join() + fontsKey(fonts) + strokeWidth + (ctx._measureText ? '-spriting' : '');\n  if (!widthCache.has(mapKey)) {\n    widthCache.set(mapKey, calculateLabelSize(ctx, lines, fonts, strokeWidth));\n  }\n  return widthCache.get(mapKey);\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {{x: number, y: number, width: number, height: number}} rect\n * @param {Object} options\n */\nfunction drawBox(ctx, rect, options) {\n  const {x, y, width, height} = rect;\n  ctx.save();\n  setShadowStyle(ctx, options);\n  const stroke = setBorderStyle(ctx, options);\n  ctx.fillStyle = options.backgroundColor;\n  ctx.beginPath();\n  addRoundedRectPath(ctx, {\n    x, y, w: width, h: height,\n    radius: clampAll(toTRBLCorners(options.borderRadius), 0, Math.min(width, height) / 2)\n  });\n  ctx.closePath();\n  ctx.fill();\n  if (stroke) {\n    ctx.shadowColor = options.borderShadowColor;\n    ctx.stroke();\n  }\n  ctx.restore();\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {{x: number, y: number, width: number, height: number}} rect\n * @param {CoreLabelOptions} options\n */\nfunction drawLabel(ctx, rect, options) {\n  const content = options.content;\n  if (isImageOrCanvas(content)) {\n    ctx.save();\n    ctx.globalAlpha = getOpacity(options.opacity, content.style.opacity);\n    ctx.drawImage(content, rect.x, rect.y, rect.width, rect.height);\n    ctx.restore();\n    return;\n  }\n  const labels = isArray(content) ? content : [content];\n  const optFont = options.font;\n  const fonts = isArray(optFont) ? optFont.map(f => toFont(f)) : [toFont(optFont)];\n  const optColor = options.color;\n  const colors = isArray(optColor) ? optColor : [optColor];\n  const x = calculateTextAlignment(rect, options);\n  const y = rect.y + options.textStrokeWidth / 2;\n  ctx.save();\n  ctx.textBaseline = 'middle';\n  ctx.textAlign = options.textAlign;\n  if (setTextStrokeStyle(ctx, options)) {\n    applyLabelDecoration(ctx, {x, y}, labels, fonts);\n  }\n  applyLabelContent(ctx, {x, y}, labels, {fonts, colors});\n  ctx.restore();\n}\n\nfunction setTextStrokeStyle(ctx, options) {\n  if (options.textStrokeWidth > 0) {\n    // https://stackoverflow.com/questions/13627111/drawing-text-with-an-outer-stroke-with-html5s-canvas\n    ctx.lineJoin = 'round';\n    ctx.miterLimit = 2;\n    ctx.lineWidth = options.textStrokeWidth;\n    ctx.strokeStyle = options.textStrokeColor;\n    return true;\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {{radius: number, options: PointAnnotationOptions}} element\n * @param {number} x\n * @param {number} y\n */\nfunction drawPoint(ctx, element, x, y) {\n  const {radius, options} = element;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (isImageOrCanvas(style)) {\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(rad);\n    ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n    ctx.restore();\n    return;\n  }\n  if (notRadius(radius)) {\n    return;\n  }\n  drawPointStyle(ctx, {x, y, radius, rotation, style, rad});\n}\n\nfunction drawPointStyle(ctx, {x, y, radius, rotation, style, rad}) {\n  let xOffset, yOffset, size, cornerRadius;\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n\n  ctx.fill();\n}\n\nfunction calculateLabelSize(ctx, lines, fonts, strokeWidth) {\n  ctx.save();\n  const count = lines.length;\n  let width = 0;\n  let height = strokeWidth;\n  for (let i = 0; i < count; i++) {\n    const font = fonts[Math.min(i, fonts.length - 1)];\n    ctx.font = font.string;\n    const text = lines[i];\n    width = Math.max(width, ctx.measureText(text).width + strokeWidth);\n    height += font.lineHeight;\n  }\n  ctx.restore();\n  return {width, height};\n}\n\nfunction applyLabelDecoration(ctx, {x, y}, labels, fonts) {\n  ctx.beginPath();\n  let lhs = 0;\n  labels.forEach(function(l, i) {\n    const f = fonts[Math.min(i, fonts.length - 1)];\n    const lh = f.lineHeight;\n    ctx.font = f.string;\n    ctx.strokeText(l, x, y + lh / 2 + lhs);\n    lhs += lh;\n  });\n  ctx.stroke();\n}\n\nfunction applyLabelContent(ctx, {x, y}, labels, {fonts, colors}) {\n  let lhs = 0;\n  labels.forEach(function(l, i) {\n    const c = colors[Math.min(i, colors.length - 1)];\n    const f = fonts[Math.min(i, fonts.length - 1)];\n    const lh = f.lineHeight;\n    ctx.beginPath();\n    ctx.font = f.string;\n    ctx.fillStyle = c;\n    ctx.fillText(l, x, y + lh / 2 + lhs);\n    lhs += lh;\n    ctx.fill();\n  });\n}\n\nfunction getOpacity(value, elementValue) {\n  const opacity = isNumber(value) ? value : elementValue;\n  return isNumber(opacity) ? clamp(opacity, 0, 1) : 1;\n}\n\nconst limitedLineScale = {\n  xScaleID: {min: 'xMin', max: 'xMax', start: 'left', end: 'right', startProp: 'x', endProp: 'x2'},\n  yScaleID: {min: 'yMin', max: 'yMax', start: 'bottom', end: 'top', startProp: 'y', endProp: 'y2'}\n};\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import(\"chart.js\").Scale } Scale\n * @typedef { import(\"chart.js\").Point } Point\n * @typedef { import('../../types/element').AnnotationBoxModel } AnnotationBoxModel\n * @typedef { import('../../types/options').CoreAnnotationOptions } CoreAnnotationOptions\n * @typedef { import('../../types/options').LineAnnotationOptions } LineAnnotationOptions\n * @typedef { import('../../types/options').PointAnnotationOptions } PointAnnotationOptions\n * @typedef { import('../../types/options').PolygonAnnotationOptions } PolygonAnnotationOptions\n */\n\n/**\n * @param {Scale} scale\n * @param {number|string} value\n * @param {number} fallback\n * @returns {number}\n */\nfunction scaleValue(scale, value, fallback) {\n  value = typeof value === 'number' ? value : scale.parse(value);\n  return isFinite(value) ? scale.getPixelForValue(value) : fallback;\n}\n\n/**\n * Search the scale defined in chartjs by the axis related to the annotation options key.\n * @param {{ [key: string]: Scale }} scales\n * @param {CoreAnnotationOptions} options\n * @param {string} key\n * @returns {string}\n */\nfunction retrieveScaleID(scales, options, key) {\n  const scaleID = options[key];\n  if (scaleID || key === 'scaleID') {\n    return scaleID;\n  }\n  const axis = key.charAt(0);\n  const axes = Object.values(scales).filter((scale) => scale.axis && scale.axis === axis);\n  if (axes.length) {\n    return axes[0].id;\n  }\n  return axis;\n}\n\n/**\n * @param {Scale} scale\n * @param {{min: number, max: number, start: number, end: number}} options\n * @returns {{start: number, end: number}|undefined}\n */\nfunction getDimensionByScale(scale, options) {\n  if (scale) {\n    const reverse = scale.options.reverse;\n    const start = scaleValue(scale, options.min, reverse ? options.end : options.start);\n    const end = scaleValue(scale, options.max, reverse ? options.start : options.end);\n    return {\n      start,\n      end\n    };\n  }\n}\n\n/**\n * @param {Chart} chart\n * @param {CoreAnnotationOptions} options\n * @returns {Point}\n */\nfunction getChartPoint(chart, options) {\n  const {chartArea, scales} = chart;\n  const xScale = scales[retrieveScaleID(scales, options, 'xScaleID')];\n  const yScale = scales[retrieveScaleID(scales, options, 'yScaleID')];\n  let x = chartArea.width / 2;\n  let y = chartArea.height / 2;\n\n  if (xScale) {\n    x = scaleValue(xScale, options.xValue, xScale.left + xScale.width / 2);\n  }\n\n  if (yScale) {\n    y = scaleValue(yScale, options.yValue, yScale.top + yScale.height / 2);\n  }\n  return {x, y};\n}\n\n/**\n * @param {Chart} chart\n * @param {CoreAnnotationOptions} options\n * @returns {AnnotationBoxModel}\n */\nfunction resolveBoxProperties(chart, options) {\n  const scales = chart.scales;\n  const xScale = scales[retrieveScaleID(scales, options, 'xScaleID')];\n  const yScale = scales[retrieveScaleID(scales, options, 'yScaleID')];\n\n  if (!xScale && !yScale) {\n    return {};\n  }\n\n  let {left: x, right: x2} = xScale || chart.chartArea;\n  let {top: y, bottom: y2} = yScale || chart.chartArea;\n  const xDim = getChartDimensionByScale(xScale, {min: options.xMin, max: options.xMax, start: x, end: x2});\n  x = xDim.start;\n  x2 = xDim.end;\n  const yDim = getChartDimensionByScale(yScale, {min: options.yMin, max: options.yMax, start: y2, end: y});\n  y = yDim.start;\n  y2 = yDim.end;\n\n  return {\n    x,\n    y,\n    x2,\n    y2,\n    width: x2 - x,\n    height: y2 - y,\n    centerX: x + (x2 - x) / 2,\n    centerY: y + (y2 - y) / 2\n  };\n}\n\n/**\n * @param {Chart} chart\n * @param {PointAnnotationOptions|PolygonAnnotationOptions} options\n * @returns {AnnotationBoxModel}\n */\nfunction resolvePointProperties(chart, options) {\n  if (!isBoundToPoint(options)) {\n    const box = resolveBoxProperties(chart, options);\n    let radius = options.radius;\n    if (!radius || isNaN(radius)) {\n      radius = Math.min(box.width, box.height) / 2;\n      options.radius = radius;\n    }\n    const size = radius * 2;\n    const adjustCenterX = box.centerX + options.xAdjust;\n    const adjustCenterY = box.centerY + options.yAdjust;\n    return {\n      x: adjustCenterX - radius,\n      y: adjustCenterY - radius,\n      x2: adjustCenterX + radius,\n      y2: adjustCenterY + radius,\n      centerX: adjustCenterX,\n      centerY: adjustCenterY,\n      width: size,\n      height: size,\n      radius\n    };\n  }\n  return getChartCircle(chart, options);\n}\n/**\n * @param {Chart} chart\n * @param {LineAnnotationOptions} options\n * @returns {AnnotationBoxModel}\n */\nfunction resolveLineProperties(chart, options) {\n  const {scales, chartArea} = chart;\n  const scale = scales[options.scaleID];\n  const area = {x: chartArea.left, y: chartArea.top, x2: chartArea.right, y2: chartArea.bottom};\n\n  if (scale) {\n    resolveFullLineProperties(scale, area, options);\n  } else {\n    resolveLimitedLineProperties(scales, area, options);\n  }\n  return area;\n}\n\n/**\n * @param {Chart} chart\n * @param {CoreAnnotationOptions} options\n * @param {boolean} [centerBased=false]\n * @returns {AnnotationBoxModel}\n */\nfunction resolveBoxAndLabelProperties(chart, options, centerBased) {\n  const properties = resolveBoxProperties(chart, options);\n  properties.initProperties = initAnimationProperties(chart, properties, options, centerBased);\n  properties.elements = [{\n    type: 'label',\n    optionScope: 'label',\n    properties: resolveLabelElementProperties$1(chart, properties, options),\n    initProperties: properties.initProperties\n  }];\n  return properties;\n}\n\nfunction getChartCircle(chart, options) {\n  const point = getChartPoint(chart, options);\n  const size = options.radius * 2;\n  return {\n    x: point.x - options.radius + options.xAdjust,\n    y: point.y - options.radius + options.yAdjust,\n    x2: point.x + options.radius + options.xAdjust,\n    y2: point.y + options.radius + options.yAdjust,\n    centerX: point.x + options.xAdjust,\n    centerY: point.y + options.yAdjust,\n    radius: options.radius,\n    width: size,\n    height: size\n  };\n}\n\nfunction getChartDimensionByScale(scale, options) {\n  const result = getDimensionByScale(scale, options) || options;\n  return {\n    start: Math.min(result.start, result.end),\n    end: Math.max(result.start, result.end)\n  };\n}\n\nfunction resolveFullLineProperties(scale, area, options) {\n  const min = scaleValue(scale, options.value, NaN);\n  const max = scaleValue(scale, options.endValue, min);\n  if (scale.isHorizontal()) {\n    area.x = min;\n    area.x2 = max;\n  } else {\n    area.y = min;\n    area.y2 = max;\n  }\n}\n\nfunction resolveLimitedLineProperties(scales, area, options) {\n  for (const scaleId of Object.keys(limitedLineScale)) {\n    const scale = scales[retrieveScaleID(scales, options, scaleId)];\n    if (scale) {\n      const {min, max, start, end, startProp, endProp} = limitedLineScale[scaleId];\n      const dim = getDimensionByScale(scale, {min: options[min], max: options[max], start: scale[start], end: scale[end]});\n      area[startProp] = dim.start;\n      area[endProp] = dim.end;\n    }\n  }\n}\n\nfunction calculateX({properties, options}, labelSize, position, padding) {\n  const {x: start, x2: end, width: size} = properties;\n  return calculatePosition$1({start, end, size, borderWidth: options.borderWidth}, {\n    position: position.x,\n    padding: {start: padding.left, end: padding.right},\n    adjust: options.label.xAdjust,\n    size: labelSize.width\n  });\n}\n\nfunction calculateY({properties, options}, labelSize, position, padding) {\n  const {y: start, y2: end, height: size} = properties;\n  return calculatePosition$1({start, end, size, borderWidth: options.borderWidth}, {\n    position: position.y,\n    padding: {start: padding.top, end: padding.bottom},\n    adjust: options.label.yAdjust,\n    size: labelSize.height\n  });\n}\n\nfunction calculatePosition$1(boxOpts, labelOpts) {\n  const {start, end, borderWidth} = boxOpts;\n  const {position, padding: {start: padStart, end: padEnd}, adjust} = labelOpts;\n  const availableSize = end - borderWidth - start - padStart - padEnd - labelOpts.size;\n  return start + borderWidth / 2 + adjust + getRelativePosition(availableSize, position);\n}\n\nfunction resolveLabelElementProperties$1(chart, properties, options) {\n  const label = options.label;\n  label.backgroundColor = 'transparent';\n  label.callout.display = false;\n  const position = toPosition(label.position);\n  const padding = toPadding(label.padding);\n  const labelSize = measureLabelSize(chart.ctx, label);\n  const x = calculateX({properties, options}, labelSize, position, padding);\n  const y = calculateY({properties, options}, labelSize, position, padding);\n  const width = labelSize.width + padding.width;\n  const height = labelSize.height + padding.height;\n  return {\n    x,\n    y,\n    x2: x + width,\n    y2: y + height,\n    width,\n    height,\n    centerX: x + width / 2,\n    centerY: y + height / 2,\n    rotation: label.rotation\n  };\n\n}\n\n/**\n * @typedef {import('chart.js').Point} Point\n */\n\n/**\n * Rotate a `point` relative to `center` point by `angle`\n * @param {Point} point - the point to rotate\n * @param {Point} center - center point for rotation\n * @param {number} angle - angle for rotation, in radians\n * @returns {Point} rotated point\n */\nfunction rotated(point, center, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const cx = center.x;\n  const cy = center.y;\n\n  return {\n    x: cx + cos * (point.x - cx) - sin * (point.y - cy),\n    y: cy + sin * (point.x - cx) + cos * (point.y - cy)\n  };\n}\n\nconst moveHooks = ['enter', 'leave'];\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import('../../types/options').AnnotationPluginOptions } AnnotationPluginOptions\n */\n\nconst eventHooks = moveHooks.concat('click');\n\n/**\n * @param {Chart} chart\n * @param {Object} state\n * @param {AnnotationPluginOptions} options\n */\nfunction updateListeners(chart, state, options) {\n  state.listened = loadHooks(options, eventHooks, state.listeners);\n  state.moveListened = false;\n  state._getElements = getElements; // for testing\n\n  moveHooks.forEach(hook => {\n    if (isFunction(options[hook])) {\n      state.moveListened = true;\n    }\n  });\n\n  if (!state.listened || !state.moveListened) {\n    state.annotations.forEach(scope => {\n      if (!state.listened && isFunction(scope.click)) {\n        state.listened = true;\n      }\n      if (!state.moveListened) {\n        moveHooks.forEach(hook => {\n          if (isFunction(scope[hook])) {\n            state.listened = true;\n            state.moveListened = true;\n          }\n        });\n      }\n    });\n  }\n}\n\n/**\n * @param {Object} state\n * @param {ChartEvent} event\n * @param {AnnotationPluginOptions} options\n * @return {boolean|undefined}\n */\nfunction handleEvent(state, event, options) {\n  if (state.listened) {\n    switch (event.type) {\n    case 'mousemove':\n    case 'mouseout':\n      return handleMoveEvents(state, event, options);\n    case 'click':\n      return handleClickEvents(state, event, options);\n    }\n  }\n}\n\nfunction handleMoveEvents(state, event, options) {\n  if (!state.moveListened) {\n    return;\n  }\n\n  let elements;\n\n  if (event.type === 'mousemove') {\n    elements = getElements(state, event, options.interaction);\n  } else {\n    elements = [];\n  }\n\n  const previous = state.hovered;\n  state.hovered = elements;\n\n  const context = {state, event};\n  let changed = dispatchMoveEvents(context, 'leave', previous, elements);\n  return dispatchMoveEvents(context, 'enter', elements, previous) || changed;\n}\n\nfunction dispatchMoveEvents({state, event}, hook, elements, checkElements) {\n  let changed;\n  for (const element of elements) {\n    if (checkElements.indexOf(element) < 0) {\n      changed = dispatchEvent(element.options[hook] || state.listeners[hook], element, event) || changed;\n    }\n  }\n  return changed;\n}\n\nfunction handleClickEvents(state, event, options) {\n  const listeners = state.listeners;\n  const elements = getElements(state, event, options.interaction);\n  let changed;\n  for (const element of elements) {\n    changed = dispatchEvent(element.options.click || listeners.click, element, event) || changed;\n  }\n  return changed;\n}\n\nfunction dispatchEvent(handler, element, event) {\n  return callback(handler, [element.$context, event]) === true;\n}\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import('../../types/options').AnnotationPluginOptions } AnnotationPluginOptions\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */\n\nconst elementHooks = ['afterDraw', 'beforeDraw'];\n\n/**\n * @param {Chart} chart\n * @param {Object} state\n * @param {AnnotationPluginOptions} options\n */\nfunction updateHooks(chart, state, options) {\n  const visibleElements = state.visibleElements;\n  state.hooked = loadHooks(options, elementHooks, state.hooks);\n\n  if (!state.hooked) {\n    visibleElements.forEach(scope => {\n      if (!state.hooked) {\n        elementHooks.forEach(hook => {\n          if (isFunction(scope.options[hook])) {\n            state.hooked = true;\n          }\n        });\n      }\n    });\n  }\n}\n\n/**\n * @param {Object} state\n * @param {AnnotationElement} element\n * @param {string} hook\n */\nfunction invokeHook(state, element, hook) {\n  if (state.hooked) {\n    const callbackHook = element.options[hook] || state.hooks[hook];\n    return callback(callbackHook, [element.$context]);\n  }\n}\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import(\"chart.js\").Scale } Scale\n * @typedef { import('../../types/options').CoreAnnotationOptions } CoreAnnotationOptions\n */\n\n/**\n * @param {Chart} chart\n * @param {Scale} scale\n * @param {CoreAnnotationOptions[]} annotations\n */\nfunction adjustScaleRange(chart, scale, annotations) {\n  const range = getScaleLimits(chart.scales, scale, annotations);\n  let changed = changeScaleLimit(scale, range, 'min', 'suggestedMin');\n  changed = changeScaleLimit(scale, range, 'max', 'suggestedMax') || changed;\n  if (changed && isFunction(scale.handleTickRangeOptions)) {\n    scale.handleTickRangeOptions();\n  }\n}\n\n/**\n * @param {CoreAnnotationOptions[]} annotations\n * @param {{ [key: string]: Scale }} scales\n */\nfunction verifyScaleOptions(annotations, scales) {\n  for (const annotation of annotations) {\n    verifyScaleIDs(annotation, scales);\n  }\n}\n\nfunction changeScaleLimit(scale, range, limit, suggestedLimit) {\n  if (isFinite(range[limit]) && !scaleLimitDefined(scale.options, limit, suggestedLimit)) {\n    const changed = scale[limit] !== range[limit];\n    scale[limit] = range[limit];\n    return changed;\n  }\n}\n\nfunction scaleLimitDefined(scaleOptions, limit, suggestedLimit) {\n  return defined(scaleOptions[limit]) || defined(scaleOptions[suggestedLimit]);\n}\n\nfunction verifyScaleIDs(annotation, scales) {\n  for (const key of ['scaleID', 'xScaleID', 'yScaleID']) {\n    const scaleID = retrieveScaleID(scales, annotation, key);\n    if (scaleID && !scales[scaleID] && verifyProperties(annotation, key)) {\n      console.warn(`No scale found with id '${scaleID}' for annotation '${annotation.id}'`);\n    }\n  }\n}\n\nfunction verifyProperties(annotation, key) {\n  if (key === 'scaleID') {\n    return true;\n  }\n  const axis = key.charAt(0);\n  for (const prop of ['Min', 'Max', 'Value']) {\n    if (defined(annotation[axis + prop])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction getScaleLimits(scales, scale, annotations) {\n  const axis = scale.axis;\n  const scaleID = scale.id;\n  const scaleIDOption = axis + 'ScaleID';\n  const limits = {\n    min: valueOrDefault(scale.min, Number.NEGATIVE_INFINITY),\n    max: valueOrDefault(scale.max, Number.POSITIVE_INFINITY)\n  };\n  for (const annotation of annotations) {\n    if (annotation.scaleID === scaleID) {\n      updateLimits(annotation, scale, ['value', 'endValue'], limits);\n    } else if (retrieveScaleID(scales, annotation, scaleIDOption) === scaleID) {\n      updateLimits(annotation, scale, [axis + 'Min', axis + 'Max', axis + 'Value'], limits);\n    }\n  }\n  return limits;\n}\n\nfunction updateLimits(annotation, scale, props, limits) {\n  for (const prop of props) {\n    const raw = annotation[prop];\n    if (defined(raw)) {\n      const value = scale.parse(raw);\n      limits.min = Math.min(limits.min, value);\n      limits.max = Math.max(limits.max, value);\n    }\n  }\n}\n\nclass BoxAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const {x, y} = rotated({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), toRadians(-this.options.rotation));\n    return inBoxRange({x, y}, this.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition), axis, this.options.borderWidth);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    ctx.save();\n    translate(ctx, this.getCenterPoint(), this.options.rotation);\n    drawBox(ctx, this, this.options);\n    ctx.restore();\n  }\n\n  get label() {\n    return this.elements && this.elements[0];\n  }\n\n  resolveElementProperties(chart, options) {\n    return resolveBoxAndLabelProperties(chart, options);\n  }\n}\n\nBoxAnnotation.id = 'boxAnnotation';\n\nBoxAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderRadius: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  init: undefined,\n  label: {\n    backgroundColor: 'transparent',\n    borderWidth: 0,\n    callout: {\n      display: false\n    },\n    color: 'black',\n    content: null,\n    display: false,\n    drawTime: undefined,\n    font: {\n      family: undefined,\n      lineHeight: undefined,\n      size: undefined,\n      style: undefined,\n      weight: 'bold'\n    },\n    height: undefined,\n    opacity: undefined,\n    padding: 6,\n    position: 'center',\n    rotation: undefined,\n    textAlign: 'start',\n    textStrokeColor: undefined,\n    textStrokeWidth: 0,\n    width: undefined,\n    xAdjust: 0,\n    yAdjust: 0,\n    z: undefined\n  },\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  z: 0\n};\n\nBoxAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nBoxAnnotation.descriptors = {\n  label: {\n    _fallback: true\n  }\n};\n\nconst positions = ['left', 'bottom', 'top', 'right'];\n\nclass LabelAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const {x, y} = rotated({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), toRadians(-this.rotation));\n    return inBoxRange({x, y}, this.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition), axis, this.options.borderWidth);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const options = this.options;\n    const visible = !defined(this._visible) || this._visible;\n    if (!options.display || !options.content || !visible) {\n      return;\n    }\n    ctx.save();\n    translate(ctx, this.getCenterPoint(), this.rotation);\n    drawCallout(ctx, this);\n    drawBox(ctx, this, options);\n    drawLabel(ctx, getLabelSize(this), options);\n    ctx.restore();\n  }\n\n  resolveElementProperties(chart, options) {\n    let point;\n    if (!isBoundToPoint(options)) {\n      const {centerX, centerY} = resolveBoxProperties(chart, options);\n      point = {x: centerX, y: centerY};\n    } else {\n      point = getChartPoint(chart, options);\n    }\n    const padding = toPadding(options.padding);\n    const labelSize = measureLabelSize(chart.ctx, options);\n    const boxSize = measureRect(point, labelSize, options, padding);\n    return {\n      initProperties: initAnimationProperties(chart, boxSize, options),\n      pointX: point.x,\n      pointY: point.y,\n      ...boxSize,\n      rotation: options.rotation\n    };\n  }\n}\n\nLabelAnnotation.id = 'labelAnnotation';\n\nLabelAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundColor: 'transparent',\n  backgroundShadowColor: 'transparent',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderRadius: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 0,\n  callout: {\n    borderCapStyle: 'butt',\n    borderColor: undefined,\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 1,\n    display: false,\n    margin: 5,\n    position: 'auto',\n    side: 5,\n    start: '50%',\n  },\n  color: 'black',\n  content: null,\n  display: true,\n  font: {\n    family: undefined,\n    lineHeight: undefined,\n    size: undefined,\n    style: undefined,\n    weight: undefined\n  },\n  height: undefined,\n  init: undefined,\n  opacity: undefined,\n  padding: 6,\n  position: 'center',\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  textAlign: 'center',\n  textStrokeColor: undefined,\n  textStrokeWidth: 0,\n  width: undefined,\n  xAdjust: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  xValue: undefined,\n  yAdjust: 0,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  yValue: undefined,\n  z: 0\n};\n\nLabelAnnotation.defaultRoutes = {\n  borderColor: 'color'\n};\n\nfunction measureRect(point, size, options, padding) {\n  const width = size.width + padding.width + options.borderWidth;\n  const height = size.height + padding.height + options.borderWidth;\n  const position = toPosition(options.position, 'center');\n  const x = calculatePosition(point.x, width, options.xAdjust, position.x);\n  const y = calculatePosition(point.y, height, options.yAdjust, position.y);\n\n  return {\n    x,\n    y,\n    x2: x + width,\n    y2: y + height,\n    width,\n    height,\n    centerX: x + width / 2,\n    centerY: y + height / 2\n  };\n}\n\nfunction calculatePosition(start, size, adjust = 0, position) {\n  return start - getRelativePosition(size, position) + adjust;\n}\n\nfunction drawCallout(ctx, element) {\n  const {pointX, pointY, options} = element;\n  const callout = options.callout;\n  const calloutPosition = callout && callout.display && resolveCalloutPosition(element, callout);\n  if (!calloutPosition || isPointInRange(element, callout, calloutPosition)) {\n    return;\n  }\n\n  ctx.save();\n  ctx.beginPath();\n  const stroke = setBorderStyle(ctx, callout);\n  if (!stroke) {\n    return ctx.restore();\n  }\n  const {separatorStart, separatorEnd} = getCalloutSeparatorCoord(element, calloutPosition);\n  const {sideStart, sideEnd} = getCalloutSideCoord(element, calloutPosition, separatorStart);\n  if (callout.margin > 0 || options.borderWidth === 0) {\n    ctx.moveTo(separatorStart.x, separatorStart.y);\n    ctx.lineTo(separatorEnd.x, separatorEnd.y);\n  }\n  ctx.moveTo(sideStart.x, sideStart.y);\n  ctx.lineTo(sideEnd.x, sideEnd.y);\n  const rotatedPoint = rotated({x: pointX, y: pointY}, element.getCenterPoint(), toRadians(-element.rotation));\n  ctx.lineTo(rotatedPoint.x, rotatedPoint.y);\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction getCalloutSeparatorCoord(element, position) {\n  const {x, y, x2, y2} = element;\n  const adjust = getCalloutSeparatorAdjust(element, position);\n  let separatorStart, separatorEnd;\n  if (position === 'left' || position === 'right') {\n    separatorStart = {x: x + adjust, y};\n    separatorEnd = {x: separatorStart.x, y: y2};\n  } else {\n    //  position 'top' or 'bottom'\n    separatorStart = {x, y: y + adjust};\n    separatorEnd = {x: x2, y: separatorStart.y};\n  }\n  return {separatorStart, separatorEnd};\n}\n\nfunction getCalloutSeparatorAdjust(element, position) {\n  const {width, height, options} = element;\n  const adjust = options.callout.margin + options.borderWidth / 2;\n  if (position === 'right') {\n    return width + adjust;\n  } else if (position === 'bottom') {\n    return height + adjust;\n  }\n  return -adjust;\n}\n\nfunction getCalloutSideCoord(element, position, separatorStart) {\n  const {y, width, height, options} = element;\n  const start = options.callout.start;\n  const side = getCalloutSideAdjust(position, options.callout);\n  let sideStart, sideEnd;\n  if (position === 'left' || position === 'right') {\n    sideStart = {x: separatorStart.x, y: y + getSize(height, start)};\n    sideEnd = {x: sideStart.x + side, y: sideStart.y};\n  } else {\n    //  position 'top' or 'bottom'\n    sideStart = {x: separatorStart.x + getSize(width, start), y: separatorStart.y};\n    sideEnd = {x: sideStart.x, y: sideStart.y + side};\n  }\n  return {sideStart, sideEnd};\n}\n\nfunction getCalloutSideAdjust(position, options) {\n  const side = options.side;\n  if (position === 'left' || position === 'top') {\n    return -side;\n  }\n  return side;\n}\n\nfunction resolveCalloutPosition(element, options) {\n  const position = options.position;\n  if (positions.includes(position)) {\n    return position;\n  }\n  return resolveCalloutAutoPosition(element, options);\n}\n\nfunction resolveCalloutAutoPosition(element, options) {\n  const {x, y, x2, y2, width, height, pointX, pointY, centerX, centerY, rotation} = element;\n  const center = {x: centerX, y: centerY};\n  const start = options.start;\n  const xAdjust = getSize(width, start);\n  const yAdjust = getSize(height, start);\n  const xPoints = [x, x + xAdjust, x + xAdjust, x2];\n  const yPoints = [y + yAdjust, y2, y, y2];\n  const result = [];\n  for (let index = 0; index < 4; index++) {\n    const rotatedPoint = rotated({x: xPoints[index], y: yPoints[index]}, center, toRadians(rotation));\n    result.push({\n      position: positions[index],\n      distance: distanceBetweenPoints(rotatedPoint, {x: pointX, y: pointY})\n    });\n  }\n  return result.sort((a, b) => a.distance - b.distance)[0].position;\n}\n\nfunction getLabelSize({x, y, width, height, options}) {\n  const hBorderWidth = options.borderWidth / 2;\n  const padding = toPadding(options.padding);\n  return {\n    x: x + padding.left + hBorderWidth,\n    y: y + padding.top + hBorderWidth,\n    width: width - padding.left - padding.right - options.borderWidth,\n    height: height - padding.top - padding.bottom - options.borderWidth\n  };\n}\n\nfunction isPointInRange(element, callout, position) {\n  const {pointX, pointY} = element;\n  const margin = callout.margin;\n  let x = pointX;\n  let y = pointY;\n  if (position === 'left') {\n    x += margin;\n  } else if (position === 'right') {\n    x -= margin;\n  } else if (position === 'top') {\n    y += margin;\n  } else if (position === 'bottom') {\n    y -= margin;\n  }\n  return element.inRange(x, y);\n}\n\nconst pointInLine = (p1, p2, t) => ({x: p1.x + t * (p2.x - p1.x), y: p1.y + t * (p2.y - p1.y)});\nconst interpolateX = (y, p1, p2) => pointInLine(p1, p2, Math.abs((y - p1.y) / (p2.y - p1.y))).x;\nconst interpolateY = (x, p1, p2) => pointInLine(p1, p2, Math.abs((x - p1.x) / (p2.x - p1.x))).y;\nconst sqr = v => v * v;\nconst rangeLimit = (mouseX, mouseY, {x, y, x2, y2}, axis) => axis === 'y' ? {start: Math.min(y, y2), end: Math.max(y, y2), value: mouseY} : {start: Math.min(x, x2), end: Math.max(x, x2), value: mouseX};\n// http://www.independent-software.com/determining-coordinates-on-a-html-canvas-bezier-curve.html\nconst coordInCurve = (start, cp, end, t) => (1 - t) * (1 - t) * start + 2 * (1 - t) * t * cp + t * t * end;\nconst pointInCurve = (start, cp, end, t) => ({x: coordInCurve(start.x, cp.x, end.x, t), y: coordInCurve(start.y, cp.y, end.y, t)});\nconst coordAngleInCurve = (start, cp, end, t) => 2 * (1 - t) * (cp - start) + 2 * t * (end - cp);\nconst angleInCurve = (start, cp, end, t) => -Math.atan2(coordAngleInCurve(start.x, cp.x, end.x, t), coordAngleInCurve(start.y, cp.y, end.y, t)) + 0.5 * PI;\n\nclass LineAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const hBorderWidth = this.options.borderWidth / 2;\n    if (axis !== 'x' && axis !== 'y') {\n      const point = {mouseX, mouseY};\n      const {path, ctx} = this;\n      if (path) {\n        setBorderStyle(ctx, this.options);\n        const {chart} = this.$context;\n        const mx = mouseX * chart.currentDevicePixelRatio;\n        const my = mouseY * chart.currentDevicePixelRatio;\n        const result = ctx.isPointInStroke(path, mx, my) || isOnLabel(this, point, useFinalPosition);\n        ctx.restore();\n        return result;\n      }\n      const epsilon = sqr(hBorderWidth);\n      return intersects(this, point, epsilon, useFinalPosition) || isOnLabel(this, point, useFinalPosition);\n    }\n    return inAxisRange(this, {mouseX, mouseY}, axis, {hBorderWidth, useFinalPosition});\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {x, y, x2, y2, cp, options} = this;\n\n    ctx.save();\n    if (!setBorderStyle(ctx, options)) {\n      // no border width, then line is not drawn\n      return ctx.restore();\n    }\n    setShadowStyle(ctx, options);\n\n    const length = Math.sqrt(Math.pow(x2 - x, 2) + Math.pow(y2 - y, 2));\n    if (options.curve && cp) {\n      drawCurve(ctx, this, cp, length);\n      return ctx.restore();\n    }\n    const {startOpts, endOpts, startAdjust, endAdjust} = getArrowHeads(this);\n    const angle = Math.atan2(y2 - y, x2 - x);\n    ctx.translate(x, y);\n    ctx.rotate(angle);\n    ctx.beginPath();\n    ctx.moveTo(0 + startAdjust, 0);\n    ctx.lineTo(length - endAdjust, 0);\n    ctx.shadowColor = options.borderShadowColor;\n    ctx.stroke();\n    drawArrowHead(ctx, 0, startAdjust, startOpts);\n    drawArrowHead(ctx, length, -endAdjust, endOpts);\n    ctx.restore();\n  }\n\n  get label() {\n    return this.elements && this.elements[0];\n  }\n\n  resolveElementProperties(chart, options) {\n    const area = resolveLineProperties(chart, options);\n    const {x, y, x2, y2} = area;\n    const inside = isLineInArea(area, chart.chartArea);\n    const properties = inside\n      ? limitLineToArea({x, y}, {x: x2, y: y2}, chart.chartArea)\n      : {x, y, x2, y2, width: Math.abs(x2 - x), height: Math.abs(y2 - y)};\n    properties.centerX = (x2 + x) / 2;\n    properties.centerY = (y2 + y) / 2;\n    properties.initProperties = initAnimationProperties(chart, properties, options);\n    if (options.curve) {\n      const p1 = {x: properties.x, y: properties.y};\n      const p2 = {x: properties.x2, y: properties.y2};\n      properties.cp = getControlPoint(properties, options, distanceBetweenPoints(p1, p2));\n    }\n    const labelProperties = resolveLabelElementProperties(chart, properties, options.label);\n    // additonal prop to manage zoom/pan\n    labelProperties._visible = inside;\n\n    properties.elements = [{\n      type: 'label',\n      optionScope: 'label',\n      properties: labelProperties,\n      initProperties: properties.initProperties\n    }];\n    return properties;\n  }\n}\n\nLineAnnotation.id = 'lineAnnotation';\n\nconst arrowHeadsDefaults = {\n  backgroundColor: undefined,\n  backgroundShadowColor: undefined,\n  borderColor: undefined,\n  borderDash: undefined,\n  borderDashOffset: undefined,\n  borderShadowColor: undefined,\n  borderWidth: undefined,\n  display: undefined,\n  fill: undefined,\n  length: undefined,\n  shadowBlur: undefined,\n  shadowOffsetX: undefined,\n  shadowOffsetY: undefined,\n  width: undefined\n};\n\nLineAnnotation.defaults = {\n  adjustScaleRange: true,\n  arrowHeads: {\n    display: false,\n    end: Object.assign({}, arrowHeadsDefaults),\n    fill: false,\n    length: 12,\n    start: Object.assign({}, arrowHeadsDefaults),\n    width: 6\n  },\n  borderDash: [],\n  borderDashOffset: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 2,\n  curve: false,\n  controlPoint: {\n    y: '-50%'\n  },\n  display: true,\n  endValue: undefined,\n  init: undefined,\n  label: {\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    backgroundShadowColor: 'transparent',\n    borderCapStyle: 'butt',\n    borderColor: 'black',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderRadius: 6,\n    borderShadowColor: 'transparent',\n    borderWidth: 0,\n    callout: Object.assign({}, LabelAnnotation.defaults.callout),\n    color: '#fff',\n    content: null,\n    display: false,\n    drawTime: undefined,\n    font: {\n      family: undefined,\n      lineHeight: undefined,\n      size: undefined,\n      style: undefined,\n      weight: 'bold'\n    },\n    height: undefined,\n    opacity: undefined,\n    padding: 6,\n    position: 'center',\n    rotation: 0,\n    shadowBlur: 0,\n    shadowOffsetX: 0,\n    shadowOffsetY: 0,\n    textAlign: 'center',\n    textStrokeColor: undefined,\n    textStrokeWidth: 0,\n    width: undefined,\n    xAdjust: 0,\n    yAdjust: 0,\n    z: undefined\n  },\n  scaleID: undefined,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  value: undefined,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  z: 0\n};\n\nLineAnnotation.descriptors = {\n  arrowHeads: {\n    start: {\n      _fallback: true\n    },\n    end: {\n      _fallback: true\n    },\n    _fallback: true\n  }\n};\n\nLineAnnotation.defaultRoutes = {\n  borderColor: 'color'\n};\n\nfunction inAxisRange(element, {mouseX, mouseY}, axis, {hBorderWidth, useFinalPosition}) {\n  const limit = rangeLimit(mouseX, mouseY, element.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition), axis);\n  return (limit.value >= limit.start - hBorderWidth && limit.value <= limit.end + hBorderWidth) || isOnLabel(element, {mouseX, mouseY}, useFinalPosition, axis);\n}\n\nfunction isLineInArea({x, y, x2, y2}, {top, right, bottom, left}) {\n  return !(\n    (x < left && x2 < left) ||\n    (x > right && x2 > right) ||\n    (y < top && y2 < top) ||\n    (y > bottom && y2 > bottom)\n  );\n}\n\nfunction limitPointToArea({x, y}, p2, {top, right, bottom, left}) {\n  if (x < left) {\n    y = interpolateY(left, {x, y}, p2);\n    x = left;\n  }\n  if (x > right) {\n    y = interpolateY(right, {x, y}, p2);\n    x = right;\n  }\n  if (y < top) {\n    x = interpolateX(top, {x, y}, p2);\n    y = top;\n  }\n  if (y > bottom) {\n    x = interpolateX(bottom, {x, y}, p2);\n    y = bottom;\n  }\n  return {x, y};\n}\n\nfunction limitLineToArea(p1, p2, area) {\n  const {x, y} = limitPointToArea(p1, p2, area);\n  const {x: x2, y: y2} = limitPointToArea(p2, p1, area);\n  return {x, y, x2, y2, width: Math.abs(x2 - x), height: Math.abs(y2 - y)};\n}\n\nfunction intersects(element, {mouseX, mouseY}, epsilon = EPSILON, useFinalPosition) {\n  // Adapted from https://stackoverflow.com/a/6853926/25507\n  const {x: x1, y: y1, x2, y2} = element.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition);\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const lenSq = sqr(dx) + sqr(dy);\n  const t = lenSq === 0 ? -1 : ((mouseX - x1) * dx + (mouseY - y1) * dy) / lenSq;\n  let xx, yy;\n  if (t < 0) {\n    xx = x1;\n    yy = y1;\n  } else if (t > 1) {\n    xx = x2;\n    yy = y2;\n  } else {\n    xx = x1 + t * dx;\n    yy = y1 + t * dy;\n  }\n  return (sqr(mouseX - xx) + sqr(mouseY - yy)) <= epsilon;\n}\n\nfunction isOnLabel(element, {mouseX, mouseY}, useFinalPosition, axis) {\n  const label = element.label;\n  return label.options.display && label.inRange(mouseX, mouseY, axis, useFinalPosition);\n}\n\nfunction resolveLabelElementProperties(chart, properties, options) {\n  const borderWidth = options.borderWidth;\n  const padding = toPadding(options.padding);\n  const textSize = measureLabelSize(chart.ctx, options);\n  const width = textSize.width + padding.width + borderWidth;\n  const height = textSize.height + padding.height + borderWidth;\n  return calculateLabelPosition(properties, options, {width, height, padding}, chart.chartArea);\n}\n\nfunction calculateAutoRotation(properties) {\n  const {x, y, x2, y2} = properties;\n  const rotation = Math.atan2(y2 - y, x2 - x);\n  // Flip the rotation if it goes > PI/2 or < -PI/2, so label stays upright\n  return rotation > PI / 2 ? rotation - PI : rotation < PI / -2 ? rotation + PI : rotation;\n}\n\nfunction calculateLabelPosition(properties, label, sizes, chartArea) {\n  const {width, height, padding} = sizes;\n  const {xAdjust, yAdjust} = label;\n  const p1 = {x: properties.x, y: properties.y};\n  const p2 = {x: properties.x2, y: properties.y2};\n  const rotation = label.rotation === 'auto' ? calculateAutoRotation(properties) : toRadians(label.rotation);\n  const size = rotatedSize(width, height, rotation);\n  const t = calculateT(properties, label, {labelSize: size, padding}, chartArea);\n  const pt = properties.cp ? pointInCurve(p1, properties.cp, p2, t) : pointInLine(p1, p2, t);\n  const xCoordinateSizes = {size: size.w, min: chartArea.left, max: chartArea.right, padding: padding.left};\n  const yCoordinateSizes = {size: size.h, min: chartArea.top, max: chartArea.bottom, padding: padding.top};\n  const centerX = adjustLabelCoordinate(pt.x, xCoordinateSizes) + xAdjust;\n  const centerY = adjustLabelCoordinate(pt.y, yCoordinateSizes) + yAdjust;\n  return {\n    x: centerX - (width / 2),\n    y: centerY - (height / 2),\n    x2: centerX + (width / 2),\n    y2: centerY + (height / 2),\n    centerX,\n    centerY,\n    pointX: pt.x,\n    pointY: pt.y,\n    width,\n    height,\n    rotation: toDegrees(rotation)\n  };\n}\n\nfunction rotatedSize(width, height, rotation) {\n  const cos = Math.cos(rotation);\n  const sin = Math.sin(rotation);\n  return {\n    w: Math.abs(width * cos) + Math.abs(height * sin),\n    h: Math.abs(width * sin) + Math.abs(height * cos)\n  };\n}\n\nfunction calculateT(properties, label, sizes, chartArea) {\n  let t;\n  const space = spaceAround(properties, chartArea);\n  if (label.position === 'start') {\n    t = calculateTAdjust({w: properties.x2 - properties.x, h: properties.y2 - properties.y}, sizes, label, space);\n  } else if (label.position === 'end') {\n    t = 1 - calculateTAdjust({w: properties.x - properties.x2, h: properties.y - properties.y2}, sizes, label, space);\n  } else {\n    t = getRelativePosition(1, label.position);\n  }\n  return t;\n}\n\nfunction calculateTAdjust(lineSize, sizes, label, space) {\n  const {labelSize, padding} = sizes;\n  const lineW = lineSize.w * space.dx;\n  const lineH = lineSize.h * space.dy;\n  const x = (lineW > 0) && ((labelSize.w / 2 + padding.left - space.x) / lineW);\n  const y = (lineH > 0) && ((labelSize.h / 2 + padding.top - space.y) / lineH);\n  return clamp(Math.max(x, y), 0, 0.25);\n}\n\nfunction spaceAround(properties, chartArea) {\n  const {x, x2, y, y2} = properties;\n  const t = Math.min(y, y2) - chartArea.top;\n  const l = Math.min(x, x2) - chartArea.left;\n  const b = chartArea.bottom - Math.max(y, y2);\n  const r = chartArea.right - Math.max(x, x2);\n  return {\n    x: Math.min(l, r),\n    y: Math.min(t, b),\n    dx: l <= r ? 1 : -1,\n    dy: t <= b ? 1 : -1\n  };\n}\n\nfunction adjustLabelCoordinate(coordinate, labelSizes) {\n  const {size, min, max, padding} = labelSizes;\n  const halfSize = size / 2;\n  if (size > max - min) {\n    // if it does not fit, display as much as possible\n    return (max + min) / 2;\n  }\n  if (min >= (coordinate - padding - halfSize)) {\n    coordinate = min + padding + halfSize;\n  }\n  if (max <= (coordinate + padding + halfSize)) {\n    coordinate = max - padding - halfSize;\n  }\n  return coordinate;\n}\n\nfunction getArrowHeads(line) {\n  const options = line.options;\n  const arrowStartOpts = options.arrowHeads && options.arrowHeads.start;\n  const arrowEndOpts = options.arrowHeads && options.arrowHeads.end;\n  return {\n    startOpts: arrowStartOpts,\n    endOpts: arrowEndOpts,\n    startAdjust: getLineAdjust(line, arrowStartOpts),\n    endAdjust: getLineAdjust(line, arrowEndOpts)\n  };\n}\n\nfunction getLineAdjust(line, arrowOpts) {\n  if (!arrowOpts || !arrowOpts.display) {\n    return 0;\n  }\n  const {length, width} = arrowOpts;\n  const adjust = line.options.borderWidth / 2;\n  const p1 = {x: length, y: width + adjust};\n  const p2 = {x: 0, y: adjust};\n  return Math.abs(interpolateX(0, p1, p2));\n}\n\nfunction drawArrowHead(ctx, offset, adjust, arrowOpts) {\n  if (!arrowOpts || !arrowOpts.display) {\n    return;\n  }\n  const {length, width, fill, backgroundColor, borderColor} = arrowOpts;\n  const arrowOffsetX = Math.abs(offset - length) + adjust;\n  ctx.beginPath();\n  setShadowStyle(ctx, arrowOpts);\n  setBorderStyle(ctx, arrowOpts);\n  ctx.moveTo(arrowOffsetX, -width);\n  ctx.lineTo(offset + adjust, 0);\n  ctx.lineTo(arrowOffsetX, width);\n  if (fill === true) {\n    ctx.fillStyle = backgroundColor || borderColor;\n    ctx.closePath();\n    ctx.fill();\n    ctx.shadowColor = 'transparent';\n  } else {\n    ctx.shadowColor = arrowOpts.borderShadowColor;\n  }\n  ctx.stroke();\n}\n\nfunction getControlPoint(properties, options, distance) {\n  const {x, y, x2, y2, centerX, centerY} = properties;\n  const angle = Math.atan2(y2 - y, x2 - x);\n  const cp = toPosition(options.controlPoint, 0);\n  const point = {\n    x: centerX + getSize(distance, cp.x, false),\n    y: centerY + getSize(distance, cp.y, false)\n  };\n  return rotated(point, {x: centerX, y: centerY}, angle);\n}\n\nfunction drawArrowHeadOnCurve(ctx, {x, y}, {angle, adjust}, arrowOpts) {\n  if (!arrowOpts || !arrowOpts.display) {\n    return;\n  }\n  ctx.save();\n  ctx.translate(x, y);\n  ctx.rotate(angle);\n  drawArrowHead(ctx, 0, -adjust, arrowOpts);\n  ctx.restore();\n}\n\nfunction drawCurve(ctx, element, cp, length) {\n  const {x, y, x2, y2, options} = element;\n  const {startOpts, endOpts, startAdjust, endAdjust} = getArrowHeads(element);\n  const p1 = {x, y};\n  const p2 = {x: x2, y: y2};\n  const startAngle = angleInCurve(p1, cp, p2, 0);\n  const endAngle = angleInCurve(p1, cp, p2, 1) - PI;\n  const ps = pointInCurve(p1, cp, p2, startAdjust / length);\n  const pe = pointInCurve(p1, cp, p2, 1 - endAdjust / length);\n\n  const path = new Path2D();\n  ctx.beginPath();\n  path.moveTo(ps.x, ps.y);\n  path.quadraticCurveTo(cp.x, cp.y, pe.x, pe.y);\n  ctx.shadowColor = options.borderShadowColor;\n  ctx.stroke(path);\n  element.path = path;\n  element.ctx = ctx;\n  drawArrowHeadOnCurve(ctx, ps, {angle: startAngle, adjust: startAdjust}, startOpts);\n  drawArrowHeadOnCurve(ctx, pe, {angle: endAngle, adjust: endAdjust}, endOpts);\n}\n\nclass EllipseAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const rotation = this.options.rotation;\n    const borderWidth = this.options.borderWidth;\n    if (axis !== 'x' && axis !== 'y') {\n      return pointInEllipse({x: mouseX, y: mouseY}, this.getProps(['width', 'height', 'centerX', 'centerY'], useFinalPosition), rotation, borderWidth);\n    }\n    const {x, y, x2, y2} = this.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition);\n    const hBorderWidth = borderWidth / 2;\n    const limit = axis === 'y' ? {start: y, end: y2} : {start: x, end: x2};\n    const rotatedPoint = rotated({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), toRadians(-rotation));\n    return rotatedPoint[axis] >= limit.start - hBorderWidth - EPSILON && rotatedPoint[axis] <= limit.end + hBorderWidth + EPSILON;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {width, height, centerX, centerY, options} = this;\n    ctx.save();\n    translate(ctx, this.getCenterPoint(), options.rotation);\n    setShadowStyle(ctx, this.options);\n    ctx.beginPath();\n    ctx.fillStyle = options.backgroundColor;\n    const stroke = setBorderStyle(ctx, options);\n    ctx.ellipse(centerX, centerY, height / 2, width / 2, PI / 2, 0, 2 * PI);\n    ctx.fill();\n    if (stroke) {\n      ctx.shadowColor = options.borderShadowColor;\n      ctx.stroke();\n    }\n    ctx.restore();\n  }\n\n  get label() {\n    return this.elements && this.elements[0];\n  }\n\n  resolveElementProperties(chart, options) {\n    return resolveBoxAndLabelProperties(chart, options, true);\n  }\n\n}\n\nEllipseAnnotation.id = 'ellipseAnnotation';\n\nEllipseAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  init: undefined,\n  label: Object.assign({}, BoxAnnotation.defaults.label),\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  z: 0\n};\n\nEllipseAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nEllipseAnnotation.descriptors = {\n  label: {\n    _fallback: true\n  }\n};\n\nfunction pointInEllipse(p, ellipse, rotation, borderWidth) {\n  const {width, height, centerX, centerY} = ellipse;\n  const xRadius = width / 2;\n  const yRadius = height / 2;\n\n  if (xRadius <= 0 || yRadius <= 0) {\n    return false;\n  }\n  // https://stackoverflow.com/questions/7946187/point-and-ellipse-rotated-position-test-algorithm\n  const angle = toRadians(rotation || 0);\n  const hBorderWidth = borderWidth / 2 || 0;\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const a = Math.pow(cosAngle * (p.x - centerX) + sinAngle * (p.y - centerY), 2);\n  const b = Math.pow(sinAngle * (p.x - centerX) - cosAngle * (p.y - centerY), 2);\n  return (a / Math.pow(xRadius + hBorderWidth, 2)) + (b / Math.pow(yRadius + hBorderWidth, 2)) <= 1.0001;\n}\n\nclass PointAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const {x, y, x2, y2, width} = this.getProps(['x', 'y', 'x2', 'y2', 'width'], useFinalPosition);\n    const borderWidth = this.options.borderWidth;\n    if (axis !== 'x' && axis !== 'y') {\n      return inPointRange({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), width / 2, borderWidth);\n    }\n    const hBorderWidth = borderWidth / 2;\n    const limit = axis === 'y' ? {start: y, end: y2, value: mouseY} : {start: x, end: x2, value: mouseX};\n    return limit.value >= limit.start - hBorderWidth && limit.value <= limit.end + hBorderWidth;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const options = this.options;\n    const borderWidth = options.borderWidth;\n    if (options.radius < 0.1) {\n      return;\n    }\n    ctx.save();\n    ctx.fillStyle = options.backgroundColor;\n    setShadowStyle(ctx, options);\n    const stroke = setBorderStyle(ctx, options);\n    drawPoint(ctx, this, this.centerX, this.centerY);\n    if (stroke && !isImageOrCanvas(options.pointStyle)) {\n      ctx.shadowColor = options.borderShadowColor;\n      ctx.stroke();\n    }\n    ctx.restore();\n    options.borderWidth = borderWidth;\n  }\n\n  resolveElementProperties(chart, options) {\n    const properties = resolvePointProperties(chart, options);\n    properties.initProperties = initAnimationProperties(chart, properties, options, true);\n    return properties;\n  }\n}\n\nPointAnnotation.id = 'pointAnnotation';\n\nPointAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  init: undefined,\n  pointStyle: 'circle',\n  radius: 10,\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  xAdjust: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  xValue: undefined,\n  yAdjust: 0,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  yValue: undefined,\n  z: 0\n};\n\nPointAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nclass PolygonAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    if (axis !== 'x' && axis !== 'y') {\n      return this.options.radius >= 0.1 && this.elements.length > 1 && pointIsInPolygon(this.elements, mouseX, mouseY, useFinalPosition);\n    }\n    const rotatedPoint = rotated({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), toRadians(-this.options.rotation));\n    const axisPoints = this.elements.map((point) => axis === 'y' ? point.bY : point.bX);\n    const start = Math.min(...axisPoints);\n    const end = Math.max(...axisPoints);\n    return rotatedPoint[axis] >= start && rotatedPoint[axis] <= end;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {elements, options} = this;\n    ctx.save();\n    ctx.beginPath();\n    ctx.fillStyle = options.backgroundColor;\n    setShadowStyle(ctx, options);\n    const stroke = setBorderStyle(ctx, options);\n    let first = true;\n    for (const el of elements) {\n      if (first) {\n        ctx.moveTo(el.x, el.y);\n        first = false;\n      } else {\n        ctx.lineTo(el.x, el.y);\n      }\n    }\n    ctx.closePath();\n    ctx.fill();\n    // If no border, don't draw it\n    if (stroke) {\n      ctx.shadowColor = options.borderShadowColor;\n      ctx.stroke();\n    }\n    ctx.restore();\n  }\n\n  resolveElementProperties(chart, options) {\n    const properties = resolvePointProperties(chart, options);\n    const {sides, rotation} = options;\n    const elements = [];\n    const angle = (2 * PI) / sides;\n    let rad = rotation * RAD_PER_DEG;\n    for (let i = 0; i < sides; i++, rad += angle) {\n      const elProps = buildPointElement(properties, options, rad);\n      elProps.initProperties = initAnimationProperties(chart, properties, options);\n      elements.push(elProps);\n    }\n    properties.elements = elements;\n    return properties;\n  }\n}\n\nPolygonAnnotation.id = 'polygonAnnotation';\n\nPolygonAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  init: undefined,\n  point: {\n    radius: 0\n  },\n  radius: 10,\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  sides: 3,\n  xAdjust: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  xValue: undefined,\n  yAdjust: 0,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  yValue: undefined,\n  z: 0\n};\n\nPolygonAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nfunction buildPointElement({centerX, centerY}, {radius, borderWidth}, rad) {\n  const halfBorder = borderWidth / 2;\n  const sin = Math.sin(rad);\n  const cos = Math.cos(rad);\n  const point = {x: centerX + sin * radius, y: centerY - cos * radius};\n  return {\n    type: 'point',\n    optionScope: 'point',\n    properties: {\n      x: point.x,\n      y: point.y,\n      centerX: point.x,\n      centerY: point.y,\n      bX: centerX + sin * (radius + halfBorder),\n      bY: centerY - cos * (radius + halfBorder)\n    }\n  };\n}\n\nfunction pointIsInPolygon(points, x, y, useFinalPosition) {\n  let isInside = false;\n  let A = points[points.length - 1].getProps(['bX', 'bY'], useFinalPosition);\n  for (const point of points) {\n    const B = point.getProps(['bX', 'bY'], useFinalPosition);\n    if ((B.bY > y) !== (A.bY > y) && x < (A.bX - B.bX) * (y - B.bY) / (A.bY - B.bY) + B.bX) {\n      isInside = !isInside;\n    }\n    A = B;\n  }\n  return isInside;\n}\n\nconst annotationTypes = {\n  box: BoxAnnotation,\n  ellipse: EllipseAnnotation,\n  label: LabelAnnotation,\n  line: LineAnnotation,\n  point: PointAnnotation,\n  polygon: PolygonAnnotation\n};\n\n/**\n * Register fallback for annotation elements\n * For example lineAnnotation options would be looked through:\n * - the annotation object (options.plugins.annotation.annotations[id])\n * - element options (options.elements.lineAnnotation)\n * - element defaults (defaults.elements.lineAnnotation)\n * - annotation plugin defaults (defaults.plugins.annotation, this is what we are registering here)\n */\nObject.keys(annotationTypes).forEach(key => {\n  defaults.describe(`elements.${annotationTypes[key].id}`, {\n    _fallback: 'plugins.annotation.common'\n  });\n});\n\nconst directUpdater = {\n  update: Object.assign\n};\n\nconst hooks$1 = eventHooks.concat(elementHooks);\nconst resolve = (value, optDefs) => isObject(optDefs) ? resolveObj(value, optDefs) : value;\n\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import(\"chart.js\").UpdateMode } UpdateMode\n * @typedef { import('../../types/options').AnnotationPluginOptions } AnnotationPluginOptions\n */\n\n/**\n * @param {string} prop\n * @returns {boolean}\n */\nconst isIndexable = (prop) => prop === 'color' || prop === 'font';\n\n/**\n * Resolve the annotation type, checking if is supported.\n * @param {string} [type=line] - annotation type\n * @returns {string} resolved annotation type\n */\nfunction resolveType(type = 'line') {\n  if (annotationTypes[type]) {\n    return type;\n  }\n  console.warn(`Unknown annotation type: '${type}', defaulting to 'line'`);\n  return 'line';\n}\n\n/**\n * @param {Chart} chart\n * @param {Object} state\n * @param {AnnotationPluginOptions} options\n * @param {UpdateMode} mode\n */\nfunction updateElements(chart, state, options, mode) {\n  const animations = resolveAnimations(chart, options.animations, mode);\n\n  const annotations = state.annotations;\n  const elements = resyncElements(state.elements, annotations);\n\n  for (let i = 0; i < annotations.length; i++) {\n    const annotationOptions = annotations[i];\n    const element = getOrCreateElement(elements, i, annotationOptions.type);\n    const resolver = annotationOptions.setContext(getContext(chart, element, annotationOptions));\n    const properties = element.resolveElementProperties(chart, resolver);\n\n    properties.skip = toSkip(properties);\n\n    if ('elements' in properties) {\n      updateSubElements(element, properties.elements, resolver, animations);\n      // Remove the sub-element definitions from properties, so the actual elements\n      // are not overwritten by their definitions\n      delete properties.elements;\n    }\n\n    if (!defined(element.x)) {\n      // If the element is newly created, assing the properties directly - to\n      // make them readily awailable to any scriptable options. If we do not do this,\n      // the properties retruned by `resolveElementProperties` are available only\n      // after options resolution.\n      Object.assign(element, properties);\n    }\n\n    Object.assign(element, properties.initProperties);\n    properties.options = resolveAnnotationOptions(resolver);\n\n    animations.update(element, properties);\n  }\n}\n\nfunction toSkip(properties) {\n  return isNaN(properties.x) || isNaN(properties.y);\n}\n\nfunction resolveAnimations(chart, animOpts, mode) {\n  if (mode === 'reset' || mode === 'none' || mode === 'resize') {\n    return directUpdater;\n  }\n  return new Animations(chart, animOpts);\n}\n\nfunction updateSubElements(mainElement, elements, resolver, animations) {\n  const subElements = mainElement.elements || (mainElement.elements = []);\n  subElements.length = elements.length;\n  for (let i = 0; i < elements.length; i++) {\n    const definition = elements[i];\n    const properties = definition.properties;\n    const subElement = getOrCreateElement(subElements, i, definition.type, definition.initProperties);\n    const subResolver = resolver[definition.optionScope].override(definition);\n    properties.options = resolveAnnotationOptions(subResolver);\n    animations.update(subElement, properties);\n  }\n}\n\nfunction getOrCreateElement(elements, index, type, initProperties) {\n  const elementClass = annotationTypes[resolveType(type)];\n  let element = elements[index];\n  if (!element || !(element instanceof elementClass)) {\n    element = elements[index] = new elementClass();\n    Object.assign(element, initProperties);\n  }\n  return element;\n}\n\nfunction resolveAnnotationOptions(resolver) {\n  const elementClass = annotationTypes[resolveType(resolver.type)];\n  const result = {};\n  result.id = resolver.id;\n  result.type = resolver.type;\n  result.drawTime = resolver.drawTime;\n  Object.assign(result,\n    resolveObj(resolver, elementClass.defaults),\n    resolveObj(resolver, elementClass.defaultRoutes));\n  for (const hook of hooks$1) {\n    result[hook] = resolver[hook];\n  }\n  return result;\n}\n\nfunction resolveObj(resolver, defs) {\n  const result = {};\n  for (const prop of Object.keys(defs)) {\n    const optDefs = defs[prop];\n    const value = resolver[prop];\n    if (isIndexable(prop) && isArray(value)) {\n      result[prop] = value.map((item) => resolve(item, optDefs));\n    } else {\n      result[prop] = resolve(value, optDefs);\n    }\n  }\n  return result;\n}\n\nfunction getContext(chart, element, annotation) {\n  return element.$context || (element.$context = Object.assign(Object.create(chart.getContext()), {\n    element,\n    id: annotation.id,\n    type: 'annotation'\n  }));\n}\n\nfunction resyncElements(elements, annotations) {\n  const count = annotations.length;\n  const start = elements.length;\n\n  if (start < count) {\n    const add = count - start;\n    elements.splice(start, 0, ...new Array(add));\n  } else if (start > count) {\n    elements.splice(count, start - count);\n  }\n  return elements;\n}\n\nvar version = \"2.2.1\";\n\nconst chartStates = new Map();\nconst hooks = eventHooks.concat(elementHooks);\n\nvar annotation = {\n  id: 'annotation',\n\n  version,\n\n  beforeRegister() {\n    requireVersion('chart.js', '3.7', Chart.version);\n  },\n\n  afterRegister() {\n    Chart.register(annotationTypes);\n  },\n\n  afterUnregister() {\n    Chart.unregister(annotationTypes);\n  },\n\n  beforeInit(chart) {\n    chartStates.set(chart, {\n      annotations: [],\n      elements: [],\n      visibleElements: [],\n      listeners: {},\n      listened: false,\n      moveListened: false,\n      hooks: {},\n      hooked: false,\n      hovered: []\n    });\n  },\n\n  beforeUpdate(chart, args, options) {\n    const state = chartStates.get(chart);\n    const annotations = state.annotations = [];\n\n    let annotationOptions = options.annotations;\n    if (isObject(annotationOptions)) {\n      Object.keys(annotationOptions).forEach(key => {\n        const value = annotationOptions[key];\n        if (isObject(value)) {\n          value.id = key;\n          annotations.push(value);\n        }\n      });\n    } else if (isArray(annotationOptions)) {\n      annotations.push(...annotationOptions);\n    }\n    verifyScaleOptions(annotations, chart.scales);\n  },\n\n  afterDataLimits(chart, args) {\n    const state = chartStates.get(chart);\n    adjustScaleRange(chart, args.scale, state.annotations.filter(a => a.display && a.adjustScaleRange));\n  },\n\n  afterUpdate(chart, args, options) {\n    const state = chartStates.get(chart);\n    updateListeners(chart, state, options);\n    updateElements(chart, state, options, args.mode);\n    state.visibleElements = state.elements.filter(el => !el.skip && el.options.display);\n    updateHooks(chart, state, options);\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    draw(chart, 'beforeDatasetsDraw', options.clip);\n  },\n\n  afterDatasetsDraw(chart, _args, options) {\n    draw(chart, 'afterDatasetsDraw', options.clip);\n  },\n\n  beforeDraw(chart, _args, options) {\n    draw(chart, 'beforeDraw', options.clip);\n  },\n\n  afterDraw(chart, _args, options) {\n    draw(chart, 'afterDraw', options.clip);\n  },\n\n  beforeEvent(chart, args, options) {\n    const state = chartStates.get(chart);\n    if (handleEvent(state, args.event, options)) {\n      args.changed = true;\n    }\n  },\n\n  afterDestroy(chart) {\n    chartStates.delete(chart);\n  },\n\n  _getState(chart) {\n    return chartStates.get(chart);\n  },\n\n  defaults: {\n    animations: {\n      numbers: {\n        properties: ['x', 'y', 'x2', 'y2', 'width', 'height', 'centerX', 'centerY', 'pointX', 'pointY', 'radius'],\n        type: 'number'\n      },\n    },\n    clip: true,\n    interaction: {\n      mode: undefined,\n      axis: undefined,\n      intersect: undefined\n    },\n    common: {\n      drawTime: 'afterDatasetsDraw',\n      init: false,\n      label: {\n      }\n    }\n  },\n\n  descriptors: {\n    _indexable: false,\n    _scriptable: (prop) => !hooks.includes(prop) && prop !== 'init',\n    annotations: {\n      _allKeys: false,\n      _fallback: (prop, opts) => `elements.${annotationTypes[resolveType(opts.type)].id}`\n    },\n    interaction: {\n      _fallback: true\n    },\n    common: {\n      label: {\n        _indexable: isIndexable,\n        _fallback: true\n      },\n      _indexable: isIndexable\n    }\n  },\n\n  additionalOptionScopes: ['']\n};\n\nfunction draw(chart, caller, clip) {\n  const {ctx, chartArea} = chart;\n  const state = chartStates.get(chart);\n\n  if (clip) {\n    clipArea(ctx, chartArea);\n  }\n\n  const drawableElements = getDrawableElements(state.visibleElements, caller).sort((a, b) => a.element.options.z - b.element.options.z);\n  for (const item of drawableElements) {\n    drawElement(ctx, chartArea, state, item);\n  }\n\n  if (clip) {\n    unclipArea(ctx);\n  }\n}\n\nfunction getDrawableElements(elements, caller) {\n  const drawableElements = [];\n  for (const el of elements) {\n    if (el.options.drawTime === caller) {\n      drawableElements.push({element: el, main: true});\n    }\n    if (el.elements && el.elements.length) {\n      for (const sub of el.elements) {\n        if (sub.options.display && sub.options.drawTime === caller) {\n          drawableElements.push({element: sub});\n        }\n      }\n    }\n  }\n  return drawableElements;\n}\n\nfunction drawElement(ctx, chartArea, state, item) {\n  const el = item.element;\n  if (item.main) {\n    invokeHook(state, el, 'beforeDraw');\n    el.draw(ctx, chartArea);\n    invokeHook(state, el, 'afterDraw');\n  } else {\n    el.draw(ctx, chartArea);\n  }\n}\n\nexport { annotation as default };\n"],"names":["interaction","modes","point","state","event","filterElements","intersect","nearest","options","minDistance","Number","POSITIVE_INFINITY","reduce","nearestItems","element","center","getCenterPoint","evenPoint","axis","x","y","getPointByAxis","distance","distanceBetweenPoints","push","sort","a","b","_index","slice","getNearestItem","getElements","mode","visibleElements","filter","inRange","inRangeByAxis","isOlderPart","act","req","length","EPSILON","clamp","from","to","Math","min","max","clampAll","obj","_i","_Object$keys","Object","keys","key","inBoxRange","_ref","borderWidth","x2","y2","hBorderWidth","inRangeX","inRangeY","getElementCenterPoint","useFinalPosition","_element$getProps","getProps","centerX","centerY","isPercentString","s","endsWith","toPercent","parseFloat","toPositivePercent","getRelativePosition","size","position","getSize","value","positivePercent","arguments","undefined","toPosition","defaultValue","isObject","valueOrDefault","isBoundToPoint","defined","xValue","yValue","initAnimationProperties","chart","properties","centerBased","initAnim","init","applyDefault","result","checkCallbackResult","callback","loadHooks","hooks","hooksContainer","activated","forEach","hook","isFunction","_ref2","radius","width","height","widthCache","Map","fontsKey","fonts","prev","item","string","isImageOrCanvas","content","type","toString","translate","ctx","_ref3","rotation","rotate","toRadians","setBorderStyle","lineCap","borderCapStyle","setLineDash","borderDash","lineDashOffset","borderDashOffset","lineJoin","borderJoinStyle","lineWidth","strokeStyle","borderColor","setShadowStyle","shadowColor","backgroundShadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","measureLabelSize","optFont","font","isArray","map","f","toFont","strokeWidth","textStrokeWidth","lines","mapKey","join","_measureText","has","set","save","count","i","text","measureText","lineHeight","restore","calculateLabelSize","get","drawBox","rect","stroke","fillStyle","backgroundColor","beginPath","addRoundedRectPath","w","h","toTRBLCorners","borderRadius","closePath","fill","borderShadowColor","drawLabel","globalAlpha","elementValue","opacity","isNumber","getOpacity","style","drawImage","labels","optColor","color","colors","textAlign","calculateTextAlignment","textBaseline","miterLimit","textStrokeColor","setTextStrokeStyle","_ref5","lhs","l","lh","strokeText","applyLabelDecoration","_ref6","_ref7","c","fillText","applyLabelContent","drawPoint","pointStyle","rad","RAD_PER_DEG","isNaN","notRadius","_ref4","xOffset","yOffset","cornerRadius","arc","TAU","moveTo","sin","cos","TWO_THIRDS_PI","lineTo","QUARTER_PI","PI","HALF_PI","SQRT1_2","drawPointStyle","limitedLineScale","xScaleID","start","end","startProp","endProp","yScaleID","scaleValue","scale","fallback","parse","isFinite","getPixelForValue","retrieveScaleID","scales","scaleID","charAt","axes","values","id","getDimensionByScale","reverse","getChartPoint","chartArea","xScale","yScale","left","top","resolveBoxProperties","_ref8","right","_ref9","bottom","xDim","getChartDimensionByScale","xMin","xMax","yDim","yMin","yMax","resolvePointProperties","box","adjustCenterX","xAdjust","adjustCenterY","yAdjust","getChartCircle","resolveLineProperties","area","NaN","endValue","isHorizontal","resolveFullLineProperties","_i2","_Object$keys2","scaleId","_limitedLineScale$sca","dim","resolveLimitedLineProperties","resolveBoxAndLabelProperties","initProperties","elements","optionScope","resolveLabelElementProperties$1","calculatePosition$1","boxOpts","labelOpts","_labelOpts$padding","padding","padStart","padEnd","adjust","label","callout","display","toPadding","labelSize","_ref10","calculateX","_ref11","calculateY","rotated","angle","cx","cy","moveHooks","eventHooks","concat","handleEvent","listened","moveListened","previous","hovered","context","changed","dispatchMoveEvents","handleMoveEvents","_step3","listeners","_iterator3","_createForOfIteratorHelper","n","done","dispatchEvent","click","err","e","handleClickEvents","_ref12","checkElements","_step2","_iterator2","indexOf","handler","$context","elementHooks","invokeHook","hooked","callbackHook","adjustScaleRange","annotations","range","_step5","scaleIDOption","limits","NEGATIVE_INFINITY","_iterator5","annotation","updateLimits","getScaleLimits","changeScaleLimit","handleTickRangeOptions","limit","suggestedLimit","scaleOptions","scaleLimitDefined","verifyScaleIDs","_i3","_arr","verifyProperties","console","warn","_i4","_arr2","prop","props","_step6","_iterator6","raw","BoxAnnotation","_Element","_inherits","_super","_createSuper","_classCallCheck","apply","_createClass","mouseX","mouseY","_rotated","this","Element","defaults","drawTime","family","weight","z","defaultRoutes","descriptors","_fallback","positions","LabelAnnotation","_Element2","_super2","_rotated2","visible","_visible","pointX","pointY","calloutPosition","includes","xPoints","yPoints","index","rotatedPoint","resolveCalloutAutoPosition","resolveCalloutPosition","margin","isPointInRange","_getCalloutSeparatorC","separatorStart","separatorEnd","getCalloutSeparatorAdjust","getCalloutSeparatorCoord","_getCalloutSideCoord","sideStart","sideEnd","side","getCalloutSideAdjust","getCalloutSideCoord","drawCallout","_ref13","getLabelSize","_resolveBoxProperties","boxSize","calculatePosition","measureRect","_objectSpread","pointInLine","p1","p2","t","interpolateX","abs","interpolateY","sqr","v","coordInCurve","cp","pointInCurve","coordAngleInCurve","angleInCurve","atan2","LineAnnotation","_Element3","_super3","path","mx","currentDevicePixelRatio","my","isPointInStroke","isOnLabel","_ref21","xx","yy","epsilon","_element$getProps2","x1","y1","dx","dy","lenSq","intersects","_ref15","_ref16","_ref14","rangeLimit","inAxisRange","sqrt","pow","curve","_getArrowHeads2","getArrowHeads","startOpts","endOpts","startAdjust","endAdjust","startAngle","endAngle","ps","pe","Path2D","quadraticCurveTo","drawArrowHeadOnCurve","drawCurve","_getArrowHeads","drawArrowHead","inside","_ref17","_ref18","isLineInArea","_limitPointToArea","limitPointToArea","_limitPointToArea2","limitLineToArea","controlPoint","getControlPoint","labelProperties","textSize","sizes","calculateAutoRotation","rotatedSize","space","r","spaceAround","calculateTAdjust","calculateT","pt","xCoordinateSizes","yCoordinateSizes","adjustLabelCoordinate","toDegrees","calculateLabelPosition","resolveLabelElementProperties","arrowHeadsDefaults","_ref19","_ref20","_ref22","lineSize","lineW","lineH","coordinate","labelSizes","halfSize","line","arrowStartOpts","arrowHeads","arrowEndOpts","getLineAdjust","arrowOpts","offset","arrowOffsetX","_ref23","_ref24","assign","EllipseAnnotation","_Element4","_super4","p","ellipse","xRadius","yRadius","cosAngle","sinAngle","pointInEllipse","_this$getProps","PointAnnotation","_Element5","_super5","_this$getProps2","inPointRange","PolygonAnnotation","_Element6","_super6","points","_step8","isInside","A","_iterator8","B","bY","bX","pointIsInPolygon","axisPoints","_toConsumableArray","_step7","first","_iterator7","el","sides","elProps","buildPointElement","_ref25","_ref26","halfBorder","annotationTypes","polygon","directUpdater","update","hooks$1","resolve","optDefs","resolveObj","isIndexable","resolveType","updateElements","animations","animOpts","Animations","resolveAnimations","add","splice","Array","resyncElements","annotationOptions","getOrCreateElement","resolver","setContext","getContext","resolveElementProperties","skip","toSkip","updateSubElements","resolveAnnotationOptions","mainElement","subElements","definition","subElement","subResolver","override","elementClass","_step9","_iterator9","defs","_loop","_Object$keys3","_i5","create","chartStates","version","beforeRegister","pkg","ver","_step","strict","parts","split","_iterator","parseInt","Error","requireVersion","Chart","afterRegister","afterUnregister","beforeInit","beforeUpdate","args","_step4","_iterator4","verifyScaleOptions","afterDataLimits","afterUpdate","_getElements","scope","updateListeners","updateHooks","beforeDatasetsDraw","_args","draw","clip","afterDatasetsDraw","beforeDraw","afterDraw","beforeEvent","afterDestroy","delete","_getState","numbers","common","_indexable","_scriptable","_allKeys","opts","additionalOptionScopes","caller","clipArea","_step10","drawableElements","_step11","_iterator11","main","_step12","_iterator12","sub","getDrawableElements","_iterator10","drawElement","unclipArea"],"sourceRoot":""}